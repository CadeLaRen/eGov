<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd" default-lazy-init="true">
		
  	<tx:annotation-driven transaction-manager="transactionManager" />
  
	<context:component-scan base-package="org.egov.infra"/>
	<context:component-scan base-package="org.egov.lib"/>
	<context:component-scan base-package="org.egov.infstr"/>
	
	<jpa:repositories base-package="org.egov.infra"/>
	<jpa:auditing auditor-aware-ref="springSecurityAwareAuditor"/>
	
	<alias name="${fileStoreServiceBeanName}" alias="fileStoreService" />
	
	<bean class="org.egov.EgovSpringContextHolder" lazy-init="false"/>

	<bean id="genericCommonsService" class="org.egov.infstr.commons.service.GenericCommonsServiceImpl">
		<constructor-arg ref="genericDao" />
	</bean>

	<bean id="rbacService" class="org.egov.lib.rrbac.services.RbacServiceImpl" />

	<!-- <bean id="roleService" class="org.egov.lib.rjbac.role.ejb.server.RoleServiceImpl" /> -->

	<bean id="userService" class="org.egov.lib.rjbac.user.ejb.server.UserServiceImpl" >
		<constructor-arg ref="sessionFactory" />
		<constructor-arg ref="userDao" />
	</bean>

	<bean id="boundaryService" class="org.egov.lib.admbndry.ejb.server.BoundaryServiceImpl">
		<property name="boundaryDAO" ref="boundaryDAO" />
		<property name="boundaryTypeService" ref="boundaryTypeService" />
		<property name="heirarchyTypeService" ref="heirarchyTypeService"/>
	</bean>

	<bean id="heirarchyTypeService" class="org.egov.lib.admbndry.ejb.server.HeirarchyTypeServiceImpl" >
		<property name="heirarchyTypeDAO" ref="heirarchyTypeDAO"/>
	</bean>
 
	<bean id="boundaryTypeService" class="org.egov.lib.admbndry.ejb.server.BoundaryTypeServiceImpl">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="commonsDAOFactory" class="org.egov.commons.dao.CommonsDAOFactory">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="commonsService" class="org.egov.commons.service.CommonsServiceImpl">
		<constructor-arg ref="commonsDAOFactory"/>
		<constructor-arg ref="genericDao"/>
		<constructor-arg ref="sessionFactory"/>
	</bean>

	<bean id="departmentService" class="org.egov.lib.rjbac.dept.ejb.server.DepartmentServiceImpl">
		<constructor-arg ref="departmentDao" />
	</bean>
	
	<bean id="beanProvider" class="org.egov.infstr.beanfactory.ApplicationContextBeanProvider" />

	<bean id="egovSessionFactory" class="org.egov.infstr.services.SessionFactory" />

	<bean id="persistenceService" class="org.egov.infstr.services.PersistenceService">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sequenceGenerator" class="org.egov.infstr.utils.SequenceGenerator" scope="prototype" autowire-candidate="true">
		<constructor-arg index="0" ref="sessionFactory" />
	</bean>
	<!-- this is the new bean which all modules should eventually move to. It 
		uses database sequences. -->
	<bean id="sequenceNumberGenerator" class="org.egov.infstr.utils.SequenceNumberGenerator" scope="prototype" autowire-candidate="true">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="domainDAO" class="org.egov.infstr.flexfields.DomainDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<!-- Bean for report service. constructor arguments: arg0 => Report Template 
		Cache minimum size arg1 => Report Template Cache maximum size -->
	<bean id="reportService" class="org.egov.infstr.reporting.engine.jasper.JasperReportService" lazy-init="false">
		<constructor-arg value="10" />
		<constructor-arg value="30" />
	</bean>

	<bean id="scriptService" parent="persistenceService" autowire-candidate="true">
		<property name="type" value="org.egov.infstr.models.Script"/>
	</bean>

	<!-- Bean for script execution service. constructor arguments: arg0 => Script 
		Engine Cache minimum size arg1 => Script Engine Cache maximum size arg2 => 
		Script Cache minimum size arg3 => Script Cache maximum size -->
	<bean id="scriptExecutionService" class="org.egov.infstr.services.ScriptService" parent="persistenceService" autowire-candidate="true">
		<constructor-arg index="0" value="2" />
		<constructor-arg index="1" value="5" />
		<constructor-arg index="2" value="10" />
		<constructor-arg index="3" value="30" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="userPersistenceService" parent="persistenceService">
		<property name="type" value="org.egov.infra.admin.master.entity.User"/>
	</bean>

	<bean id="genericDao" class="org.egov.infstr.commons.dao.GenericHibernateDaoFactory" scope="prototype">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="installmentDao" class="org.egov.commons.dao.InstallmentHibDao" scope="prototype" />

	<bean id="errorMailService" class="org.egov.infstr.mail.MailService">
		<property name="mailMessage" ref="mailMessage" />
		<property name="mailSender" ref="mailSender" />
		<property name="mailType" value="errormail" /><!--Tag name of mail property defined in egov-config.xml -->
	</bean>

	<bean id="feedbackMailService" class="org.egov.infstr.mail.MailService">
		<property name="mailMessage" ref="mailMessage" />
		<property name="mailSender" ref="mailSender" />
		<property name="mailType" value="feedbackmail" /> <!--Tag name of mail property defined in egov-config.xml -->
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl" />


	<bean id="customizedWorkFlowService" class="org.egov.infstr.workflow.CustomizedWorkFlowService">
		<property name="persistenceService" ref="persistenceService" />
		<property name="workflowService" ref="workflowService" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="authRuleService" parent="persistenceService" autowire-candidate="true">
		<property name="type" value="org.egov.lib.rrbac.model.AuthorizationRule"/>
	</bean>

	<bean id="RuleInterceptorFilter" class="org.egov.lib.rrbac.filter.RuleInterceptorFilter">
		<property name="userService" ref="userService" />
		<property name="actionDao" ref="actionDao" />
		<property name="daoService" ref="persistenceService" />
		<property name="scriptExecuter" ref="scriptExecutionService" />
		<property name="authRuleService" ref="authRuleService" />
	</bean>

	<bean id="SetSessionVarFilter" class="org.egov.infstr.client.filter.SetSessionVarFilter">
		<property name="userService" ref="userService" />
	</bean>

	<bean id="boundaryDAO" class="org.egov.lib.admbndry.BoundaryDAO" scope="prototype">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="boundaryTypeDAO" class="org.egov.lib.admbndry.BoundaryTypeDAO" scope="prototype" >
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="heirarchyTypeDAO" class="org.egov.lib.admbndry.HeirarchyTypeDAO" scope="prototype">
		<constructor-arg ref="sessionFactory"/>
	</bean>

	<bean id="cityWebsiteDAO" class="org.egov.lib.admbndry.CityWebsiteDAO" scope="prototype" >
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="moduleDAO" class="org.egov.infstr.commons.dao.ModuleHibDao">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="userDao" class="org.egov.lib.rjbac.user.dao.UserDAO" scope="prototype" >
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="userCounterDao" class="org.egov.lib.security.terminal.dao.UserCounterHibernateDAO" scope="prototype">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="departmentDao" class="org.egov.lib.rjbac.dept.dao.DepartmentDAO" scope="prototype" />

	<bean id="actionDao" class="org.egov.lib.rrbac.dao.ActionHibernateDAO" scope="prototype" autowire="default">
	</bean>

	<bean id="userValidateDao" class="org.egov.lib.security.terminal.dao.UserValidateHibernateDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="attributeDao" class="org.egov.infstr.flexfields.AttributeDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="bankAccountDao" class="org.egov.commons.dao.BankaccountDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="bankBranchDao" class="org.egov.commons.dao.BankbranchDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="bankDao" class="org.egov.commons.dao.BankDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="attributeTypeDao" class="org.egov.infstr.flexfields.AttributeTypeDAO">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="workflowAdmin" class="org.egov.infstr.workflow.admin.WorkflowAdminService">
		<property name="persistenceService" ref="persistenceService" />
		<property name="userService" ref="userService" />
		<property name="eisService" ref="eisService" />
	</bean>

	<bean id="moveBoundaryDelegate" class="org.egov.infstr.client.delegate.MoveBoundaryDelegate" scope="prototype">
		<property name="boundaryDAO" ref="boundaryDAO" />
	</bean>

	<bean id="favouriteService" parent="persistenceService" autowire-candidate="true">
		<property name="type" value="org.egov.infstr.models.Favourites"/>
	</bean>

	<bean id="workFlowMatrixService" class="org.egov.infstr.workflow.WorkFlowMatrixService" parent="persistenceService" scope="prototype">
		<property name="type" value="org.egov.infstr.workflow.WorkFlowMatrix"/>
		<property name="persistenceService" ref="persistenceService" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="workFlowAdditionalDetailsService" class="org.egov.infstr.workflow.WorkFlowAdditionalDetailsService" parent="persistenceService" scope="prototype">
		<property name="type" value="org.egov.infstr.workflow.WorkFlowAdditionalRule"/>
		<property name="persistenceService" ref="persistenceService" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="userDelegate" class="org.egov.infstr.client.delegate.UserDelegate">
		<property name="userService" ref="userService"/>
		<property name="boundaryService" ref="boundaryService"/>
		<property name="boundaryTypeService" ref="boundaryTypeService"/>
		<property name="departmentService" ref="departmentService"/>
		<property name="heirarchyTypeService" ref="heirarchyTypeService"/>
		<!-- <property name="roleService" ref="roleService"/> -->
		<property name="egovInfrastrUtil" ref="egovInfrastructureUtil"/>
	</bean>

	<bean id="egovInfrastructureUtil" class="org.egov.commons.utils.EgovInfrastrUtil">
		<property name="userDAO" ref="userDao" />
	</bean>
	<bean id="roleDAO" class="org.egov.lib.rjbac.role.dao.RoleDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="eisService" class="org.egov.pims.service.EisUtilService" scope="prototype" lazy-init="true">
		<property name="persistenceService" ref="persistenceService" />
	</bean>
	
	<!-- Use this only for generic hibernate query -->
	<bean id="entityQueryService" class="org.egov.infstr.services.PersistenceService">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- NEW WORKFLOW ADDITIONS -->
	
	<bean id="statePersistenceService" parent="persistenceService">
		<property name="type" value="org.egov.infra.workflow.entity.State" />
	</bean>
	
	<bean id="stateAwarePersistenceService" parent="persistenceService">
		<property name="type" value="org.egov.infra.workflow.entity.StateAware" />
	</bean>
	
	<bean id="scriptPersistenceService" parent="persistenceService">
		<property name="type" value="org.egov.infstr.models.Script" />
	</bean>
	
	<bean id="actionPersistenceService" parent="persistenceService">
		<property name="type" value="org.egov.infstr.workflow.Action" />
	</bean>
	
	<bean id="workflowTypePersistenceService" parent="persistenceService">
		<property name="type" value="org.egov.infra.workflow.entity.WorkflowTypes" />
	</bean>
	
	<!-- 
		This is a generic bean so do not use this to do transition of your own StateAware objects
		For your own StateAware object transition declare a separate bean definition
		like 
		<bean id="myStateAwareWorkflowService" parent="workflowService">
			<constructor-arg index="0" ref="myStateAwarePersistenceService"/>
		</bean>
	-->
	<bean id="workflowService" class="org.egov.infra.workflow.service.SimpleWorkflowService" scope="prototype">
		<constructor-arg index="0" ref="stateAwarePersistenceService" />
		<property name="scriptExecutionService" ref="scriptExecutionService"/>
		<property name="actionPersistenceService" ref="actionPersistenceService"/>
		<property name="scriptPersistenceService" ref="scriptPersistenceService"/>
	</bean>
	
</beans>