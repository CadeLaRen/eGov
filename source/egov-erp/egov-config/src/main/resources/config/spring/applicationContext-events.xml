<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd"
       default-lazy-init="true">

    <!-- ####################################### -->
    <!-- JMS Spring Beans -->
    <!-- ####################################### -->

    <tx:jta-transaction-manager id="transactionManager"/>

    <jee:jndi-lookup id="jmsConnectionFactory" jndi-name="java:/ConnectionFactory"
                     resource-ref="true">
        <jee:environment>
            java.naming.factory.initial=org.jboss.as.naming.InitialContextFactory
            java.naming.provider.url=jnp://localhost:1099
            java.naming.factory.url.pkgs=org.jnp.interfaces:org.jboss.naming
        </jee:environment>
    </jee:jndi-lookup>

    <bean id="cacheConnectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory">
            <ref bean="jmsConnectionFactory"/>
        </property>
        <property name="sessionCacheSize" value="10"/>
        <property name="cacheProducers" value="false"/>
        <property name="clientId" value="myDurableConsumer.instance.01"/>
    </bean>

    <bean id="eventQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>queue/event</value>
        </property>
    </bean>

    <!-- <bean id="testTopic" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName"> <value>topic/test</value> </property> </bean> -->

    <!-- JMS Queue Template -->
    <bean id="queueJmsTemplate" class="org.springframework.jms.core.JmsTemplate"
          scope="prototype">
        <property name="connectionFactory">
            <ref bean="cacheConnectionFactory"/>
        </property>
        <property name="defaultDestination">
            <ref bean="eventQueue"/>
        </property>

    </bean>

    <bean id="eventProcessSpecService"
          class="org.egov.infstr.events.domain.service.EventProcessorSpecService" scope="prototype">
        <property name="persistenceService" ref="persistenceService"/>
    </bean>

    <bean id="responseHandler"
          class="org.egov.infstr.events.processing.ResponseHandlerImpl" scope="prototype">
        <constructor-arg ref="genericDao"/>
    </bean>

    <bean id="eventResultService"
          class="org.egov.infstr.events.domain.service.EventResultService" scope="prototype">
        <property name="persistenceService" ref="persistenceService"/>
    </bean>

    <bean id="eventProcessor"
          class="org.egov.infstr.events.processing.EventProcessor" scope="prototype">
        <property name="eventProcessSpecService" ref="eventProcessSpecService"/>
        <property name="eventResultService" ref="eventResultService"/>
        <property name="responseHandler">
            <ref bean="responseHandler"/>
        </property>
    </bean>


    <bean id="eventService" class="org.egov.infstr.events.domain.service.EventService"
          scope="prototype">
    </bean>

    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean
       below)
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
        the transactional semantics...
       <tx:attributes>
           <tx:method name="send*" propagation="REQUIRED" />
           <tx:method name="*" propagation="SUPPORTS" read-only="true" />
       </tx:attributes>
   </tx:advice>

   ensure that the above transactional advice runs for any execution of
       an operation defined by the EventService
   <aop:config>
       <aop:pointcut id="EventServiceImplOperation" expression="execution(* *..EventService.*(..))" />
       <aop:advisor advice-ref="txAdvice" pointcut-ref="EventServiceImplOperation" />
   </aop:config>  -->

    <bean name="queueEventListener" class="org.egov.infstr.events.processing.EventListener"
          scope="prototype">
        <property name="eventProcessor">
            <ref bean="eventProcessor"/>
        </property>
    </bean>

    <jms:listener-container connection-factory="jmsConnectionFactory" transaction-manager="transactionManager">
        <jms:listener id="queueListenerContainer" destination="eventQueue" ref="queueEventListener"/>
    </jms:listener-container>

</beans>

