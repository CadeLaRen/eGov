<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">




<bean name="tradelicenseSchedular" id="tradelicenseSchedular" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy" lazy-init="false">
	 	         <property name="overwriteExistingJobs" value="true"/>
	 	         <property name="autoStartup" value="true" />
	 	         <property name="jobFactory" ref="jobFactory"/>
	 	         <property name="taskExecutor" ref="taskExecutor" />
	 	         <property name="waitForJobsToCompleteOnShutdown" value="true"/>

		<property name="schedulerName" value="tradelicense-scheduler"/>
		<property name="triggers">
	    	<list>
				<ref bean="dailyCancelProvisionalNocTradeJobCronTrigger" />
	    	</list>
		</property>	
		<property name="applicationContextSchedulerContextKey" value="applicationQuartzContext-tradelicense" />   
		
		
		
		
		 <property name="quartzProperties">
        	<props>
        		<!-- Scheduler Properties -->
        		<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            	<prop key="org.quartz.scheduler.instanceName">eGovScheduler-TL</prop>
            	<prop key="org.quartz.scheduler.wrapJobExecutionInUserTransaction">true</prop>
        		<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
        		<prop key="org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer">true</prop>
        		
        		<!-- Job Store and Clustering Properties -->
        		<prop key="org.quartz.jobStore.isClustered">false</prop>
        		<prop key="org.quartz.jobStore.clusterCheckinInterval">60000</prop>
        		<prop key="org.quartz.jobStore.acquireTriggersWithinLock">false</prop>
        		<prop key="org.quartz.jobStore.txIsolationLevelReadCommitted">true</prop>
        		<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
           		<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.oracle.OracleDelegate</prop>
        		<prop key="org.quartz.jobStore.useProperties">true</prop>
        		<prop key="org.quartz.jobStore.dataSource">quartzDS</prop>
        		<prop key="org.quartz.jobStore.nonManagedTXDataSource">quartzNoTXDS</prop>
        		<prop key="org.quartz.jobStore.tablePrefix">QRTZ_TL_</prop>
        		<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreCMT</prop>
				<prop key="org.quartz.jobStore.dontSetNonManagedTXConnectionAutoCommitFalse">false</prop>        		
				<prop key="org.quartz.jobStore.dontSetAutoCommitFalse">true</prop>
        		
        		<!-- Datasource Properties -->
        		<prop key="org.quartz.dataSource.quartzDS.jndiURL">java:/ezgovDatabasePool</prop>
        		<prop key="org.quartz.dataSource.quartzNoTXDS.jndiURL">java:/ezgovDatabasePoolNoTX</prop>
        		
        		<!-- Logger Plugin Properties -->       		
           		<prop key="org.quartz.plugin.jobHistory.class">org.quartz.plugins.history.LoggingJobHistoryPlugin</prop>        		
        		<prop key="org.quartz.plugin.jobHistory.jobToBeFiredMessage">Job [{1}.{0}] to be fired by trigger [{4}.{3}], re-fire: {7}</prop>
        		<prop key="org.quartz.plugin.jobHistory.jobSuccessMessage">Job [{1}.{0}] execution complete and reports: {8}</prop>
        		<prop key="org.quartz.plugin.jobHistory.jobFailedMessage">Job [{1}.{0}] execution failed with exception: {8}</prop>
        		<prop key="org.quartz.plugin.jobHistory.jobWasVetoedMessage">Job [{1}.{0}] was vetoed. It was to be fired by trigger [{4}.{3}] at: {2, date, dd-MM-yyyy HH:mm:ss.SSS}</prop>
           		<prop key="org.quartz.plugin.triggerHistory.class">org.quartz.plugins.history.LoggingTriggerHistoryPlugin</prop>
        		<prop key="org.quartz.plugin.triggerHistory.triggerFiredMessage">Trigger [{1}.{0}] fired job [{6}.{5}] scheduled at: {2, date, dd-MM-yyyy HH:mm:ss.SSS}, next scheduled at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}</prop>
        		<prop key="org.quartz.plugin.triggerHistory.triggerCompleteMessage">Trigger [{1}.{0}] completed firing job [{6}.{5}] with resulting trigger instruction code: {9}. Next scheduled at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}</prop>
        		<prop key="org.quartz.plugin.triggerHistory.triggerMisfiredMessage">Trigger [{1}.{0}] misfired job [{6}.{5}]. Should have fired at: {3, date, dd-MM-yyyy HH:mm:ss.SSS}</prop>
	       		
	       		<!-- Scheduler Shutdown Hook Plugin Properties-->
	       		<prop key="org.quartz.plugin.shutdownHook.class">org.quartz.plugins.management.ShutdownHookPlugin</prop>
        		<prop key="org.quartz.plugin.shutdownHook.cleanShutdown">true</prop>
        	</props>
        </property>
		
   </bean>
	  
   <!-- Add description for dailyCancelProvisionalNocTradeJobBean -->
 	 
   <bean name="dailyCancelProvisionalNocTradeJobBean" id="dailyCancelProvisionalNocTradeJobBean" class="org.springframework.scheduling.quartz.JobDetailBean"> 
		<property name="group" value="TRADELICENSE_JOB_GROUP"/>
   		<property name="name" value="Daily Cancel Provisional NOC Trade Job"/> 
   		<property name="jobClass" value="org.egov.license.trade.tradescheduler.DailyCancelProvisionalNocTradeJob"/>
   		<property name="requestsRecovery" value="true"/>
		<property name="jobDataAsMap">
            <map>
                <entry key="jobBeanName" value="dailyCancelProvisionalNocTradeJob"/>
				<entry key="userName" value="egovernments"/>
				<entry key="transactional"  value="true" />
				<entry key="moduleName" value="tradelicense"/>
            </map>
        </property>
	</bean>
	
	<bean id="dailyCancelProvisionalNocTradeJob" class="org.egov.license.trade.tradescheduler.DailyCancelProvisionalNocTradeJob" lazy-init="true" scope="prototype">
        <property name="persistenceService" ref="persistenceService" />
		<property name="auditEventService" ref="auditEventService" />
    </bean>
   
    <bean id="dailyCancelProvisionalNocTradeJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" >
		<property name="jobDetail" ref="dailyCancelProvisionalNocTradeJobBean" />
		<property name="group" value="TRADELICENSE_TRIGGER_GROUP"/>
		<property name="name" value="Daily Cancel Provisional NOC Trade Trigger"/>
		<property name="cronExpression" value="0 0 1 * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING"/>
	</bean>
     
     <!-- END dailyCancelProvisionalNocTradeJobBean -->    
</beans>
