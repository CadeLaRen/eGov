#UP

/* ACCOUNTDETAILKEY */

ALTER TABLE ACCOUNTDETAILKEY DROP PRIMARY KEY CASCADE;
DROP TABLE ACCOUNTDETAILKEY CASCADE CONSTRAINTS;

CREATE TABLE ACCOUNTDETAILKEY
(
  ID            NUMBER                          NOT NULL,
  GROUPID       NUMBER                          NOT NULL,
  GLCODEID      NUMBER,
  DETAILTYPEID  NUMBER                          NOT NULL,
  DETAILNAME    VARCHAR2(50 BYTE)               NOT NULL,
  DETAILKEY     NUMBER                          NOT NULL
);

    
/* ACCOUNTDETAILTYPE */

ALTER TABLE ACCOUNTDETAILTYPE DROP PRIMARY KEY CASCADE;
DROP TABLE ACCOUNTDETAILTYPE CASCADE CONSTRAINTS;

CREATE TABLE ACCOUNTDETAILTYPE
(
  ID             NUMBER                         NOT NULL,
  NAME           VARCHAR2(50 BYTE)              NOT NULL,
  DESCRIPTION    VARCHAR2(50 BYTE)              NOT NULL,
  TABLENAME      VARCHAR2(25 BYTE),
  COLUMNNAME     VARCHAR2(25 BYTE),
  ATTRIBUTENAME  VARCHAR2(50 BYTE)              NOT NULL,
  NBROFLEVELS    NUMBER                         NOT NULL,
  ISACTIVE       NUMBER(1),
  CREATED        DATE,
  LASTMODIFIED   DATE,
  MODIFIEDBY     NUMBER(10)
);


/* ACCOUNTENTITYMASTER */

ALTER TABLE ACCOUNTENTITYMASTER DROP PRIMARY KEY CASCADE;
DROP TABLE ACCOUNTENTITYMASTER CASCADE CONSTRAINTS;

CREATE TABLE ACCOUNTENTITYMASTER
(
  ID            NUMBER,
  NAME          VARCHAR2(50 BYTE),
  CODE          VARCHAR2(25 BYTE),
  DETAILTYPEID  NUMBER,
  NARRATION     VARCHAR2(250 BYTE),
  ISACTIVE      NUMBER(1),
  LASTMODIFIED  DATE,
  MODIFIEDBY    NUMBER,
  CREATED       DATE
);

/*   ACCOUNTGROUP  */

ALTER TABLE ACCOUNTGROUP DROP PRIMARY KEY CASCADE;
DROP TABLE ACCOUNTGROUP CASCADE CONSTRAINTS;

CREATE TABLE ACCOUNTGROUP
(
  ID           NUMBER                           NOT NULL,
  NAME         VARCHAR2(50 BYTE)                NOT NULL,
  NBROFLEVELS  NUMBER                           NOT NULL
);


 /* BANKENTRIES */
 
ALTER TABLE BANKENTRIES DROP PRIMARY KEY CASCADE;
DROP TABLE BANKENTRIES CASCADE CONSTRAINTS;

 CREATE TABLE BANKENTRIES
 (
   ID               NUMBER,
   BANKACCOUNTID    NUMBER                       NOT NULL,
   REFNO            VARCHAR2(20 BYTE)            NOT NULL,
   TYPE             CHAR(1 BYTE)                 NOT NULL,
   TXNDATE          DATE                         NOT NULL,
   TXNAMOUNT        NUMBER                       NOT NULL,
   GLCODEID         NUMBER,
   VOUCHERHEADERID  NUMBER,
   REMARKS          VARCHAR2(100 BYTE),
   ISREVERSED       NUMBER(1)
 );
 

/*  BANKRECONCILIATION */

ALTER TABLE BANKRECONCILIATION DROP PRIMARY KEY CASCADE;
DROP TABLE BANKRECONCILIATION CASCADE CONSTRAINTS;

CREATE TABLE BANKRECONCILIATION
(
  ID                  NUMBER                    NOT NULL,
  BANKACCOUNTID       NUMBER,
  VOUCHERHEADERID     NUMBER,
  ISRECONCILED        NUMBER(1)                 NOT NULL,
  CHEQUEDATE          DATE,
  CHEQUENUMBER        VARCHAR2(20 BYTE),
  AMOUNT              NUMBER(15,2),
  RECONCILIATIONDATE  DATE,
  TRANSACTIONDATE     DATE,
  TRANSACTIONBALANCE  NUMBER(15,2),
  TRANSACTIONTYPE     VARCHAR2(2 BYTE)          NOT NULL,
  BANKADVICEREF       VARCHAR2(250 BYTE),
  ISREVERSED          NUMBER(1),
  TYPE                CHAR(1 BYTE),
  RECCHEQUEDATE       DATE,
  ISDISHONORED        NUMBER
);

/*  BILLCOLLECTOR */

--ALTER TABLE BILLCOLLECTOR DROP PRIMARY KEY CASCADE;
--DROP TABLE BILLCOLLECTOR CASCADE CONSTRAINTS;

CREATE TABLE BILLCOLLECTOR
(
  ID            NUMBER                          NOT NULL,
  CODE          VARCHAR2(10 BYTE)               NOT NULL,
  NAME          VARCHAR2(50 BYTE)               NOT NULL,
  DEPARTMENTID  NUMBER                          NOT NULL,
  CASHINHAND    NUMBER,
  CHEQUEINHAND  NUMBER,
  TYPE          VARCHAR2(50 BYTE)               NOT NULL,
  ZONEID        NUMBER,
  REGIONID      NUMBER,
  NARRATION     VARCHAR2(250 BYTE),
  ISACTIVE      NUMBER(1)                       NOT NULL,
  LASTMODIFIED  DATE,
  CREATED       DATE                            NOT NULL,
  MODIFIEDBY    NUMBER
);

/*  BILLCOLLECTORDETAIL */

--ALTER TABLE BILLCOLLECTORDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE BILLCOLLECTORDETAIL CASCADE CONSTRAINTS;

CREATE TABLE BILLCOLLECTORDETAIL
(
  ID               NUMBER                       NOT NULL,
  BILLCOLLECTORID  NUMBER                       NOT NULL,
  WARDID           NUMBER
);

/*  CHARTOFACCOUNTDETAIL */

ALTER TABLE CHARTOFACCOUNTDETAIL DROP PRIMARY KEY CASCADE;
DROP TABLE CHARTOFACCOUNTDETAIL CASCADE CONSTRAINTS;

CREATE TABLE CHARTOFACCOUNTDETAIL
(
  ID             NUMBER                         NOT NULL,
  GLCODEID       NUMBER                         NOT NULL,
  DETAILTYPEID   NUMBER                         NOT NULL,
  DEFAULTKEYID   NUMBER,
  DEFAULTVALUE   VARCHAR2(50 BYTE),
  ISCONTROLCODE  NUMBER(1)
);

/*  CHARTOFACCOUNTS */

ALTER TABLE CHARTOFACCOUNTS DROP PRIMARY KEY CASCADE;
DROP TABLE CHARTOFACCOUNTS CASCADE CONSTRAINTS;

CREATE TABLE CHARTOFACCOUNTS
(
  ID                  NUMBER                    NOT NULL,
  GLCODE              VARCHAR2(50 BYTE)         NOT NULL,
  NAME                VARCHAR2(150 BYTE)        NOT NULL,
  DESCRIPTION         VARCHAR2(250 BYTE),
  ISACTIVEFORPOSTING  NUMBER(1)                 NOT NULL,
  LEVELNUMBER         NUMBER,
  PARENTID            NUMBER,
  ALTERNATENAME       VARCHAR2(100 BYTE),
  ISACTIVE            NUMBER(1)                 NOT NULL,
  LASTMODIFIED        DATE,
  MODIFIEDBY          NUMBER(4)                 NOT NULL,
  CREATED             DATE                      NOT NULL,
  GROUPID             NUMBER,
  PURPOSEID           NUMBER,
  SCHEDULE            VARCHAR2(10 BYTE),
  OPERATION           CHAR(1 BYTE),
  TYPE                CHAR(1 BYTE),
  CLASS               NUMBER(1),
  CLASSIFICATION      NUMBER(1),
  FUNCTIONREQD        NUMBER,
  BUDGETCHECKREQ      NUMBER(1),
  FUNCTIONID          NUMBER,
  SCHEDULEID          INTEGER,
  RECEIPTSCHEDULEID   INTEGER,
  RECEIPTOPERATION    CHAR(1 BYTE),
  PAYMENTSCHEDULEID   INTEGER,
  PAYMENTOPERATION    CHAR(1 BYTE)
);

/* CHEQUEDETAIL */

ALTER TABLE CHEQUEDETAIL DROP PRIMARY KEY CASCADE;
DROP TABLE CHEQUEDETAIL CASCADE CONSTRAINTS;

CREATE TABLE CHEQUEDETAIL
(
  ID               NUMBER                       NOT NULL,
  CHEQUEDATE       DATE                         NOT NULL,
  CHEQUENUMBER     VARCHAR2(10 BYTE)            NOT NULL,
  RECEIPTDATE      DATE                         NOT NULL,
  AMOUNT           NUMBER(14,2)                 NOT NULL,
  REGIONID         NUMBER,
  ISDEPOSITED      NUMBER(1)                    NOT NULL,
  PAYINSLIPNUMBER  VARCHAR2(12 BYTE),
  PAYINSLIPDATE    DATE,
  NARRATION        VARCHAR2(250 BYTE),
  ACCOUNTNUMBERID  NUMBER,
  BANKID           NUMBER,
  BRANCHID         NUMBER,
  PAYTO            VARCHAR2(50 BYTE),
  PAIDBYID         NUMBER,
  APPROVEDBY       VARCHAR2(10 BYTE),
  CREATED          DATE,
  MODIFIEDBY       NUMBER,
  LASTMODIFIED     DATE,
  ISPAYCHEQUE      NUMBER(1),
  ISREVERSED       NUMBER(1),
  CHEQUETYPE       CHAR(1 BYTE),
  VOUCHERHEADERID  NUMBER,
  BANKNAME         VARCHAR2(30 BYTE),
  TYPE             VARCHAR2(50 BYTE),
  CHQSTATUS        NUMBER
);

/*  CLOSEDPERIODS */

--ALTER TABLE CLOSEDPERIODS DROP PRIMARY KEY CASCADE;
--DROP TABLE CLOSEDPERIODS CASCADE CONSTRAINTS;

CREATE TABLE CLOSEDPERIODS
(
  ID            NUMBER                          NOT NULL,
  STARTINGDATE  DATE                            NOT NULL,
  ENDINGDATE    DATE                            NOT NULL,
  ISCLOSED      NUMBER                          NOT NULL
);

/*  CODEMAPPING  */

--ALTER TABLE CODEMAPPING DROP PRIMARY KEY CASCADE;
--DROP TABLE CODEMAPPING CASCADE CONSTRAINTS;

CREATE TABLE CODEMAPPING
(
  ID             NUMBER,
  EG_BOUNDARYID  NUMBER,
  CASHINHAND     NUMBER                         NOT NULL,
  CHEQUEINHAND   NUMBER                         NOT NULL
);

/*  CODESERVICEMAP  */

--ALTER TABLE CODESERVICEMAP DROP PRIMARY KEY CASCADE;
--DROP TABLE CODESERVICEMAP CASCADE CONSTRAINTS;

CREATE TABLE CODESERVICEMAP
(
  ID         NUMBER(10),
  SERVICEID  NUMBER(3),
  GLCODEID   NUMBER(5)
);

/*  COMPANYDETAIL  */

--ALTER TABLE COMPANYDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE COMPANYDETAIL CASCADE CONSTRAINTS;

CREATE TABLE COMPANYDETAIL
(
  ID             NUMBER                         NOT NULL,
  NAME           VARCHAR2(50 BYTE)              NOT NULL,
  ADDRESS1       VARCHAR2(50 BYTE)              NOT NULL,
  ADDRESS2       VARCHAR2(50 BYTE),
  CITY           VARCHAR2(50 BYTE)              NOT NULL,
  PIN            VARCHAR2(10 BYTE)              NOT NULL,
  STATE          VARCHAR2(25 BYTE),
  PHONE          VARCHAR2(25 BYTE)              NOT NULL,
  CONTACTPERSON  VARCHAR2(50 BYTE),
  MOBILE         VARCHAR2(25 BYTE),
  FAX            VARCHAR2(25 BYTE),
  EMAIL          VARCHAR2(25 BYTE),
  ISACTIVE       NUMBER(1)                      NOT NULL,
  MODIFIEDBY     NUMBER,
  CREATED        DATE                           NOT NULL,
  LASTMODIFIED   DATE,
  NARRATION      VARCHAR2(250 BYTE),
  DBNAME         VARCHAR2(50 BYTE)
);

/*  CONTRACTORBILLDETAIL  */

--ALTER TABLE CONTRACTORBILLDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE CONTRACTORBILLDETAIL CASCADE CONSTRAINTS;

CREATE TABLE CONTRACTORBILLDETAIL
(
  ID                NUMBER                      NOT NULL,
  VOUCHERHEADERID   NUMBER                      NOT NULL,
  CONTRACTORID      NUMBER                      NOT NULL,
  BILLNUMBER        VARCHAR2(50 BYTE),
  BILLDATE          DATE,
  OTHERRECOVERIES   NUMBER(10,2),
  PAIDAMOUNT        NUMBER(10,2),
  BILLAMOUNT        NUMBER(10,2)                NOT NULL,
  PASSEDAMOUNT      NUMBER(10,2)                NOT NULL,
  APPROVEDBY        VARCHAR2(50 BYTE),
  PAYABLEACCOUNT    NUMBER,
  NARRATION         VARCHAR2(250 BYTE),
  WORKSDETAILID     NUMBER                      NOT NULL,
  TDSAMOUNT         NUMBER(10,2),
  TDSPAIDTOIT       NUMBER(1),
  ADVADJAMT         NUMBER(10,2),
  ISREVERSED        NUMBER(1),
  ASSETID           NUMBER,
  CAP_REV           NUMBER,
  BILLID            NUMBER,
  MATERIALADJAMT    NUMBER(15,2),
  PAYBYDATE         DATE,
  BILLTYPE          VARCHAR2(20 BYTE),
  LASTMODIFIEDDATE  DATE,
  SECURITYDEPOSITY  NUMBER(10,2),
  GENERATEDBY       NUMBER,
  STATUSID          NUMBER
);

/*  CONTRAJOURNALVOUCHER  */

--ALTER TABLE CONTRAJOURNALVOUCHER DROP PRIMARY KEY CASCADE;
--DROP TABLE CONTRAJOURNALVOUCHER CASCADE CONSTRAINTS;

CREATE TABLE CONTRAJOURNALVOUCHER
(
  ID                 NUMBER                     NOT NULL,
  VOUCHERHEADERID    NUMBER                     NOT NULL,
  TYPE               VARCHAR2(15 BYTE)          NOT NULL,
  FROMBANKID         NUMBER,
  FROMBANKBRANCHID   NUMBER,
  FROMBANKACCOUNTID  NUMBER,
  FROMCHEQUENUMBER   VARCHAR2(15 BYTE),
  FROMCHEQUEDATE     DATE,
  TOBANKID           NUMBER,
  TOBANKBRANCHID     NUMBER,
  TOBANKACCOUNTID    NUMBER,
  NARRATION          VARCHAR2(250 BYTE),
  TOCASHNAMEID       NUMBER,
  FROMCASHNAMEID     NUMBER,
  TOCHEQUENAMEID     NUMBER,
  FROMFUNDID         NUMBER,
  TOFUNDID           NUMBER,
  ISREVERSED         NUMBER(1)
);

/*  EGF_ACCOUNTCODE_PURPOSE  */

--ALTER TABLE EGF_ACCOUNTCODE_PURPOSE DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_ACCOUNTCODE_PURPOSE CASCADE CONSTRAINTS;

CREATE TABLE EGF_ACCOUNTCODE_PURPOSE
(
  ID    NUMBER,
  NAME  VARCHAR2(250 BYTE)
);

/*  EGF_ACCOUNT_CHEQUES   */

--ALTER TABLE EGF_ACCOUNT_CHEQUES DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_ACCOUNT_CHEQUES CASCADE CONSTRAINTS;

CREATE TABLE EGF_ACCOUNT_CHEQUES
(
  ID                NUMBER                      NOT NULL,
  BANKACCOUNTID     NUMBER                      NOT NULL,
  FROMCHEQUENUMBER  VARCHAR2(50 BYTE)           NOT NULL,
  TOCHEQUENUMBER    VARCHAR2(50 BYTE)           NOT NULL,
  RECEIVEDDATE      DATE                        NOT NULL,
  ALLOTEDTO         NUMBER,
  ISEXHAUSTED       NUMBER,
  NEXTCHQNO         VARCHAR2(50 BYTE)
);

/*  EGF_BUDGET   */

--ALTER TABLE EGF_BUDGET DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_BUDGET CASCADE CONSTRAINTS;

CREATE TABLE EGF_BUDGET
(
  ID               NUMBER                       NOT NULL,
  NAME             VARCHAR2(50 BYTE),
  DESCRIPTION      VARCHAR2(250 BYTE),
  FINANCIALYEARID  NUMBER                       NOT NULL,
  STATUSID         NUMBER                       NOT NULL,
  APPROVEDBY       NUMBER,
  PARENT           NUMBER,
  ISACTIVEBUDGET   NUMBER,
  UPDATETIME       DATE                         NOT NULL,
  REFERENCE        NUMBER,
  BUDGETHEADER     NUMBER,
  ISSUPBUDGET      NUMBER,
  ISPRIMARYBUDGET  NUMBER                       NOT NULL
);

/*  EGF_BUDGETDETAIL  */

--ALTER TABLE EGF_BUDGETDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_BUDGETDETAIL CASCADE CONSTRAINTS;

CREATE TABLE EGF_BUDGETDETAIL
(
  ID               NUMBER                       NOT NULL,
  BUDGETGROUPID    NUMBER,
  BUDGETID         NUMBER,
  BUDGETCODEID     NUMBER,
  ORIGINALAMT      NUMBER(12,2),
  REVISEDAMT       NUMBER(12,2),
  BUDGETAVAILABLE  NUMBER(12,2),
  DEPARTMENTID     NUMBER,
  FUNCTIONID       NUMBER,
  WARDID           NUMBER,
  STATUSID         NUMBER,
  UPDATETIME       DATE                         NOT NULL,
  ADD_LESS         NUMBER
);


/*  EGF_BUDGETGROUP  */

--ALTER TABLE EGF_BUDGETGROUP DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_BUDGETGROUP CASCADE CONSTRAINTS;

CREATE TABLE EGF_BUDGETGROUP
(
  ID             NUMBER                         NOT NULL,
  NAME           VARCHAR2(50 BYTE),
  MINCODE        NUMBER,
  MAXCODE        NUMBER,
  MAJORCODE      NUMBER,
  DESCRIPTION    VARCHAR2(250 BYTE),
  UPDATETIME     DATE                           NOT NULL,
  ACCTYPE        NUMBER                         NOT NULL,
  BUDGETINGTYPE  NUMBER                         NOT NULL
);

/*  EGF_BUDGETING_TYPE  */

--ALTER TABLE EGF_BUDGETING_TYPE DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_BUDGETING_TYPE CASCADE CONSTRAINTS;

CREATE TABLE EGF_BUDGETING_TYPE
(
  ID           NUMBER,
  DESCRIPTION  VARCHAR2(100 BYTE)               NOT NULL
);

/*  EGF_BUDGET_ACCTYPE  */

--ALTER TABLE EGF_BUDGET_ACCTYPE DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_BUDGET_ACCTYPE CASCADE CONSTRAINTS;

CREATE TABLE EGF_BUDGET_ACCTYPE
(
  ID           NUMBER,
  DESCRIPTION  VARCHAR2(50 BYTE)                NOT NULL
);

/*  EGF_BUDGET_STATUS  */

--ALTER TABLE EGF_BUDGET_STATUS DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_BUDGET_STATUS CASCADE CONSTRAINTS;

CREATE TABLE EGF_BUDGET_STATUS
(
  ID          NUMBER,
  NAME        VARCHAR2(25 BYTE)                 NOT NULL,
  UPDATETIME  DATE                              NOT NULL
);




/*  EGF_CESS_MASTER  */

--ALTER TABLE EGF_CESS_MASTER DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_CESS_MASTER CASCADE CONSTRAINTS;

CREATE TABLE EGF_CESS_MASTER
(
  ID               NUMBER,
  TAXCODEID        NUMBER,
  GLCODEID         NUMBER,
  PERCENTAGE       NUMBER(10,2),
  FINANCIALYEARID  VARCHAR2(50 BYTE),
  ISACTIVE         NUMBER(1)
);


/*  EGF_DISCOUNT  */

--ALTER TABLE EGF_DISCOUNT DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_DISCOUNT CASCADE CONSTRAINTS;


CREATE TABLE EGF_DISCOUNT
(
  ID               NUMBER,
  NAME             VARCHAR2(150 BYTE),
  PERCENTAGE       NUMBER(10,2),
  GLCODEID         NUMBER,
  FINANCIALYEARID  VARCHAR2(50 BYTE),
  ISACTIVE         NUMBER(1)
);


/*  EGF_FUNCTION_GENERALLEDGER  */

--ALTER TABLE EGF_FUNCTION_GENERALLEDGER DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_FUNCTION_GENERALLEDGER CASCADE CONSTRAINTS;


CREATE TABLE EGF_FUNCTION_GENERALLEDGER
(
  ID                NUMBER,
  GENERALLEDGERID   NUMBER                      NOT NULL,
  FUNCTIONID        NUMBER,
  LASTMODIFIEDDATE  DATE                        NOT NULL,
  AMOUNT            NUMBER(15,2)
);





/*  EGF_RECORD_STATUS  */

--ALTER TABLE EGF_RECORD_STATUS DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_RECORD_STATUS CASCADE CONSTRAINTS;

CREATE TABLE EGF_RECORD_STATUS
(
  ID               NUMBER,
  RECORD_TYPE      VARCHAR2(50 BYTE)            NOT NULL,
  STATUS           NUMBER                       NOT NULL,
  UPDATEDTIME      DATE                         NOT NULL,
  USERID           NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL
);


/*  EGF_TAX_ACCOUNT_MAPPING  */

--ALTER TABLE EGF_TAX_ACCOUNT_MAPPING DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_TAX_ACCOUNT_MAPPING CASCADE CONSTRAINTS;

CREATE TABLE EGF_TAX_ACCOUNT_MAPPING
(
  ID               NUMBER,
  TAXCODEID        NUMBER,
  GLCODEID         NUMBER,
  ISACTIVE         NUMBER(1),
  FINANCIALYEAR    VARCHAR2(50 BYTE)            NOT NULL,
  FINANCIALYEARID  NUMBER,
  ISOLD            NUMBER
);


/*  EGF_TAX_CODE  */

--ALTER TABLE EGF_TAX_CODE DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_TAX_CODE CASCADE CONSTRAINTS;

CREATE TABLE EGF_TAX_CODE
(
  ID            NUMBER,
  CODE          VARCHAR2(25 BYTE),
  NAME          VARCHAR2(150 BYTE),
  ISACTIVE      NUMBER(1),
  CREATED       DATE,
  LASTMODIFIED  DATE,
  MODIFIEDBY    NUMBER,
  ACCRUED       NUMBER(1)
);

/*  EG_BILLDETAILS  */

ALTER TABLE EG_BILLDETAILS DROP PRIMARY KEY CASCADE;
DROP TABLE EG_BILLDETAILS CASCADE CONSTRAINTS;

CREATE TABLE EG_BILLDETAILS
(
  ID               NUMBER,
  BILLID           NUMBER                       NOT NULL,
  FUNCTIONID       NUMBER,
  GLCODEID         NUMBER                       NOT NULL,
  DEBITAMOUNT      NUMBER(15,2),
  CREDITAMOUNT     NUMBER(15,2),
  LASTUPDATEDTIME  DATE                         NOT NULL,
  NARRATION	   VARCHAR2(250)
);


/*  EG_BILLPAYEEDETAILS  */

--ALTER TABLE EG_BILLPAYEEDETAILS DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_BILLPAYEEDETAILS CASCADE CONSTRAINTS;

CREATE TABLE EG_BILLPAYEEDETAILS
(
  ID                   NUMBER,
  BILLDETAILID         NUMBER                   NOT NULL,
  ACCOUNTDETAILTYPEID  NUMBER                   NOT NULL,
  ACCOUNTDETAILKEYID   NUMBER                   NOT NULL,
  DEBITAMOUNT          NUMBER(15,2),
  CREDITAMOUNT         NUMBER(15,2),
  LASTUPDATEDTIME      DATE                     NOT NULL,
  TDSID                NUMBER(10)
);


/*  EG_BILLREGISTER  */

ALTER TABLE EG_BILLREGISTER DROP PRIMARY KEY CASCADE;
DROP TABLE EG_BILLREGISTER CASCADE CONSTRAINTS;


CREATE TABLE EG_BILLREGISTER
(
  ID                  NUMBER,
  BILLNUMBER          VARCHAR2(50 BYTE)         NOT NULL,
  BILLDATE            DATE                      NOT NULL,
  BILLAMOUNT          NUMBER(15,2)              NOT NULL,
  FIELDID             NUMBER,
  WORKSDETAILID       NUMBER,
  BILLSTATUS          VARCHAR2(50 BYTE)         NOT NULL,
  NARRATION           VARCHAR2(250 BYTE),
  PASSEDAMOUNT        NUMBER(15,2),
  BILLTYPE            VARCHAR2(50 BYTE),
  EXPENDITURETYPE     VARCHAR2(20 BYTE)         NOT NULL,
  ADVANCEADJUSTED     NUMBER(15,2),
  CREATEDBY           NUMBER                    NOT NULL,
  CREATEDDATE         DATE                      NOT NULL,
  LASTMODIFIEDBY      NUMBER,
  LASTMODIFIEDDATE    DATE,
  STATUSID            NUMBER,
  WORKORDERDATE       DATE,
  ZONE                VARCHAR2(20 BYTE),
  DIVISION            VARCHAR2(50 BYTE),
  WORKORDERNUMBER     VARCHAR2(50 BYTE),
  BILLPASSEDDATE      DATE,
  ISACTIVE            NUMBER(1),
  BILLAPPROVALSTATUS  VARCHAR2(50 BYTE)
);




/*  EG_BILLREGISTERMIS  */

--ALTER TABLE EG_BILLREGISTERMIS DROP PRIMARY KEY CASCADE;
DROP TABLE EG_BILLREGISTERMIS CASCADE CONSTRAINTS;

CREATE TABLE EG_BILLREGISTERMIS
(
  ID                   NUMBER,
  BILLID               NUMBER                   NOT NULL,
  FUNDID               NUMBER,
  SEGMENTID            NUMBER,
  SUBSEGMENTID         NUMBER,
  FIELDID              NUMBER,
  SUBFIELDID           NUMBER,
  FUNCTIONARYID        NUMBER,
  SANCTIONEDBY         VARCHAR2(30 BYTE),
  SANCTIONDATE         DATE,
  SANCTIONDETAIL       VARCHAR2(200 BYTE),
  NARRATION            VARCHAR2(300 BYTE),
  LASTUPDATEDTIME      DATE                     NOT NULL,
  DISBURSEMENTTYPE     VARCHAR2(30 BYTE),
  ESCALATION           NUMBER,
  ADVANCEPAYMENTS      NUMBER,
  SECUREDADVANCES      NUMBER,
  DEDUCTAMOUNTWITHELD  NUMBER,
  DEPARTMENTID         NUMBER,
  MONTH                NUMBER,
  FINANCIALYEARID      NUMBER,
  FUNDSOURCEID         NUMBER,
  REBATE               NUMBER(5,2),
  BILLTYPE             VARCHAR2(50 BYTE),
  PAYTO                VARCHAR2(250 BYTE),
  PAYBYDATE            DATE,
  MBREFNO              VARCHAR2(200 BYTE),
  SCHEMEID             NUMBER,
  SUBSCHEMEID          NUMBER
);


/*  EG_DEDUCTION_DETAILS  */

--ALTER TABLE EG_DEDUCTION_DETAILS DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_DEDUCTION_DETAILS CASCADE CONSTRAINTS;

CREATE TABLE EG_DEDUCTION_DETAILS
(
  ID                NUMBER,
  TDSID             NUMBER                      NOT NULL,
  PARTYTYPEID       NUMBER,
  DOCTYPEID         NUMBER,
  DOCSUBTYPEID      NUMBER,
  DATEFROM          DATE,
  DATETO            DATE,
  LOWLIMIT          NUMBER(15,2)                NOT NULL,
  HIGHLIMIT         NUMBER(15,2),
  INCOMETAX         NUMBER(5,2),
  SURCHARGE         NUMBER(5,2),
  EDUCATION         NUMBER(5,2),
  LASTMODIFIEDDATE  DATE,
  AMOUNT            NUMBER(15,2)
);


/*  EG_NUMBERS  */

ALTER TABLE EG_NUMBERS DROP PRIMARY KEY CASCADE;
DROP TABLE EG_NUMBERS CASCADE CONSTRAINTS;


CREATE TABLE EG_NUMBERS
(
  ID               NUMBER,
  VOUCHERTYPE      VARCHAR2(50 BYTE)            NOT NULL,
  VOUCHERNUMBER    NUMBER                       NOT NULL,
  FISCIALPERIODID  NUMBER                       NOT NULL,
  MONTH            NUMBER
);

/*  EG_PARTYTYPE  */

--ALTER TABLE EG_PARTYTYPE DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_PARTYTYPE CASCADE CONSTRAINTS;


CREATE TABLE EG_PARTYTYPE
(
  ID                NUMBER,
  CODE              VARCHAR2(20 BYTE)           NOT NULL,
  PARENTID          NUMBER,
  DESCRIPTION       VARCHAR2(100 BYTE)          NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
);

/*  EG_REMITTANCE  */

--ALTER TABLE EG_REMITTANCE DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_REMITTANCE CASCADE CONSTRAINTS;

CREATE TABLE EG_REMITTANCE
(
  ID                NUMBER,
  TDSID             NUMBER                      NOT NULL,
  FUNDID            NUMBER                      NOT NULL,
  FYID              NUMBER                      NOT NULL,
  MONTH             NUMBER                      NOT NULL,
  PAYMENTVHID       NUMBER                      NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
);




/*  EG_REMITTANCE_DETAIL  */

--ALTER TABLE EG_REMITTANCE_DETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_REMITTANCE_DETAIL CASCADE CONSTRAINTS;

CREATE TABLE EG_REMITTANCE_DETAIL
(
  ID                 NUMBER,
  REMITTANCEID       NUMBER                     NOT NULL,
  REMITTANCEGLDTLID  NUMBER                     NOT NULL,
  LASTMODIFIEDDATE   DATE,
  REMITTEDAMT        NUMBER(15,2)
);




/*  EG_REMITTANCE_GLDTL  */

--ALTER TABLE EG_REMITTANCE_GLDTL DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_REMITTANCE_GLDTL CASCADE CONSTRAINTS;

CREATE TABLE EG_REMITTANCE_GLDTL
(
  ID                NUMBER,
  GLDTLID           NUMBER                      NOT NULL,
  GLDTLAMT          NUMBER(15,2),
  LASTMODIFIEDDATE  DATE,
  REMITTEDAMT       NUMBER(15,2),
  TDSID             NUMBER
);





/*  EG_SALARYCODES  */

ALTER TABLE EG_SALARYCODES DROP PRIMARY KEY CASCADE;
DROP TABLE EG_SALARYCODES CASCADE CONSTRAINTS;

CREATE TABLE EG_SALARYCODES
(
  ID                NUMBER,
  HEAD              VARCHAR2(30 BYTE)           NOT NULL,
  GLCODEID          NUMBER                      NOT NULL,
  SALTYPE           VARCHAR2(20 BYTE)           NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
);




/*  EG_SURRENDERED_CHEQUES  */

--ALTER TABLE EG_SURRENDERED_CHEQUES DROP PRIMARY KEY CASCADE;
--DROP TABLE EG_SURRENDERED_CHEQUES CASCADE CONSTRAINTS;

CREATE TABLE EG_SURRENDERED_CHEQUES
(
  ID                NUMBER,
  BANKACCOUNTID     NUMBER                      NOT NULL,
  CHEQUENUMBER      VARCHAR2(20 BYTE)           NOT NULL,
  CHEQUEDATE        DATE                        NOT NULL,
  VHID              NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL
);

/*  FILTERSERVICES  */

ALTER TABLE FILTERSERVICES DROP PRIMARY KEY CASCADE;
DROP TABLE FILTERSERVICES CASCADE CONSTRAINTS;

CREATE TABLE FILTERSERVICES
(
  ID    NUMBER(3),
  NAME  VARCHAR2(100 BYTE)                      NOT NULL
);


/*  FISCALPERIOD  */

ALTER TABLE FISCALPERIOD DROP PRIMARY KEY CASCADE;
DROP TABLE FISCALPERIOD CASCADE CONSTRAINTS;

CREATE TABLE FISCALPERIOD
(
  ID                  NUMBER                    NOT NULL,
  TYPE                NUMBER,
  NAME                VARCHAR2(50 BYTE)         NOT NULL,
  STARTINGDATE        DATE                      NOT NULL,
  ENDINGDATE          DATE                      NOT NULL,
  PARENTID            NUMBER,
  ISACTIVEFORPOSTING  NUMBER,
  ISACTIVE            NUMBER(1)                 NOT NULL,
  MODIFIEDBY          NUMBER,
  LASTMODIFIED        DATE,
  CREATED             DATE                      NOT NULL,
  FINANCIALYEARID     NUMBER,
  ISCLOSED            NUMBER(1),
  MODULEID            NUMBER
);



/*  FUNDSOURCE  */

ALTER TABLE FUNDSOURCE DROP PRIMARY KEY CASCADE;
DROP TABLE FUNDSOURCE CASCADE CONSTRAINTS;

CREATE TABLE FUNDSOURCE
(
  ID            NUMBER,
  CODE          VARCHAR2(50 BYTE)               NOT NULL,
  NAME          VARCHAR2(50 BYTE)               NOT NULL,
  TYPE          VARCHAR2(50 BYTE),
  LLEVEL        NUMBER                          NOT NULL,
  PARENTID      NUMBER,
  ISACTIVE      NUMBER(1)                       NOT NULL,
  CREATED       DATE                            NOT NULL,
  LASTMODIFIED  DATE                            NOT NULL,
  MODIFIEDBY    NUMBER                          NOT NULL,
  ISNOTLEAF     NUMBER(1)                       NOT NULL
);

/*  GENERALLEDGER  */

ALTER TABLE GENERALLEDGER DROP PRIMARY KEY CASCADE;
DROP TABLE GENERALLEDGER CASCADE CONSTRAINTS;

CREATE TABLE GENERALLEDGER
(
  ID               NUMBER                       NOT NULL,
  VOUCHERLINEID    NUMBER                       NOT NULL,
  EFFECTIVEDATE    DATE                         NOT NULL,
  GLCODEID         NUMBER                       NOT NULL,
  GLCODE           VARCHAR2(50 BYTE)            NOT NULL,
  DEBITAMOUNT      NUMBER(15,2)                 NOT NULL,
  CREDITAMOUNT     NUMBER(15,2)                 NOT NULL,
  DESCRIPTION      VARCHAR2(250 BYTE),
  VOUCHERHEADERID  NUMBER,
  FUNCTIONID       NUMBER
);

/*  GENERALLEDGERDETAIL  */

--ALTER TABLE GENERALLEDGERDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE GENERALLEDGERDETAIL CASCADE CONSTRAINTS;

CREATE TABLE GENERALLEDGERDETAIL
(
  ID               NUMBER                       NOT NULL,
  GENERALLEDGERID  NUMBER                       NOT NULL,
  DETAILKEYID      NUMBER                       NOT NULL,
  DETAILTYPEID     NUMBER                       NOT NULL,
  AMOUNT           NUMBER(15,2)
);

/*  GENERALVOUCHERMIS  */

--ALTER TABLE GENERALVOUCHERMIS DROP PRIMARY KEY CASCADE;
--DROP TABLE GENERALVOUCHERMIS CASCADE CONSTRAINTS;

CREATE TABLE GENERALVOUCHERMIS
(
  ID               NUMBER,
  COSTCENTERID     NUMBER,
  DEPARTMENTID     NUMBER,
  ZONEID           NUMBER,
  SCHEMEID         NUMBER,
  VOUCHERHEADERID  NUMBER                       NOT NULL
);





/*  MENUTREE  */

ALTER TABLE MENUTREE DROP PRIMARY KEY CASCADE;
DROP TABLE MENUTREE CASCADE CONSTRAINTS;

CREATE TABLE MENUTREE
(
  ID        NUMBER,
  NAME      VARCHAR2(150 BYTE),
  PARENTID  NUMBER,
  ACTIONID  NUMBER,
  SORTID    NUMBER
);




/*  MISCBILLDETAIL  */

--ALTER TABLE MISCBILLDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE MISCBILLDETAIL CASCADE CONSTRAINTS;


CREATE TABLE MISCBILLDETAIL
(
  ID            NUMBER                          NOT NULL,
  BILLNUMBER    VARCHAR2(50 BYTE),
  BILLDATE      DATE,
  AMOUNT        NUMBER(15,2)                    NOT NULL,
  PASSEDAMOUNT  NUMBER(15,2)                    NOT NULL,
  PAIDTO        VARCHAR2(50 BYTE)               NOT NULL,
  APPROVEDBY    VARCHAR2(50 BYTE)               NOT NULL,
  PAIDBYID      NUMBER,
  CREATED       DATE                            NOT NULL,
  MODIFIEDBY    VARCHAR2(10 BYTE),
  LASTMODIFIED  DATE,
  ISREVERSED    NUMBER(1),
  BILLVHID      NUMBER
);

/*  ORGANIZATIONSTRUCTURE  */

--ALTER TABLE ORGANIZATIONSTRUCTURE DROP PRIMARY KEY CASCADE;
--DROP TABLE ORGANIZATIONSTRUCTURE CASCADE CONSTRAINTS;


CREATE TABLE ORGANIZATIONSTRUCTURE
(
  ID            NUMBER                          NOT NULL,
  CODE          VARCHAR2(10 BYTE)               NOT NULL,
  NAME          VARCHAR2(25 BYTE)               NOT NULL,
  DESCRIPTION   VARCHAR2(250 BYTE),
  PARENTID      NUMBER,
  CASHINHAND    NUMBER,
  CHEQUEINHAND  NUMBER,
  ISACTIVE      NUMBER(1)                       NOT NULL,
  LASTMODIFIED  DATE,
  CREATED       DATE                            NOT NULL,
  MODIFIEDBY    NUMBER
);

/*  OTHERBILLDETAIL  */

--ALTER TABLE OTHERBILLDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE OTHERBILLDETAIL CASCADE CONSTRAINTS;


CREATE TABLE OTHERBILLDETAIL
(
  ID               NUMBER,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  BILLID           NUMBER                       NOT NULL,
  PAYVHID          NUMBER
);

/*  OTHERTAXDETAIL  */

--ALTER TABLE OTHERTAXDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE OTHERTAXDETAIL CASCADE CONSTRAINTS;

CREATE TABLE OTHERTAXDETAIL
(
  ID               NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  INTEREST         NUMBER(10,2),
  PENALTY          NUMBER(10,2),
  GLCODEID         NUMBER                       NOT NULL,
  TOTALAMOUNT      NUMBER(12,2),
  ISREVERSED       NUMBER(1),
  PERIOD           VARCHAR2(50 BYTE)
);

/*  PAYMENTHEADER  */

--ALTER TABLE PAYMENTHEADER DROP PRIMARY KEY CASCADE;
--DROP TABLE PAYMENTHEADER CASCADE CONSTRAINTS;

CREATE TABLE PAYMENTHEADER
(
  ID                   NUMBER                   NOT NULL,
  VOUCHERHEADERID      NUMBER                   NOT NULL,
  TYPE                 VARCHAR2(50 BYTE)        NOT NULL,
  BANKID               NUMBER,
  BANKBRANCHID         NUMBER,
  BANKACCOUNTNUMBERID  NUMBER,
  CHEQUEID             NUMBER,
  MISCBILLDETAILID     NUMBER                   NOT NULL,
  CASHNAME             VARCHAR2(10 BYTE),
  NARRATION            VARCHAR2(250 BYTE),
  ISREVERSED           NUMBER(1)
);


/*  PROPERTYTAXINTERMEDIATE  */

--ALTER TABLE PROPERTYTAXINTERMEDIATE DROP PRIMARY KEY CASCADE;
--DROP TABLE PROPERTYTAXINTERMEDIATE CASCADE CONSTRAINTS;

CREATE TABLE PROPERTYTAXINTERMEDIATE
(
  ID               NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  PERIOD           VARCHAR2(50 BYTE)            NOT NULL,
  AMOUNT           NUMBER(10,2)                 NOT NULL,
  INTEREST         NUMBER(10,2),
  PENALTY          NUMBER(10,2),
  REBATE           NUMBER(10,2),
  PROPERTYTAX      NUMBER(10,2)                 NOT NULL,
  ISREVERSED       NUMBER(1)
);

/*  RECEIPTHEADER  */

--ALTER TABLE RECEIPTHEADER DROP PRIMARY KEY CASCADE;
--DROP TABLE RECEIPTHEADER CASCADE CONSTRAINTS;

CREATE TABLE RECEIPTHEADER
(
  ID                   NUMBER                   NOT NULL,
  VOUCHERHEADERID      NUMBER                   NOT NULL,
  TYPE                 VARCHAR2(50 BYTE)        NOT NULL,
  WARDID               NUMBER,
  BILLCOLLECTORID      NUMBER,
  COUNTERID            NUMBER,
  BANKID               NUMBER,
  BANKBRANCHID         NUMBER,
  BANKACCOUNTNUMBERID  NUMBER,
  MODEOFCOLLECTION     VARCHAR2(15 BYTE)        NOT NULL,
  CHEQUEID             NUMBER,
  CASHAMOUNT           NUMBER(15,2),
  NARRATION            VARCHAR2(250 BYTE),
  REVENUESOURCE        VARCHAR2(25 BYTE),
  ISREVERSED           NUMBER(1),
  CASHIER              VARCHAR2(50 BYTE),
  RECEIPTNO            VARCHAR2(32 BYTE),
  MANUALRECEIPTNUMBER  VARCHAR2(10 BYTE)
);



/*  SALARYBILLDETAIL  */

--ALTER TABLE SALARYBILLDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE SALARYBILLDETAIL CASCADE CONSTRAINTS;

CREATE TABLE SALARYBILLDETAIL
(
  ID               NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  MMONTH           VARCHAR2(50 BYTE)            NOT NULL,
  GROSSPAY         NUMBER(15,2)                 NOT NULL,
  TOTALDEDUCTIONS  NUMBER(15,2)                 NOT NULL,
  NETPAY           NUMBER(15,2)                 NOT NULL,
  PAIDAMOUNT       NUMBER(15,2)                 NOT NULL,
  NARRATION        VARCHAR2(250 BYTE),
  FINANCIALYEARID  NUMBER(10),
  ISREVERSED       NUMBER(1),
  BILLID           NUMBER
);

/*  SCHEDULEMAPPING  */

--ALTER TABLE SCHEDULEMAPPING DROP PRIMARY KEY CASCADE;
--DROP TABLE SCHEDULEMAPPING CASCADE CONSTRAINTS;

CREATE TABLE SCHEDULEMAPPING
(
  ID                INTEGER,
  REPORTTYPE        VARCHAR2(10 BYTE)           NOT NULL,
  SCHEDULE          VARCHAR2(10 BYTE)           NOT NULL,
  SCHEDULENAME      VARCHAR2(250 BYTE)          NOT NULL,
  REPSUBTYPE        VARCHAR2(10 BYTE),
  CREATEDBY         INTEGER                     NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    INTEGER,
  LASTMODIFIEDDATE  DATE,
  ISREMISSION       NUMBER(1)
);


/*  SCHEME  */

ALTER TABLE SCHEME DROP PRIMARY KEY CASCADE;
DROP TABLE SCHEME CASCADE CONSTRAINTS;


CREATE TABLE SCHEME
(
  ID           NUMBER(10)                       NOT NULL,
  CODE         VARCHAR2(20 BYTE),
  NAME         VARCHAR2(50 BYTE),
  VALIDFROM    DATE,
  VALIDTO      DATE,
  ISACTIVE     VARCHAR2(1 BYTE),
  DESCRIPTION  VARCHAR2(255 BYTE),
  FUNDID       INTEGER,
  SECTORID     INTEGER,
  AAES         NUMBER,
  FIELDID      NUMBER
);


/*  SCREENCONTROLS  */

--ALTER TABLE SCREENCONTROLS DROP PRIMARY KEY CASCADE;
--DROP TABLE SCREENCONTROLS CASCADE CONSTRAINTS;

CREATE TABLE SCREENCONTROLS
(
  ID           NUMBER(3),
  SCREENNAME   VARCHAR2(50 BYTE),
  CONTROLNAME  VARCHAR2(50 BYTE)
);

/*  SUBLEDGERPAYMENTHEADER  */

--ALTER TABLE SUBLEDGERPAYMENTHEADER DROP PRIMARY KEY CASCADE;
--DROP TABLE SUBLEDGERPAYMENTHEADER CASCADE CONSTRAINTS;

CREATE TABLE SUBLEDGERPAYMENTHEADER
(
  ID                NUMBER                      NOT NULL,
  VOUCHERHEADERID   NUMBER                      NOT NULL,
  TYPE              VARCHAR2(50 BYTE)           NOT NULL,
  TYPEOFPAYMENT     VARCHAR2(15 BYTE)           NOT NULL,
  BANKACCOUNTID     NUMBER,
  CHEQUEID          NUMBER,
  SUPPLIERID        NUMBER,
  SUPPLIERBILLID    NUMBER,
  CONTRACTORID      NUMBER,
  CONTRACTORBILLID  NUMBER,
  SALARYBILLID      NUMBER,
  CASHNAME          VARCHAR2(50 BYTE),
  PAIDBY            NUMBER,
  PAIDAMOUNT        NUMBER(10,2)                NOT NULL,
  NARRATION         VARCHAR2(250 BYTE),
  WORKSDETAILID     NUMBER,
  ISREVERSED        NUMBER(1),
  PAIDTO            NUMBER
);

/*  SUB_SCHEME  */

ALTER TABLE SUB_SCHEME DROP PRIMARY KEY CASCADE;
DROP TABLE SUB_SCHEME CASCADE CONSTRAINTS;

CREATE TABLE SUB_SCHEME
(
  ID                NUMBER,
  CODE              VARCHAR2(50 BYTE)           NOT NULL,
  NAME              VARCHAR2(50 BYTE)           NOT NULL,
  VALIDFROM         DATE                        NOT NULL,
  VALIDTO           DATE,
  ISACTIVE          VARCHAR2(1 BYTE)            NOT NULL,
  SCHEMEID          NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL
);


/*  SUPPLIERBILLDETAIL  */

--ALTER TABLE SUPPLIERBILLDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE SUPPLIERBILLDETAIL CASCADE CONSTRAINTS;

CREATE TABLE SUPPLIERBILLDETAIL
(
  ID               NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  SUPPLIERID       NUMBER                       NOT NULL,
  BILLDATE         DATE,
  BILLNUMBER       VARCHAR2(50 BYTE),
  OTHERRECOVERIES  NUMBER(10,2),
  MRNNUMBER        VARCHAR2(10 BYTE),
  MRNDATE          DATE,
  BILLAMOUNT       NUMBER(10,2)                 NOT NULL,
  PASSEDAMOUNT     NUMBER(10,2)                 NOT NULL,
  APPROVEDBY       VARCHAR2(25 BYTE),
  PAYABLEACCOUNT   NUMBER,
  NARRATION        VARCHAR2(250 BYTE),
  WORKSDETAILID    NUMBER                       NOT NULL,
  TDSAMOUNT        NUMBER(10,2),
  TDSPAIDTOIT      NUMBER(1),
  PAIDAMOUNT       NUMBER(10,2),
  ADVADJAMT        NUMBER(10,2),
  ISREVERSED       NUMBER(1),
  ASSETID          NUMBER,
  CAP_REV          NUMBER,
  MRNID            NUMBER,
  BILLID           NUMBER,
  PAYBYDATE        DATE
);

/*  TDS  */

--ALTER TABLE TDS DROP PRIMARY KEY CASCADE;
--DROP TABLE TDS CASCADE CONSTRAINTS;

CREATE TABLE TDS
(
  ID             NUMBER(10)                     NOT NULL,
  TYPE           VARCHAR2(20 BYTE),
  ISPAID         NUMBER(1),
  GLCODEID       NUMBER(10),
  ISACTIVE       NUMBER(1),
  LASTMODIFIED   DATE,
  CREATED        DATE,
  MODIFIEDBY     NUMBER(10),
  RATE           NUMBER(10,2),
  EFFECTIVEFROM  DATE,
  CREATEDBY      NUMBER                         NOT NULL,
  REMITTED       VARCHAR2(100 BYTE),
  BSRCODE        VARCHAR2(20 BYTE),
  DESCRIPTION    VARCHAR2(50 BYTE),
  PARTYTYPEID    NUMBER,
  BANKID         NUMBER,
  CAPLIMIT       NUMBER(15,2),
  ISEARNING      VARCHAR2(1 BYTE)
);

/*  TRANSACTIONSUMMARY  */

--ALTER TABLE TRANSACTIONSUMMARY DROP PRIMARY KEY CASCADE;
--DROP TABLE TRANSACTIONSUMMARY CASCADE CONSTRAINTS;

CREATE TABLE TRANSACTIONSUMMARY
(
  ID                    NUMBER                  NOT NULL,
  GLCODEID              NUMBER                  NOT NULL,
  OPENINGDEBITBALANCE   NUMBER(15,2)            NOT NULL,
  OPENINGCREDITBALANCE  NUMBER(15,2)            NOT NULL,
  DEBITAMOUNT           NUMBER(15,2)            NOT NULL,
  CREDITAMOUNT          NUMBER(15,2)            NOT NULL,
  ACCOUNTDETAILTYPEID   NUMBER,
  ACCOUNTDETAILKEY      NUMBER,
  FINANCIALYEARID       NUMBER                  NOT NULL,
  FUNDID                NUMBER,
  FUNDSOURCEID          NUMBER(10),
  NARRATION             VARCHAR2(300 BYTE),
  LASTMODIFIEDBY        NUMBER,
  LASTMODIFIEDDATE      DATE
);


/*  TRANSACTIONSUMMARYDETAILS  */

--ALTER TABLE TRANSACTIONSUMMARYDETAILS DROP PRIMARY KEY CASCADE;
--DROP TABLE TRANSACTIONSUMMARYDETAILS CASCADE CONSTRAINTS;


CREATE TABLE TRANSACTIONSUMMARYDETAILS
(
  ID            NUMBER                          NOT NULL,
  TXNSUMMARYID  NUMBER,
  DETAILTYPEID  NUMBER,
  DETAILKEYID   NUMBER
);


/*  VOUCHERDETAIL  */

ALTER TABLE VOUCHERDETAIL DROP PRIMARY KEY CASCADE;
DROP TABLE VOUCHERDETAIL CASCADE CONSTRAINTS;

CREATE TABLE VOUCHERDETAIL
(
  ID               NUMBER                       NOT NULL,
  LINEID           NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  GLCODE           VARCHAR2(50 BYTE)            NOT NULL,
  ACCOUNTNAME      VARCHAR2(200 BYTE)           NOT NULL,
  DEBITAMOUNT      NUMBER(15,2)                 NOT NULL,
  CREDITAMOUNT     NUMBER(15,2)                 NOT NULL,
  NARRATION        VARCHAR2(250 BYTE)
);

/*  VOUCHERHEADER  */

ALTER TABLE VOUCHERHEADER DROP PRIMARY KEY CASCADE;
DROP TABLE VOUCHERHEADER CASCADE CONSTRAINTS;

CREATE TABLE VOUCHERHEADER
(
  ID                NUMBER                      NOT NULL,
  CGN               VARCHAR2(10 BYTE)           NOT NULL,
  CGDATE            DATE                        NOT NULL,
  NAME              VARCHAR2(50 BYTE)           NOT NULL,
  TYPE              VARCHAR2(100 BYTE)          NOT NULL,
  DESCRIPTION       VARCHAR2(250 BYTE),
  EFFECTIVEDATE     DATE                        NOT NULL,
  VOUCHERNUMBER     VARCHAR2(25 BYTE),
  VOUCHERDATE       DATE                        NOT NULL,
  DEPARTMENTID      NUMBER,
  FUNDID            NUMBER,
  FISCALPERIODID    NUMBER                      NOT NULL,
  STATUS            NUMBER(1),
  ORIGINALVCID      NUMBER(10),
  FUNDSOURCEID      NUMBER,
  ISCONFIRMED       NUMBER(1),
  CREATEDBY         INTEGER,
  FUNCTIONID        NUMBER(4),
  REFCGNO           VARCHAR2(10 BYTE),
  CGVN              VARCHAR2(50 BYTE)           NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE,
  MODULEID          NUMBER
);


/*  VOUCHERMIS  */

ALTER TABLE VOUCHERMIS DROP PRIMARY KEY CASCADE;
DROP TABLE VOUCHERMIS CASCADE CONSTRAINTS;

CREATE TABLE VOUCHERMIS
(
  ID                 NUMBER                     NOT NULL,
  BILLNUMBER         NUMBER,
  DIVISIONID         NUMBER,
  SCHEMENAME         VARCHAR2(25 BYTE),
  ACCOUNTCODE        VARCHAR2(25 BYTE),
  ACCOUNTHEAD        VARCHAR2(70 BYTE),
  CONTRACTAMT        VARCHAR2(25 BYTE),
  CASHBOOK           VARCHAR2(25 BYTE),
  NATUREOFWORK       VARCHAR2(25 BYTE),
  ASSETDESC          VARCHAR2(25 BYTE),
  USERDEPT           VARCHAR2(25 BYTE),
  DEMANDNO           VARCHAR2(25 BYTE),
  NARRATION          VARCHAR2(250 BYTE),
  CURRENTYEAR        VARCHAR2(25 BYTE),
  DEPARTMENTID       NUMBER,
  DEPTACCHEAD        VARCHAR2(25 BYTE),
  SUBACCOUNTHEAD     VARCHAR2(25 BYTE),
  PROJECTCODE        NUMBER,
  CONCURRANCE_PN     VARCHAR2(25 BYTE),
  ZONECODE           NUMBER,
  WARDCODE           NUMBER,
  DIVISIONCODE       NUMBER,
  MONTH              NUMBER,
  GROSSDED           VARCHAR2(25 BYTE),
  EMD_SECURITY       VARCHAR2(25 BYTE),
  NETDEDUCTION       VARCHAR2(25 BYTE),
  NETAMT             VARCHAR2(25 BYTE),
  TOTEXPENDITURE     VARCHAR2(25 BYTE),
  VOUCHERHEADERID    NUMBER,
  BILLREGISTERID     VARCHAR2(20 BYTE),
  ACOUNT_DEPARTMENT  NUMBER,
  PROJECTFUND        NUMBER,
  CONCURRANCE_SN     NUMBER(4),
  SEGMENTID          NUMBER,
  SUB_SEGMENTID      NUMBER,
  UPDATEDTIMESTAMP   DATE,
  CREATETIMESTAMP    DATE,
  IUT_STATUS         VARCHAR2(20 BYTE),
  IUT_NUMBER         VARCHAR2(30 BYTE),
  FUNDSOURCEID       NUMBER,
  SCHEMEID           NUMBER,
  SUBSCHEMEID        NUMBER
);

/* RELATIONTYPE*/

CREATE TABLE RELATIONTYPE
(
  ID            NUMBER                          NOT NULL,
  CODE          VARCHAR2(10 BYTE)               NOT NULL,
  NAME          VARCHAR2(10 BYTE)               NOT NULL,
  DESCRIPTION   VARCHAR2(250 BYTE),
  ISACTIVE      NUMBER(1),
  CREATED       DATE                            NOT NULL,
  MODIFIEDBY    NUMBER                          NOT NULL,
  LASTMODIFIED  DATE                            NOT NULL
);


/* RELATION	*/
--ALTER TABLE RELATION DROP PRIMARY KEY CASCADE;
CREATE TABLE RELATION
(
  ID               NUMBER                       NOT NULL,
  CODE             VARCHAR2(50 BYTE)            NOT NULL,
  NAME             VARCHAR2(50 BYTE)            NOT NULL,
  ADDRESS1         VARCHAR2(50 BYTE)            NOT NULL,
  ADDRESS2         VARCHAR2(50 BYTE),
  CITY             VARCHAR2(50 BYTE),
  PIN              VARCHAR2(50 BYTE),
  PHONE            VARCHAR2(50 BYTE),
  FAX              VARCHAR2(50 BYTE),
  CONTACTPERSON    VARCHAR2(50 BYTE),
  MOBILE           VARCHAR2(25 BYTE),
  EMAIL            VARCHAR2(25 BYTE),
  NARRATION        VARCHAR2(250 BYTE),
  ISACTIVE         NUMBER(1)                    NOT NULL,
  LASTMODIFIED     DATE,
  CREATED          DATE                         NOT NULL,
  MODIFIEDBY       NUMBER,
  RELATIONTYPEID   NUMBER,
  TDSID            NUMBER,
  GLCODEID         NUMBER,
  PANNO            VARCHAR2(50 BYTE),
  TINNO            VARCHAR2(50 BYTE),
  BANKACCOUNT      VARCHAR2(50 BYTE),
  BANKNAME         VARCHAR2(50 BYTE),
  PWDAPPROVALCODE  VARCHAR2(30 BYTE),
  REGNO            VARCHAR2(30 BYTE),
  CREATEDBY        INTEGER                      NOT NULL,
  STATUSID         NUMBER,
  GRADEID          NUMBER,
  INACTIVEON       DATE,
  PARTYTYPEID      NUMBER,
  SUBTYPEID        NUMBER
 );





/*  WORKSDETAIL  */

--ALTER TABLE WORKSDETAIL DROP PRIMARY KEY CASCADE;
--DROP TABLE WORKSDETAIL CASCADE CONSTRAINTS;


CREATE TABLE WORKSDETAIL
(
  ID               NUMBER                       NOT NULL,
  RELATIONID       NUMBER                       NOT NULL,
  CODE             VARCHAR2(50 BYTE)            NOT NULL,
  ORDERDATE        DATE                         NOT NULL,
  TOTALVALUE       NUMBER                       NOT NULL,
  PAIDAMOUNT       NUMBER,
  ADVANCEPAYABLE   NUMBER,
  ADVANCEAMOUNT    NUMBER,
  ISACTIVE         NUMBER                       NOT NULL,
  CREATED          DATE                         NOT NULL,
  LASTMODIFIED     DATE,
  MODIFIEDBY       NUMBER,
  NAME             VARCHAR2(120 BYTE)           NOT NULL,
  AUTHORIZEDBY     VARCHAR2(50 BYTE),
  LEVELOFWORK      VARCHAR2(20 BYTE)            NOT NULL,
  WARDID           NUMBER,
  SCHEMEID         NUMBER,
  TDSID            NUMBER,
  SECURITYDEPOSIT  VARCHAR2(50 BYTE),
  RETENTION        NUMBER,
  BANKGUARANTEE    VARCHAR2(150 BYTE),
  GLCODEID         NUMBER(10),
  PASSEDAMOUNT     NUMBER(10,2),
  TYPE             NUMBER,
  ADVANCEADJ       NUMBER(14,2),
  FUNDID           NUMBER(10),
  FUNDSOURCEID     NUMBER(10),
  SANCTIONNO       VARCHAR2(30 BYTE),
  WORKSTDS         NUMBER(3),
  REMARKS          VARCHAR2(250 BYTE),
  SANCTIONDATE     DATE,
  ACT_COMM_DATE    DATE,
  ACT_COMP_DATE    DATE,
  COMM_DATE        DATE,
  COMP_DATE        DATE,
  WORKLOCATION     VARCHAR2(250 BYTE),
  WORKCATEGORY     NUMBER,
  SUBCATEGORY      NUMBER,
  USERDEPTID       NUMBER,
  EXECDEPTID       NUMBER,
  SHIPTO           NUMBER,
  BILLTO           VARCHAR2(300 BYTE),
  STATUSID         NUMBER,
  CREATEDBY        NUMBER,
  PARENTID         NUMBER
);


/*  EGW_WORKS_MIS  */

--ALTER TABLE EGW_WORKS_MIS DROP PRIMARY KEY CASCADE;
--DROP TABLE EGW_WORKS_MIS CASCADE CONSTRAINTS;

CREATE TABLE EGW_WORKS_MIS
(
  ID                    NUMBER,
  WORKSDETAILID         NUMBER                  NOT NULL,
  FUNDID                NUMBER,
  EMDRECEIVED           NUMBER(10,2),
  CHEQUE_REFNO          VARCHAR2(20 BYTE),
  CHEQUE_REFNO_DATE     DATE,
  PERFORMANCE_SECURITY  NUMBER(10,2),
  COUNCILRES            VARCHAR2(30 BYTE),
  COUNCILRESDATE        DATE,
  TENDERNO              VARCHAR2(50 BYTE),
  TENDERAMT             NUMBER(15,2),
  TENDERDATE            DATE,
  AGREEMENT_NO          VARCHAR2(50 BYTE),
  ESTIMATEDCOST         NUMBER(15,2),
  THIRDPARY             NUMBER,
  YEARS                 NUMBER,
  MONTHS                NUMBER,
  DAYS                  NUMBER,
  ESTIMATEPREPAREDON    DATE,
  LIABILITYUNTIL        DATE,
  ESIMATEPREPAREDBY     NUMBER,
  WARDID                NUMBER,
  LASTMODIFIEDDATE      DATE                    NOT NULL,
  OTHERDETAILS          VARCHAR2(500 BYTE),
  FIELDID               NUMBER,
  SCHEMEID              NUMBER,
  SUBSCHEMEID           NUMBER,
  TYPE                  VARCHAR2(30 BYTE),
  CONTRACTRATE          NUMBER(5,2),
  MOB_PERC              NUMBER(5,2),
  REBATETYPE            VARCHAR2(30 BYTE),
  REBATE                NUMBER(10,2),
  AGREEMENT_TYPE        VARCHAR2(30 BYTE),
  WEIGHTAGE             VARCHAR2(30 BYTE),
  TENDER_DETAILS        VARCHAR2(300 BYTE),
  MBADVINTEREST         NUMBER(5,2),
  SECURITY_DEPOSIT      NUMBER(15,2),
  NOTES                 VARCHAR2(300 BYTE),
  XVALUE                NUMBER(5,2),
  YVALUE                NUMBER(5,2),
  CONTRACTOR_GRADE      NUMBER
);


/*  EGW_TYPEOFWORK */

--ALTER TABLE EGW_TYPEOFWORK DROP PRIMARY KEY CASCADE;
--DROP TABLE EGW_TYPEOFWORK CASCADE CONSTRAINTS;

CREATE TABLE EGW_TYPEOFWORK
(
  ID                NUMBER,
  CODE              VARCHAR2(20 BYTE)           NOT NULL,
  PARENTID          NUMBER,
  DESCRIPTION       VARCHAR2(1000 BYTE)         NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE,
  PARTYTYPEID       NUMBER
);


/*  EG_WORKSTYPE */

ALTER TABLE EG_WORKSTYPE DROP PRIMARY KEY CASCADE;
DROP TABLE EG_WORKSTYPE CASCADE CONSTRAINTS;



CREATE TABLE EG_WORKSTYPE
(
  ID    NUMBER,
  NAME  VARCHAR2(30 BYTE)                       NOT NULL
);

/*  EGF_SUBSCHEDULE */

--ALTER TABLE EGF_SUBSCHEDULE DROP PRIMARY KEY CASCADE;
--DROP TABLE EGF_SUBSCHEDULE CASCADE CONSTRAINTS;

CREATE TABLE EGF_SUBSCHEDULE
(
  ID               NUMBER,
  REPORTTYPE       VARCHAR2(5 BYTE),
  SUBSCHEDULENAME  VARCHAR2(50 BYTE),
  SUBSCHNAME       VARCHAR2(10 BYTE)
);


/* EGF_MAPPEDTDS */


CREATE TABLE EGF_MAPPEDTDS
(
  ID               NUMBER,
  TDSID            NUMBER                       NOT NULL,
  TDSNAME          VARCHAR2(20 BYTE)            NOT NULL,
  GLCODEID         NUMBER                       NOT NULL,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  GENERALLEDGERID  NUMBER                       NOT NULL
);

/* EGF_WARD */
CREATE TABLE EGF_WARD
(
  ID    NUMBER                                  NOT NULL,
  NAME  VARCHAR2(50 BYTE)                       NOT NULL
);

/* EGF_MRNHEADER */
CREATE TABLE EGF_MRNHEADER
(
  ID            NUMBER,
  BOOKNO        VARCHAR2(32 BYTE)               NOT NULL,
  MRNNO         VARCHAR2(30 BYTE)               NOT NULL,
  CHALLNO       VARCHAR2(30 BYTE)               NOT NULL,
  FROMSTOREID   NUMBER,
  RECVSTOREID   NUMBER                          NOT NULL,
  RELATIONID    NUMBER                          NOT NULL,
  DEPTID        NUMBER,
  PURPOSE       VARCHAR2(30 BYTE),
  RECEIVEDDATE  DATE                            NOT NULL,
  INSPECTEDBY   VARCHAR2(30 BYTE),
  CREATED       DATE                            NOT NULL,
  LASTMODIFIED  TIMESTAMP(6)                    NOT NULL,
  MODIFIEDBY    NUMBER,
  CREATEDBY     NUMBER                          DEFAULT '0'                   NOT NULL,
  STATUS        VARCHAR2(30 BYTE)               NOT NULL,
  BILLRECEIVED  NUMBER                          NOT NULL
);

/************** UNIQUE INDEX   ***************/

CREATE UNIQUE INDEX PK_ACCOUNTDETAILKEY ON ACCOUNTDETAILKEY
(ID);


CREATE UNIQUE INDEX ACCOUNTDETAILTYPE_PK ON ACCOUNTDETAILTYPE
(ID);

CREATE UNIQUE INDEX ACCOUNTENTITYMASTER_PK ON ACCOUNTENTITYMASTER
(ID);

CREATE UNIQUE INDEX ACCOUNTGROUP_PK ON ACCOUNTGROUP
(ID);

CREATE UNIQUE INDEX PK_BANKENTRIES ON BANKENTRIES
 (ID) ;
 
 CREATE UNIQUE INDEX BANKRECONCILIATION_PK ON BANKRECONCILIATION
 (ID);

CREATE UNIQUE INDEX BILLCOLLECTOR_PK ON BILLCOLLECTOR
(ID);

CREATE UNIQUE INDEX BILLCOLLECTORDETAIL_PK ON BILLCOLLECTORDETAIL
(ID);


CREATE UNIQUE INDEX PK_COADETAIL ON CHARTOFACCOUNTDETAIL
(ID);

CREATE UNIQUE INDEX CHARTOFACCOUNTS_GLCODE ON CHARTOFACCOUNTS
(GLCODE);


CREATE UNIQUE INDEX CHARTOFACCOUNTS_PK ON CHARTOFACCOUNTS
(ID);

CREATE UNIQUE INDEX CHEQUEDETAIL_PK ON CHEQUEDETAIL
(ID);

CREATE UNIQUE INDEX CLOSEDPERIODS_PK ON CLOSEDPERIODS
(ID);

CREATE UNIQUE INDEX ID_TYPE_PK ON CODEMAPPING
(ID);

CREATE UNIQUE INDEX CODESERVICEMAP_PK ON CODESERVICEMAP
(ID);

CREATE UNIQUE INDEX PK_COMPANY ON COMPANYDETAIL
(ID);

CREATE UNIQUE INDEX CONTRACTORBILLDETAIL_PK ON CONTRACTORBILLDETAIL
(ID);

CREATE UNIQUE INDEX CONTRAJOURNALVOUCHER_PK ON CONTRAJOURNALVOUCHER
(ID);


CREATE UNIQUE INDEX VOUCHERHEADERID ON CONTRAJOURNALVOUCHER
(VOUCHERHEADERID);

CREATE UNIQUE INDEX EGF_ACCOUNTCODE_PURPOSE_PK ON EGF_ACCOUNTCODE_PURPOSE
(ID);


CREATE UNIQUE INDEX ACCOUNTCODE ON EGF_ACCOUNTCODE_PURPOSE
(NAME);

CREATE UNIQUE INDEX FROM_CST ON EGF_ACCOUNT_CHEQUES
(BANKACCOUNTID, FROMCHEQUENUMBER);


CREATE UNIQUE INDEX TO_CST ON EGF_ACCOUNT_CHEQUES
(BANKACCOUNTID, TOCHEQUENUMBER);

CREATE UNIQUE INDEX EGF_BUDGET_PK ON EGF_BUDGET
(ID);


CREATE UNIQUE INDEX EGF_BUDGET_NAME ON EGF_BUDGET
(NAME);

CREATE UNIQUE INDEX EGF_BUDGETDETAIL_PK ON EGF_BUDGETDETAIL
(ID);

CREATE UNIQUE INDEX EGF_BUDGETGROUP_NAME ON EGF_BUDGETGROUP
(NAME);


CREATE UNIQUE INDEX EGF_BUDGETGROUP_PK ON EGF_BUDGETGROUP
(ID);

CREATE UNIQUE INDEX PK_CESS_MST ON EGF_CESS_MASTER
(ID);

CREATE UNIQUE INDEX EGF_DISCOUNT_PK ON EGF_DISCOUNT
(ID);


CREATE UNIQUE INDEX DIS ON EGF_DISCOUNT
(FINANCIALYEARID, GLCODEID);

CREATE UNIQUE INDEX EGF_TAX_ACCOUNT_MAPPING_PK ON EGF_TAX_ACCOUNT_MAPPING
(ID);


CREATE UNIQUE INDEX EGF_TAX_CODE_PK ON EGF_TAX_CODE
(ID);


CREATE UNIQUE INDEX TAXCODE ON EGF_TAX_CODE
(CODE);

CREATE UNIQUE INDEX C_EG_NUMBERS ON EG_NUMBERS
(VOUCHERTYPE, FISCIALPERIODID);

CREATE UNIQUE INDEX FILTERSERVICES_PK ON FILTERSERVICES
(ID);


CREATE UNIQUE INDEX FISCALPERIOD_PK ON FISCALPERIOD
(ID);


CREATE UNIQUE INDEX FSP_NAME ON FISCALPERIOD
(NAME);


CREATE UNIQUE INDEX FUNDSOURCE_PK ON FUNDSOURCE
(ID);


CREATE UNIQUE INDEX FSRC_CODE ON FUNDSOURCE
(CODE);


CREATE UNIQUE INDEX FSRC_NAME ON FUNDSOURCE
(NAME);

CREATE UNIQUE INDEX PK_ID ON GENERALLEDGER
(ID);

CREATE UNIQUE INDEX PK_GLDETAIL ON GENERALLEDGERDETAIL
(ID);

CREATE UNIQUE INDEX MISCBILLDETAIL_PK ON MISCBILLDETAIL
(ID);

CREATE UNIQUE INDEX ORGANIZATIONSTRUCTURE_PK ON ORGANIZATIONSTRUCTURE
(ID);


CREATE UNIQUE INDEX ORG_NAME ON ORGANIZATIONSTRUCTURE
(NAME);


CREATE UNIQUE INDEX ORG_CODE ON ORGANIZATIONSTRUCTURE
(CODE);

CREATE UNIQUE INDEX OTHERTAXDETAIL_PK ON OTHERTAXDETAIL
(ID);

CREATE UNIQUE INDEX PAYMENTHEADER_PK ON PAYMENTHEADER
(ID);

CREATE UNIQUE INDEX PK_PTINTER ON PROPERTYTAXINTERMEDIATE
(ID);

CREATE UNIQUE INDEX PK_RECEIPTHEADER ON RECEIPTHEADER
(ID);


CREATE UNIQUE INDEX SCH_NAME ON SCHEME
(NAME);

CREATE UNIQUE INDEX SCREENCONTROLS_PK ON SCREENCONTROLS
(ID);

CREATE UNIQUE INDEX SUBLEDGERPAYMENTHEADER_PK ON SUBLEDGERPAYMENTHEADER
(ID);

CREATE UNIQUE INDEX SUPPLIERBILLDETAIL_PK ON SUPPLIERBILLDETAIL
(ID);

CREATE UNIQUE INDEX TDS_PK ON TDS
(ID);


CREATE UNIQUE INDEX PK_TRANSACTIONSUMMARY ON TRANSACTIONSUMMARY
(ID);

CREATE UNIQUE INDEX TRANSACTIONSUMMARYDETAILS_PK ON TRANSACTIONSUMMARYDETAILS
(ID);

CREATE UNIQUE INDEX VOUCHERDETAIL_PK ON VOUCHERDETAIL
(ID);


CREATE UNIQUE INDEX GVN ON VOUCHERHEADER
(CGVN, FISCALPERIODID);


CREATE UNIQUE INDEX VOUCHERHEADER_PK ON VOUCHERHEADER
(ID);


CREATE UNIQUE INDEX CGN_C ON VOUCHERHEADER
(CGN);

CREATE UNIQUE INDEX WORKSDETAIL_PK ON WORKSDETAIL
(ID);


CREATE UNIQUE INDEX WORKSDETAIL_CODE ON WORKSDETAIL
(CODE);

CREATE UNIQUE INDEX EG_WARD_PK ON EGF_WARD
(ID);


CREATE UNIQUE INDEX EG_WARD ON EGF_WARD
(NAME);


ALTER TABLE EGF_WARD ADD (
  CONSTRAINT EG_WARD_PK PRIMARY KEY (ID) );

ALTER TABLE EGF_WARD ADD (
  CONSTRAINT EG_WARD UNIQUE (NAME) );

CREATE UNIQUE INDEX MRNPK ON EGF_MRNHEADER (ID);


CREATE UNIQUE INDEX MRNNO ON EGF_MRNHEADER (MRNNO);

ALTER TABLE EGF_MRNHEADER ADD (
  CONSTRAINT MRNPK PRIMARY KEY (ID) );

ALTER TABLE EGF_MRNHEADER ADD (
  CONSTRAINT MRNNO UNIQUE (MRNNO) );

/************* OTHER INDEX  ***********/

CREATE INDEX INDX_ACDK_ACDTID ON ACCOUNTDETAILKEY
(DETAILTYPEID);


CREATE INDEX INDX_AEM_ACDTID ON ACCOUNTENTITYMASTER
(DETAILTYPEID);


CREATE INDEX INDX_BE_VHID ON BANKENTRIES
 (VOUCHERHEADERID); 
 
 CREATE INDEX INDX_BE_COAID ON BANKENTRIES
 (GLCODEID) ;
 
 
 CREATE INDEX INDX_BE_BANKACCOUNTID ON BANKENTRIES
 (BANKACCOUNTID) ;
 
 CREATE INDEX INDX_BR_VHID ON BANKRECONCILIATION
 (VOUCHERHEADERID) ;
 
 
 CREATE INDEX INDX_BR_BANKACCOUNTID ON BANKRECONCILIATION
 (BANKACCOUNTID) ;

CREATE INDEX INDX_BCD_WARDID ON BILLCOLLECTORDETAIL
(WARDID);




CREATE INDEX INDX_BCD_BCID ON BILLCOLLECTORDETAIL
(BILLCOLLECTORID);

CREATE INDEX INDX_COAD_COAID ON CHARTOFACCOUNTDETAIL
(GLCODEID);


CREATE INDEX INDX_COAD_ACDTID ON CHARTOFACCOUNTDETAIL
(DETAILTYPEID);

CREATE INDEX INDX_COA_SCHEDULEID ON CHARTOFACCOUNTS
(SCHEDULEID);


CREATE INDEX INDX_COA_PAYSCHEDULEID ON CHARTOFACCOUNTS
(PAYMENTSCHEDULEID);


CREATE INDEX INDX_COA_RECEIPTSCHEDULEID ON CHARTOFACCOUNTS
(RECEIPTSCHEDULEID);


CREATE INDEX INDX_COA_FUNCTIONID ON CHARTOFACCOUNTS
(FUNCTIONID);


CREATE INDEX INDX_COA_PURPOSEID ON CHARTOFACCOUNTS
(PURPOSEID);


CREATE INDEX INDX_CHQID_VHID ON CHEQUEDETAIL
(VOUCHERHEADERID);


CREATE INDEX INDX_CD_BANKID ON CHEQUEDETAIL
(BANKID);


CREATE INDEX INDX_CD_BRANCHID ON CHEQUEDETAIL
(BRANCHID);


CREATE INDEX INDX_CD_ACCOUNTID ON CHEQUEDETAIL
(ACCOUNTNUMBERID);


CREATE INDEX INDX_CM_CHEQUEINHAND ON CODEMAPPING
(CHEQUEINHAND);


CREATE INDEX INDX_CM_CASHINHAND ON CODEMAPPING
(CASHINHAND);


CREATE INDEX INDX_CM_BNDRYID ON CODEMAPPING
(EG_BOUNDARYID);

CREATE INDEX INDX_CSM_SERVICEID ON CODESERVICEMAP
(SERVICEID);


CREATE INDEX INDX_CSM_GLCODEID ON CODESERVICEMAP
(GLCODEID);


CREATE INDEX INDX_CBD_VHID ON CONTRACTORBILLDETAIL
(VOUCHERHEADERID);


CREATE INDEX INDX_CBD_RELATIONID ON CONTRACTORBILLDETAIL
(CONTRACTORID);


CREATE INDEX INDX_CBD_WDID ON CONTRACTORBILLDETAIL
(WORKSDETAILID);


CREATE INDEX INDX_CBD_USERID ON CONTRACTORBILLDETAIL
(GENERATEDBY);


CREATE INDEX INDX_CBD_STATUSID ON CONTRACTORBILLDETAIL
(STATUSID);

CREATE INDEX INDX_CJV_FBANKID ON CONTRAJOURNALVOUCHER
(FROMBANKID);


CREATE INDEX INDX_CJV_TOBANKID ON CONTRAJOURNALVOUCHER
(TOBANKID);


CREATE INDEX INDX_CJV_FBRANCHID ON CONTRAJOURNALVOUCHER
(FROMBANKBRANCHID);


CREATE INDEX INDX_CJV_TOBRANCHID ON CONTRAJOURNALVOUCHER
(TOBANKBRANCHID);


CREATE INDEX INDX_CJV_FFUNDID ON CONTRAJOURNALVOUCHER
(FROMFUNDID);


CREATE INDEX INDX_CJV_TOFUNDID ON CONTRAJOURNALVOUCHER
(TOFUNDID);


CREATE INDEX INDX_CJV_FACCOUNTID ON CONTRAJOURNALVOUCHER
(FROMBANKACCOUNTID);


CREATE INDEX INDX_CJV_TOACCOUNTID ON CONTRAJOURNALVOUCHER
(TOBANKACCOUNTID);

CREATE INDEX INDX_BUD_STATUSID ON EGF_BUDGET
(STATUSID);


CREATE INDEX INDX_EBD_BUDGETID ON EGF_BUDGETDETAIL
(BUDGETID);


CREATE INDEX INDX_EBD_BUDGROUPID ON EGF_BUDGETDETAIL
(BUDGETGROUPID);


CREATE INDEX INDX_EBD_FUNCID ON EGF_BUDGETDETAIL
(FUNCTIONID);


CREATE INDEX INDX_EBD_STATUSID ON EGF_BUDGETDETAIL
(STATUSID);

CREATE INDEX INDX_ECM_GLCODEID ON EGF_CESS_MASTER
(GLCODEID);


CREATE INDEX INDX_ECM_TAXCODEID ON EGF_CESS_MASTER
(TAXCODEID);

CREATE INDEX IDX_RECORDSTATUS_VOUCHERHDID ON EGF_RECORD_STATUS
(VOUCHERHEADERID);

CREATE INDEX INDX_ETAMAPPING_FINYEARID ON EGF_TAX_ACCOUNT_MAPPING
(FINANCIALYEARID);


CREATE INDEX INDX_ETAMAPPING_GLCODEID ON EGF_TAX_ACCOUNT_MAPPING
(GLCODEID);


CREATE INDEX INDX_ETAMAPPING_TAXCODEID ON EGF_TAX_ACCOUNT_MAPPING
(TAXCODEID);

CREATE INDEX INDX_EBD_BILLID ON EG_BILLDETAILS
(BILLID);


CREATE INDEX INDX_EBD_FUNCTIONID ON EG_BILLDETAILS
(FUNCTIONID);


CREATE INDEX INDX_EBD_GLCODEID ON EG_BILLDETAILS
(GLCODEID);

CREATE INDEX INDX_EBPD_BDID ON EG_BILLPAYEEDETAILS
(BILLDETAILID);


CREATE INDEX INDX_EBPD_ADTID ON EG_BILLPAYEEDETAILS
(ACCOUNTDETAILTYPEID);

CREATE INDEX INDX_EBRM_BILLID ON EG_BILLREGISTERMIS
(BILLID);


CREATE INDEX INDX_EBRM_FUNDID ON EG_BILLREGISTERMIS
(FUNDID);


CREATE INDEX INDX_EBRM_SEGMENTID ON EG_BILLREGISTERMIS
(SEGMENTID);


CREATE INDEX INDX_EBRM_SUBSEGID ON EG_BILLREGISTERMIS
(SUBSEGMENTID);


CREATE INDEX INDX_EBRM_FIELDID ON EG_BILLREGISTERMIS
(FIELDID);


CREATE INDEX INDX_EBRM_SUBFIELDID ON EG_BILLREGISTERMIS
(SUBFIELDID);


CREATE INDEX INDX_EBRM_FUNATIONARYID ON EG_BILLREGISTERMIS
(FUNCTIONARYID);


CREATE INDEX INDX_EN_FPID ON EG_NUMBERS
(FISCIALPERIODID);


CREATE INDEX INDX_ESC_VHID ON EG_SURRENDERED_CHEQUES
(VHID);


CREATE INDEX INDX_ESC_ACCOUNTID ON EG_SURRENDERED_CHEQUES
(BANKACCOUNTID);

CREATE INDEX INDX_FP_FINYEARID ON FISCALPERIOD
(FINANCIALYEARID);


CREATE INDEX INDX_GLID_VHID ON GENERALLEDGER
(VOUCHERHEADERID);


CREATE INDEX INDX_GL_FUNCTIONID ON GENERALLEDGER
(FUNCTIONID);

CREATE INDEX INDX_GLD_GLID ON GENERALLEDGERDETAIL
(GENERALLEDGERID);


CREATE INDEX INDX_GLD_ACDTYPEID ON GENERALLEDGERDETAIL
(DETAILTYPEID);

CREATE INDEX INDX_MBD_VHID ON MISCBILLDETAIL
(BILLVHID);

CREATE INDEX INDX_OBD_BILLID ON OTHERBILLDETAIL
(BILLID);


CREATE INDEX INDX_OBD_BILLVHID ON OTHERBILLDETAIL
(VOUCHERHEADERID);


CREATE INDEX INDX_OBD_PAYVHID ON OTHERBILLDETAIL
(PAYVHID);

CREATE INDEX INDX_PH_VHID ON PAYMENTHEADER
(VOUCHERHEADERID);


CREATE INDEX INDX_PH_BANKID ON PAYMENTHEADER
(BANKID);


CREATE INDEX INDX_PH_BRANCHID ON PAYMENTHEADER
(BANKBRANCHID);


CREATE INDEX INDX_PH_ACCOUNTID ON PAYMENTHEADER
(BANKACCOUNTNUMBERID);


CREATE INDEX INDX_PH_CHEQUEID ON PAYMENTHEADER
(CHEQUEID);


CREATE INDEX INDX_PH_MBDID ON PAYMENTHEADER
(MISCBILLDETAILID);

CREATE INDEX INDX_RH_BANKID ON RECEIPTHEADER
(BANKID);


CREATE INDEX INDX_RH_BRANCHID ON RECEIPTHEADER
(BANKBRANCHID);


CREATE INDEX INDX_RH_ACCOUNTID ON RECEIPTHEADER
(BANKACCOUNTNUMBERID);

CREATE INDEX INDX_RH_VHID ON RECEIPTHEADER
(VOUCHERHEADERID);


CREATE INDEX INDX_SBD_VHID ON SALARYBILLDETAIL
(VOUCHERHEADERID);


CREATE INDEX INDX_SBD_FINYEARID ON SALARYBILLDETAIL
(FINANCIALYEARID);

CREATE INDEX INDX_FUNDID ON SCHEME
(FUNDID);


CREATE INDEX INDX_SECTORID ON SCHEME
(SECTORID);

CREATE INDEX INDX_SCHEMEID ON SUB_SCHEME
(SCHEMEID);


CREATE INDEX IDX_SUPPBILL_VOUCHERHEADERID ON SUPPLIERBILLDETAIL
(VOUCHERHEADERID);


CREATE INDEX IDX_SUPPBILL_MRNID ON SUPPLIERBILLDETAIL
(MRNID);

CREATE INDEX INDX_TS_COAID ON TRANSACTIONSUMMARY
(GLCODEID);


CREATE INDEX INDX_TS_FUNDID ON TRANSACTIONSUMMARY
(FUNDID);


CREATE INDEX INDX_TS_FINYEAR ON TRANSACTIONSUMMARY
(FINANCIALYEARID);


CREATE INDEX INDX_TS_FSOURSEID ON TRANSACTIONSUMMARY
(FUNDSOURCEID);


CREATE INDEX INDX_TS_ACDTYPEID ON TRANSACTIONSUMMARY
(ACCOUNTDETAILTYPEID);

CREATE INDEX INDX_TSD_ACDTYPEID ON TRANSACTIONSUMMARYDETAILS
(DETAILTYPEID);


CREATE INDEX INDX_TSD_SUMMARYID ON TRANSACTIONSUMMARYDETAILS
(TXNSUMMARYID);

CREATE INDEX INDX_VD_VHID ON VOUCHERDETAIL
(VOUCHERHEADERID);

CREATE INDEX INDX_VH_FUNDID ON VOUCHERHEADER
(FUNDID);


CREATE INDEX INDX_VH_FSOURCESID ON VOUCHERHEADER
(FUNDSOURCEID);


CREATE INDEX INDX_VMIS_SUBSCHEMEID ON VOUCHERMIS
(SUBSCHEMEID);


CREATE INDEX INDX_VMIS_VHID ON VOUCHERMIS
(VOUCHERHEADERID);


CREATE INDEX INDX_VMIS_SEGMENTID ON VOUCHERMIS
(SEGMENTID);


CREATE INDEX INDX_VMIS_SUBSEGMENTID ON VOUCHERMIS
(SUB_SEGMENTID);


CREATE INDEX INDX_VMIS_SCHEMEID ON VOUCHERMIS
(SCHEMEID);

CREATE INDEX INDX_WD_COAID ON WORKSDETAIL
(GLCODEID);


CREATE INDEX INDX_WD_FUNDID ON WORKSDETAIL
(FUNDID);


CREATE INDEX INDX_WD_RELATIONID ON WORKSDETAIL
(RELATIONID);


CREATE INDEX INDX_WD_FSOURCEID ON WORKSDETAIL
(FUNDSOURCEID);

CREATE UNIQUE INDEX PK_EG_WORKSTYPE ON EG_WORKSTYPE
(ID);


CREATE INDEX INDX_EMTDS_TDSID ON EGF_MAPPEDTDS
(TDSID);

CREATE INDEX INDX_EMTDS_GLCODEID ON EGF_MAPPEDTDS
(GLCODEID);

CREATE INDEX INDX_EMTDS_VOUCHERHEADERID ON EGF_MAPPEDTDS
(VOUCHERHEADERID);

CREATE INDEX INDX_EMTDS_GENERALLEDGERID ON EGF_MAPPEDTDS
(GENERALLEDGERID);


CREATE UNIQUE INDEX RELATION_PK ON RELATION (ID);


CREATE UNIQUE INDEX REL_CODE ON RELATION (CODE);

CREATE UNIQUE INDEX UNIQUE_NAME_RELATIONTYPEID ON RELATION
(NAME, RELATIONTYPEID);


CREATE INDEX INDX_R_TYPEID ON RELATION
(RELATIONTYPEID);

CREATE UNIQUE INDEX RELATIONTYPE_PK ON RELATIONTYPE
(ID);

CREATE UNIQUE INDEX RELTY_CODE ON RELATIONTYPE
(CODE);

CREATE UNIQUE INDEX RELTY_NAME ON RELATIONTYPE
(NAME);



ALTER TABLE EGF_MAPPEDTDS ADD (
  PRIMARY KEY (ID));


/*********** FOREIGN KEYS **********/

ALTER TABLE RELATIONTYPE ADD (
  CONSTRAINT RELATIONTYPE_PK PRIMARY KEY (ID));


ALTER TABLE ACCOUNTDETAILKEY ADD (
  CONSTRAINT PK_ACCOUNTDETAILKEY PRIMARY KEY (ID)    );

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT CHARTOFACCOUNTS_PK PRIMARY KEY (ID)
    );

 ALTER TABLE ACCOUNTDETAILTYPE ADD (
      CONSTRAINT ACCOUNTDETAILTYPE_PK PRIMARY KEY (ID)
        );

   ALTER TABLE ACCOUNTENTITYMASTER ADD (
      CONSTRAINT ACCOUNTENTITYMASTER_PK PRIMARY KEY (ID)
        );

  ALTER TABLE ACCOUNTGROUP ADD (
      CONSTRAINT ACCOUNTGROUP_PK PRIMARY KEY (ID)
        );
               
 ALTER TABLE BANKENTRIES ADD (
   CONSTRAINT PK_BANKENTRIES PRIMARY KEY (ID)
     );
 
  ALTER TABLE BANKRECONCILIATION ADD (
   CONSTRAINT BANKRECONCILIATION_PK PRIMARY KEY (ID)
     );
 
 ALTER TABLE BILLCOLLECTOR ADD (
  CONSTRAINT BILLCOLLECTOR_PK PRIMARY KEY (ID)
    );

ALTER TABLE BILLCOLLECTORDETAIL ADD (
  CONSTRAINT BILLCOLLECTORDETAIL_PK PRIMARY KEY (ID)
    );

ALTER TABLE CHARTOFACCOUNTDETAIL ADD (
  CONSTRAINT PK_COADETAIL PRIMARY KEY (ID)
    );

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT CHARTOFACCOUNTS_GLCODE UNIQUE (GLCODE)
    );


ALTER TABLE CHEQUEDETAIL ADD (
  CONSTRAINT CHEQUEDETAIL_PK PRIMARY KEY (ID)
    );

ALTER TABLE CLOSEDPERIODS ADD (
  CONSTRAINT CLOSEDPERIODS_PK PRIMARY KEY (ID)
   );

ALTER TABLE CODEMAPPING ADD (
  CONSTRAINT ID_TYPE_PK PRIMARY KEY (ID)
    );
ALTER TABLE CODESERVICEMAP ADD (
  CONSTRAINT CODESERVICEMAP_PK PRIMARY KEY (ID)
    );

ALTER TABLE COMPANYDETAIL ADD (
  CONSTRAINT PK_COMPANY PRIMARY KEY (ID)
    );


ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT CONTRACTORBILLDETAIL_PK PRIMARY KEY (ID)
    );

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT CONTRAJOURNALVOUCHER_PK PRIMARY KEY (ID)
    );

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT VOUCHERHEADERID UNIQUE (VOUCHERHEADERID)
    );

ALTER TABLE EGF_ACCOUNTCODE_PURPOSE ADD (
  CONSTRAINT EGF_ACCOUNTCODE_PURPOSE_PK PRIMARY KEY (ID)
    );

ALTER TABLE EGF_ACCOUNTCODE_PURPOSE ADD (
  CONSTRAINT ACCOUNTCODE UNIQUE (NAME)
    );

ALTER TABLE EGF_ACCOUNT_CHEQUES ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT EGF_BUDGET_PK PRIMARY KEY (ID)
    );

ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT EGF_BUDGET_NAME UNIQUE (NAME)
    );

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT EGF_BUDGETDETAIL_PK PRIMARY KEY (ID)
   );

ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT EGF_BUDGETGROUP_PK PRIMARY KEY (ID)
    );

ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT EGF_BUDGETGROUP_NAME UNIQUE (NAME)
    );
ALTER TABLE EGF_BUDGETING_TYPE ADD (
  PRIMARY KEY (ID)
    );


ALTER TABLE EGF_BUDGET_ACCTYPE ADD (
  PRIMARY KEY (ID)
   );

ALTER TABLE EGF_BUDGET_STATUS ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE EGF_CESS_MASTER ADD (
  CONSTRAINT PK_CESS_MST PRIMARY KEY (ID)
   );


ALTER TABLE EGF_DISCOUNT ADD (
  CONSTRAINT EGF_DISCOUNT_PK PRIMARY KEY (ID)
    );

ALTER TABLE EGF_DISCOUNT ADD (
  CONSTRAINT DIS UNIQUE (FINANCIALYEARID, GLCODEID)
    );

ALTER TABLE EGF_FUNCTION_GENERALLEDGER ADD (
  PRIMARY KEY (ID)
    );


ALTER TABLE EGF_RECORD_STATUS ADD (
  PRIMARY KEY (ID)
    );
ALTER TABLE EGF_TAX_ACCOUNT_MAPPING ADD (
  CONSTRAINT EGF_TAX_ACCOUNT_MAPPING_PK PRIMARY KEY (ID)
    );


ALTER TABLE EGF_TAX_CODE ADD (
  CONSTRAINT EGF_TAX_CODE_PK PRIMARY KEY (ID)
    );

ALTER TABLE EGF_TAX_CODE ADD (
  CONSTRAINT TAXCODE UNIQUE (CODE)
    );

ALTER TABLE EG_BILLPAYEEDETAILS ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE EG_BILLREGISTER ADD (
  PRIMARY KEY (ID)
   );

ALTER TABLE EG_BILLREGISTER ADD (
  UNIQUE (BILLNUMBER)
    );

ALTER TABLE EG_DEDUCTION_DETAILS ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE EG_NUMBERS ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE EG_NUMBERS ADD (
  CONSTRAINT C_EG_NUMBERS UNIQUE (VOUCHERTYPE, FISCIALPERIODID)
    );

ALTER TABLE EG_PARTYTYPE ADD (
  PRIMARY KEY (ID)
   );

ALTER TABLE EG_REMITTANCE ADD (
  PRIMARY KEY (ID)
    );
ALTER TABLE EG_REMITTANCE_DETAIL ADD (
  PRIMARY KEY (ID)
    );


ALTER TABLE EG_REMITTANCE_GLDTL ADD (
  PRIMARY KEY (ID)
    );
ALTER TABLE EG_SALARYCODES ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE EG_SURRENDERED_CHEQUES ADD (
  PRIMARY KEY (ID)
    );


ALTER TABLE FILTERSERVICES ADD (
  CONSTRAINT FILTERSERVICES_PK PRIMARY KEY (ID)
   );

ALTER TABLE FISCALPERIOD ADD (
  CONSTRAINT FISCALPERIOD_PK PRIMARY KEY (ID)
   );
ALTER TABLE FUNDSOURCE ADD (
  CONSTRAINT FUNDSOURCE_PK PRIMARY KEY (ID)
   );

ALTER TABLE FUNDSOURCE ADD (
  CONSTRAINT FSRC_CODE UNIQUE (CODE)
    );

ALTER TABLE FUNDSOURCE ADD (
  CONSTRAINT FSRC_NAME UNIQUE (NAME)
    );

ALTER TABLE GENERALLEDGER ADD (
  CONSTRAINT PK_ID PRIMARY KEY (ID)
    );
ALTER TABLE GENERALLEDGERDETAIL ADD (
  CONSTRAINT PK_GLDETAIL PRIMARY KEY (ID)
   );
ALTER TABLE GENERALVOUCHERMIS ADD (
  PRIMARY KEY (ID)
   );


ALTER TABLE MENUTREE ADD (
  PRIMARY KEY (ID)
    );

ALTER TABLE MISCBILLDETAIL ADD (
  CONSTRAINT MISCBILLDETAIL_PK PRIMARY KEY (ID)
    );
ALTER TABLE ORGANIZATIONSTRUCTURE ADD (
  CONSTRAINT ORGANIZATIONSTRUCTURE_PK PRIMARY KEY (ID)
   );

ALTER TABLE ORGANIZATIONSTRUCTURE ADD (
  CONSTRAINT ORG_NAME UNIQUE (NAME)
   );

ALTER TABLE ORGANIZATIONSTRUCTURE ADD (
  CONSTRAINT ORG_CODE UNIQUE (CODE)
    );
ALTER TABLE OTHERBILLDETAIL ADD (
  PRIMARY KEY (ID)
   );
ALTER TABLE OTHERTAXDETAIL ADD (
  CONSTRAINT OTHERTAXDETAIL_PK PRIMARY KEY (ID)
   );


ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT PAYMENTHEADER_PK PRIMARY KEY (ID)
   );

ALTER TABLE PROPERTYTAXINTERMEDIATE ADD (
  CONSTRAINT PK_PTINTER PRIMARY KEY (ID)
   );


ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT PK_RECEIPTHEADER PRIMARY KEY (ID)
    );


ALTER TABLE SALARYBILLDETAIL ADD (
  CONSTRAINT SALARYBILLDETAIL_PK PRIMARY KEY (ID)
    );

ALTER TABLE SCHEDULEMAPPING ADD (
  PRIMARY KEY (ID)
   );

ALTER TABLE SCHEDULEMAPPING ADD (
  CONSTRAINT SCH_UNQ UNIQUE (SCHEDULE, REPORTTYPE)
   );

ALTER TABLE SCHEME ADD (
  CONSTRAINT SCHEME_PK PRIMARY KEY (ID)
    );

ALTER TABLE SCHEME ADD (
  CONSTRAINT SCH_CODE UNIQUE (CODE)
   );

ALTER TABLE SCHEME ADD (
  CONSTRAINT SCH_NAME UNIQUE (NAME)
  );

ALTER TABLE SCREENCONTROLS ADD (
  CONSTRAINT SCREENCONTROLS_PK PRIMARY KEY (ID)
    );


ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT SUBLEDGERPAYMENTHEADER_PK PRIMARY KEY (ID)
   );

ALTER TABLE SUB_SCHEME ADD (
  PRIMARY KEY (ID)
   );


ALTER TABLE SUPPLIERBILLDETAIL ADD (
  CONSTRAINT SUPPLIERBILLDETAIL_PK PRIMARY KEY (ID)
   );

ALTER TABLE TDS ADD (
  CONSTRAINT TDS_PK PRIMARY KEY (ID)
   );

ALTER TABLE TDS ADD (
  UNIQUE (TYPE)
   );

ALTER TABLE TRANSACTIONSUMMARY ADD (
  CONSTRAINT PK_TRANSACTIONSUMMARY PRIMARY KEY (ID)
    );

ALTER TABLE TRANSACTIONSUMMARYDETAILS ADD (
  CONSTRAINT TRANSACTIONSUMMARYDETAILS_PK PRIMARY KEY (ID)
    );

ALTER TABLE VOUCHERDETAIL ADD (
  CONSTRAINT VOUCHERDETAIL_PK PRIMARY KEY (ID)
    );

ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT VOUCHERHEADER_PK PRIMARY KEY (ID)
    );

ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT GVN UNIQUE (CGVN, FISCALPERIODID)
   );

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT WORKSDETAIL_PK PRIMARY KEY (ID)
   );

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT WORKSDETAIL_CODE UNIQUE (CODE)
    );

ALTER TABLE EGW_WORKS_MIS ADD (
  PRIMARY KEY (ID)
    );


    ALTER TABLE EGW_TYPEOFWORK ADD (
      PRIMARY KEY (ID)
       );

ALTER TABLE EG_WORKSTYPE ADD (
  CONSTRAINT PK_EG_WORKSTYPE PRIMARY KEY (ID)
   );    
               
ALTER TABLE ACCOUNTDETAILKEY ADD (
  CONSTRAINT FK_COA_DK FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE ACCOUNTDETAILKEY ADD (
  CONSTRAINT FK_DT_DK FOREIGN KEY (DETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID));
    
    
    ALTER TABLE ACCOUNTDETAILTYPE ADD (
      UNIQUE (NAME)
       );
    
    ALTER TABLE ACCOUNTDETAILTYPE ADD (
      UNIQUE (ATTRIBUTENAME)
       );
               
 
    
    ALTER TABLE ACCOUNTENTITYMASTER ADD (
      UNIQUE (CODE)
       );
    
    ALTER TABLE ACCOUNTENTITYMASTER ADD (
      UNIQUE (NAME)
        );
    
    
    ALTER TABLE ACCOUNTENTITYMASTER ADD (
      CONSTRAINT FK_DT_AEM FOREIGN KEY (DETAILTYPEID) 
        REFERENCES ACCOUNTDETAILTYPE (ID));
    
    ALTER TABLE ACCOUNTENTITYMASTER ADD (
      CONSTRAINT FK_USERID_PK FOREIGN KEY (MODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));
    
    
  
 
 ALTER TABLE BANKENTRIES ADD (
   CONSTRAINT FKVHID FOREIGN KEY (VOUCHERHEADERID) 
     REFERENCES VOUCHERHEADER (ID));
 
 ALTER TABLE BANKENTRIES ADD (
   CONSTRAINT FKCOAID FOREIGN KEY (GLCODEID) 
     REFERENCES CHARTOFACCOUNTS (ID));
 
 ALTER TABLE BANKENTRIES ADD (
   CONSTRAINT FKBAID FOREIGN KEY (BANKACCOUNTID) 
     REFERENCES BANKACCOUNT (ID));
 

 
 ALTER TABLE BANKRECONCILIATION ADD (
   CONSTRAINT FK_VH_BRS FOREIGN KEY (VOUCHERHEADERID) 
     REFERENCES VOUCHERHEADER (ID));
 
 ALTER TABLE BANKRECONCILIATION ADD (
   CONSTRAINT FK_BACC_BRS FOREIGN KEY (BANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID));
    


ALTER TABLE BILLCOLLECTOR ADD (
  UNIQUE (CODE)
   );

ALTER TABLE BILLCOLLECTOR ADD (
  UNIQUE (NAME)
    );


ALTER TABLE BILLCOLLECTOR ADD (
  CONSTRAINT FK_DEPT_SC FOREIGN KEY (DEPARTMENTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT));
    

ALTER TABLE BILLCOLLECTORDETAIL ADD (
  CONSTRAINT FK_ORGS_BCD FOREIGN KEY (WARDID) 
    REFERENCES ORGANIZATIONSTRUCTURE (ID));

ALTER TABLE BILLCOLLECTORDETAIL ADD (
  CONSTRAINT FK_BC_BCD FOREIGN KEY (BILLCOLLECTORID) 
    REFERENCES BILLCOLLECTOR (ID));


ALTER TABLE CHARTOFACCOUNTDETAIL ADD (
  CONSTRAINT FK_COADT FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CHARTOFACCOUNTDETAIL ADD (
  CONSTRAINT FK_DT_COA FOREIGN KEY (DETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID));



ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_GR_COA FOREIGN KEY (GROUPID) 
    REFERENCES ACCOUNTGROUP (ID) DISABLE);

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_COA_COA FOREIGN KEY (PARENTID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_PUR_COA FOREIGN KEY (PURPOSEID) 
    REFERENCES EGF_ACCOUNTCODE_PURPOSE (ID));

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_FUNCT_COA FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID));

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_COS_SCH FOREIGN KEY (SCHEDULEID) 
    REFERENCES SCHEDULEMAPPING (ID));

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_COS_SCH1 FOREIGN KEY (RECEIPTSCHEDULEID) 
    REFERENCES SCHEDULEMAPPING (ID));

ALTER TABLE CHARTOFACCOUNTS ADD (
  CONSTRAINT FK_COS_SCH2 FOREIGN KEY (PAYMENTSCHEDULEID) 
    REFERENCES SCHEDULEMAPPING (ID));



ALTER TABLE CHEQUEDETAIL ADD (
  CONSTRAINT FK_BRANCH_CHQU FOREIGN KEY (BRANCHID) 
    REFERENCES BANKBRANCH (ID));

ALTER TABLE CHEQUEDETAIL ADD (
  CONSTRAINT FK_VH_CQU FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE CHEQUEDETAIL ADD (
  CONSTRAINT FK_BACC_CHQ FOREIGN KEY (ACCOUNTNUMBERID) 
    REFERENCES BANKACCOUNT (ID));

ALTER TABLE CHEQUEDETAIL ADD (
  CONSTRAINT FK_BANK_CHQ FOREIGN KEY (BANKID) 
    REFERENCES BANK (ID));

ALTER TABLE CODEMAPPING ADD (
  CONSTRAINT BNDRY_FK FOREIGN KEY (EG_BOUNDARYID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY));

ALTER TABLE CODEMAPPING ADD (
  CONSTRAINT FK_COA_CM1 FOREIGN KEY (CASHINHAND) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CODEMAPPING ADD (
  CONSTRAINT FK_COA_CM FOREIGN KEY (CHEQUEINHAND) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CODESERVICEMAP ADD (
  CONSTRAINT FK_COA_CSM FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CODESERVICEMAP ADD (
  CONSTRAINT FK_FILTER_CSM FOREIGN KEY (SERVICEID) 
    REFERENCES FILTERSERVICES (ID));
    
ALTER TABLE COMPANYDETAIL ADD (
  UNIQUE (NAME)  );
               

ALTER TABLE RELATION ADD (
  CONSTRAINT RELATION_PK PRIMARY KEY (ID));
  
  
  ALTER TABLE RELATION ADD (
    CONSTRAINT REL_CODE UNIQUE (CODE));

ALTER TABLE RELATION ADD (
  CONSTRAINT UNIQUE_NAME_RELATIONTYPEID UNIQUE (NAME, RELATIONTYPEID));
               

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_CBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID));

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_VH_CBD FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_WD_CBD FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID));

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_RELATION_CBD FOREIGN KEY (CONTRACTORID) 
    REFERENCES RELATION (ID));

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_CBD_USR FOREIGN KEY (GENERATEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_CBD_ASSET FOREIGN KEY (ASSETID) 
    REFERENCES EG_ASSET (ASSETID));

ALTER TABLE CONTRACTORBILLDETAIL ADD (
  CONSTRAINT FK_CBD_STAT FOREIGN KEY (STATUSID) 
    REFERENCES EGW_STATUS (ID));



ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_COA_CJV2 FOREIGN KEY (TOCHEQUENAMEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_COA_CJV1 FOREIGN KEY (TOCASHNAMEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_FUND_CJV1 FOREIGN KEY (TOFUNDID) 
    REFERENCES FUND (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_BB_CJV1 FOREIGN KEY (TOBANKBRANCHID) 
    REFERENCES BANKBRANCH (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_FUND_CJV FOREIGN KEY (FROMFUNDID) 
    REFERENCES FUND (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_BR_CJV FOREIGN KEY (FROMBANKBRANCHID) 
    REFERENCES BANKBRANCH (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_VH_CJV FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_BANK_CJV FOREIGN KEY (FROMBANKID) 
    REFERENCES BANK (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_BANK_CJV1 FOREIGN KEY (TOBANKID) 
    REFERENCES BANK (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_BA_CJV FOREIGN KEY (FROMBANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID));

ALTER TABLE CONTRAJOURNALVOUCHER ADD (
  CONSTRAINT FK_BA_CJV1 FOREIGN KEY (TOBANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID));


ALTER TABLE EGF_ACCOUNT_CHEQUES ADD (
  CONSTRAINT FK_BA_CHQ FOREIGN KEY (BANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID));


ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT FK_EGF_BUDGET_EGF_BUDGET FOREIGN KEY (PARENT) 
    REFERENCES EGF_BUDGET (ID));

ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT FK_EGF_BUDGET_EGF_BUDGETSTATUS FOREIGN KEY (STATUSID) 
    REFERENCES EGF_BUDGET_STATUS (ID));

ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT FK_EGF_BUDGET_EGF_BUDGET_SUP FOREIGN KEY (BUDGETHEADER) 
    REFERENCES EGF_BUDGET (ID));

ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT FK_EGF_REFERENCE_EGF_BUDGET FOREIGN KEY (REFERENCE) 
    REFERENCES EGF_BUDGET (ID));

ALTER TABLE EGF_BUDGET ADD (
  CONSTRAINT FK_EGF_BUDGET_EG_FINYEAR1 FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID));



ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_BUDDETAIL_ACCOUNTS FOREIGN KEY (BUDGETCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_BUDGETDETAIL_EGF_STATUS FOREIGN KEY (STATUSID) 
    REFERENCES EGF_BUDGET_STATUS (ID));

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_BUDGETDETAIL_EGF_BUDGET FOREIGN KEY (BUDGETID) 
    REFERENCES EGF_BUDGET (ID));

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_DETAIL_EG_DEPT1 FOREIGN KEY (DEPARTMENTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT));

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_BUDDETAIL_GROUP FOREIGN KEY (BUDGETGROUPID) 
    REFERENCES EGF_BUDGETGROUP (ID));

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_DETAIL_EG_WARD FOREIGN KEY (WARDID) 
    REFERENCES EGF_WARD (ID));

ALTER TABLE EGF_BUDGETDETAIL ADD (
  CONSTRAINT FK_EGF_DETAIL_FUNCTION FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID));



ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT FK_EGF_GROUP_EGF_MAJORACC FOREIGN KEY (MAJORCODE) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT FK_EGF_BUDGROUP_EGF_ACCOUNTS FOREIGN KEY (MAXCODE) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT FK_EGF_GROUP_EGF_ACCOUNTS FOREIGN KEY (MINCODE) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT FK_EGF_BUDGETING_TYPE FOREIGN KEY (BUDGETINGTYPE) 
    REFERENCES EGF_BUDGETING_TYPE (ID));

ALTER TABLE EGF_BUDGETGROUP ADD (
  CONSTRAINT FK_EGF_BUDGET_ACCTYPE FOREIGN KEY (ACCTYPE) 
    REFERENCES EGF_BUDGET_ACCTYPE (ID));




ALTER TABLE EGF_BUDGET_STATUS ADD (
  UNIQUE (NAME)
    );

ALTER TABLE EGF_CESS_MASTER ADD (
  CONSTRAINT FK_COA_CESS FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE EGF_CESS_MASTER ADD (
  CONSTRAINT FK_TAX_CESS FOREIGN KEY (TAXCODEID) 
    REFERENCES EGF_TAX_CODE (ID));


ALTER TABLE EGF_DISCOUNT ADD (
  CONSTRAINT FK_COA_DIS FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));



ALTER TABLE EGF_RECORD_STATUS ADD (
  CONSTRAINT FK_VH_RS FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE EGF_TAX_ACCOUNT_MAPPING ADD (
  CONSTRAINT FK_TAX_TAM FOREIGN KEY (TAXCODEID) 
    REFERENCES EGF_TAX_CODE (ID));

ALTER TABLE EGF_TAX_ACCOUNT_MAPPING ADD (
  CONSTRAINT FK_FY_TAM FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID));

ALTER TABLE EGF_TAX_ACCOUNT_MAPPING ADD (
  CONSTRAINT FK_COA_TAM FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));




ALTER TABLE EG_BILLDETAILS ADD (
  CONSTRAINT FK_BD_GL FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE EG_BILLDETAILS ADD (
  CONSTRAINT FK_BD_FUN FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID));

ALTER TABLE EG_BILLDETAILS ADD (
  CONSTRAINT FK_BD_BRG FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID));


ALTER TABLE EG_BILLPAYEEDETAILS ADD (
  CONSTRAINT FK_BDP_ADT FOREIGN KEY (ACCOUNTDETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID));

ALTER TABLE EG_BILLPAYEEDETAILS ADD (
  FOREIGN KEY (TDSID) 
    REFERENCES TDS (ID));


ALTER TABLE EG_BILLREGISTER ADD (
  CONSTRAINT FK_BR_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_BILLREGISTER ADD (
  CONSTRAINT FK_BR_FD FOREIGN KEY (FIELDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY));

ALTER TABLE EG_BILLREGISTER ADD (
  CONSTRAINT FK_BR_WD FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID));

ALTER TABLE EG_BILLREGISTER ADD (
  CONSTRAINT FK_BR_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));


ALTER TABLE EG_BILLREGISTERMIS ADD (
  CONSTRAINT FK_BRM_DPT FOREIGN KEY (DEPARTMENTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT));

ALTER TABLE EG_BILLREGISTERMIS ADD (
  CONSTRAINT FK_BRM_FY FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID));

ALTER TABLE EG_BILLREGISTERMIS ADD (
  CONSTRAINT FK_BRM_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID));

ALTER TABLE EG_BILLREGISTERMIS ADD (
  CONSTRAINT FK_BRM_FS FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID));

ALTER TABLE EG_BILLREGISTERMIS ADD (
  CONSTRAINT FK_BRM_FD FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));


ALTER TABLE EG_DEDUCTION_DETAILS ADD (
  CONSTRAINT FK_TDSD_TDS FOREIGN KEY (TDSID) 
    REFERENCES TDS (ID));

ALTER TABLE EG_DEDUCTION_DETAILS ADD (
  CONSTRAINT FK_DEDD_TYPW FOREIGN KEY (DOCTYPEID) 
    REFERENCES EGW_TYPEOFWORK (ID));

ALTER TABLE EG_DEDUCTION_DETAILS ADD (
  CONSTRAINT FK_DEDD_FY FOREIGN KEY (PARTYTYPEID) 
    REFERENCES EG_PARTYTYPE (ID));

ALTER TABLE EG_DEDUCTION_DETAILS ADD (
  CONSTRAINT FK_DEDD_TYPW1 FOREIGN KEY (DOCSUBTYPEID) 
    REFERENCES EGW_TYPEOFWORK (ID));



ALTER TABLE EG_NUMBERS ADD (
  CONSTRAINT FK_FP_NUM FOREIGN KEY (FISCIALPERIODID) 
    REFERENCES FISCALPERIOD (ID));

ALTER TABLE EG_PARTYTYPE ADD (
  CONSTRAINT FK_PT_PT FOREIGN KEY (PARENTID) 
    REFERENCES EG_PARTYTYPE (ID));

ALTER TABLE EG_PARTYTYPE ADD (
  CONSTRAINT FK_PT_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_PARTYTYPE ADD (
  CONSTRAINT FK_PT_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_REMITTANCE ADD (
  CONSTRAINT FK_RMT_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_REMITTANCE ADD (
  CONSTRAINT FK_RMT_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_REMITTANCE ADD (
  CONSTRAINT FK_RMT_TDS FOREIGN KEY (TDSID) 
    REFERENCES TDS (ID));

ALTER TABLE EG_REMITTANCE ADD (
  CONSTRAINT FK_RMT_FD FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));

ALTER TABLE EG_REMITTANCE ADD (
  CONSTRAINT FK_RMT_FY FOREIGN KEY (FYID) 
    REFERENCES FINANCIALYEAR (ID));

ALTER TABLE EG_REMITTANCE ADD (
  CONSTRAINT FK_RMT_VH FOREIGN KEY (PAYMENTVHID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE EG_REMITTANCE_GLDTL ADD (
  CONSTRAINT FK_RMTGL_GLD FOREIGN KEY (GLDTLID) 
    REFERENCES GENERALLEDGERDETAIL (ID));

ALTER TABLE EG_REMITTANCE_GLDTL ADD (
  FOREIGN KEY (TDSID) 
    REFERENCES TDS (ID));


ALTER TABLE EG_SALARYCODES ADD (
  CONSTRAINT FK_SBC_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_SALARYCODES ADD (
  CONSTRAINT FK_SBC_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EG_SALARYCODES ADD (
  CONSTRAINT FK_SBC_COA FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));


ALTER TABLE EG_SURRENDERED_CHEQUES ADD (
  CONSTRAINT FK_SURC_BA FOREIGN KEY (BANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID));

ALTER TABLE EG_SURRENDERED_CHEQUES ADD (
  CONSTRAINT FK_SURC_VH FOREIGN KEY (VHID) 
    REFERENCES VOUCHERHEADER (ID));




ALTER TABLE FISCALPERIOD ADD (
  CONSTRAINT FK_FP_MD FOREIGN KEY (MODULEID) 
    REFERENCES EG_MODULE (ID_MODULE));

ALTER TABLE FISCALPERIOD ADD (
  CONSTRAINT FK_FY_FP FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID));

ALTER TABLE FUNDSOURCE ADD (
  CONSTRAINT FK_FS FOREIGN KEY (PARENTID) 
    REFERENCES FUNDSOURCE (ID));
ALTER TABLE GENERALLEDGER ADD (
  CONSTRAINT FK_GL_VD FOREIGN KEY (VOUCHERLINEID) 
    REFERENCES VOUCHERDETAIL (ID));

ALTER TABLE GENERALLEDGER ADD (
  CONSTRAINT FK_FUN_GL FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID));

ALTER TABLE GENERALLEDGER ADD (
  CONSTRAINT FK_COA_GL FOREIGN KEY (GLCODE) 
    REFERENCES CHARTOFACCOUNTS (GLCODE));

ALTER TABLE GENERALLEDGER ADD (
  CONSTRAINT FK_COA FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE GENERALLEDGER ADD (
  CONSTRAINT FK_VOUCHERHEADER FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));



ALTER TABLE GENERALLEDGERDETAIL ADD (
  CONSTRAINT FK_DT_GLD FOREIGN KEY (DETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID));

ALTER TABLE GENERALLEDGERDETAIL ADD (
  CONSTRAINT FK_GL_GLD FOREIGN KEY (GENERALLEDGERID) 
    REFERENCES GENERALLEDGER (ID));


ALTER TABLE GENERALVOUCHERMIS ADD (
  CONSTRAINT FK_VH_GV FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));



ALTER TABLE MENUTREE ADD (
  CONSTRAINT FK_ACTION_MT FOREIGN KEY (ACTIONID) 
    REFERENCES EG_ACTION (ID));




ALTER TABLE MISCBILLDETAIL ADD (
  CONSTRAINT FK_MBD_VH FOREIGN KEY (BILLVHID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE MISCBILLDETAIL ADD (
  CONSTRAINT FK_BC_MBD FOREIGN KEY (PAIDBYID) 
    REFERENCES BILLCOLLECTOR (ID));




ALTER TABLE ORGANIZATIONSTRUCTURE ADD (
  CONSTRAINT FK_OS_OS FOREIGN KEY (PARENTID) 
    REFERENCES ORGANIZATIONSTRUCTURE (ID));



ALTER TABLE OTHERBILLDETAIL ADD (
  CONSTRAINT FK_OBD_VH1 FOREIGN KEY (PAYVHID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE OTHERBILLDETAIL ADD (
  CONSTRAINT FK_OBD_VH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE OTHERBILLDETAIL ADD (
  CONSTRAINT FK_OBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID));



ALTER TABLE OTHERTAXDETAIL ADD (
  CONSTRAINT FK_COA_OT FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE OTHERTAXDETAIL ADD (
  CONSTRAINT FK_VH_OT FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));


ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT FK_MBD_PH FOREIGN KEY (MISCBILLDETAILID) 
    REFERENCES MISCBILLDETAIL (ID));

ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT FK_CHQ_PH FOREIGN KEY (CHEQUEID) 
    REFERENCES CHEQUEDETAIL (ID));

ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT FK_BR_PH FOREIGN KEY (BANKBRANCHID) 
    REFERENCES BANKBRANCH (ID));

ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT FK_VH_PH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT FK_BA_PH FOREIGN KEY (BANKACCOUNTNUMBERID) 
    REFERENCES BANKACCOUNT (ID));

ALTER TABLE PAYMENTHEADER ADD (
  CONSTRAINT FK_BK_PH FOREIGN KEY (BANKID) 
    REFERENCES BANK (ID));



ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_CD_RH FOREIGN KEY (CHEQUEID) 
    REFERENCES CHEQUEDETAIL (ID));

ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_BRANCH_RH FOREIGN KEY (BANKBRANCHID) 
    REFERENCES BANKBRANCH (ID));

ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_BC2_RH FOREIGN KEY (BILLCOLLECTORID) 
    REFERENCES BILLCOLLECTOR (ID));

ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_BC_RH FOREIGN KEY (COUNTERID) 
    REFERENCES BILLCOLLECTOR (ID));

ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_VH_RH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_BANKACC_RH FOREIGN KEY (BANKACCOUNTNUMBERID) 
    REFERENCES BANKACCOUNT (ID));

ALTER TABLE RECEIPTHEADER ADD (
  CONSTRAINT FK_BANK_RH FOREIGN KEY (BANKID) 
    REFERENCES BANK (ID));

ALTER TABLE SALARYBILLDETAIL ADD (
  CONSTRAINT FK_FY_SBD FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID));

ALTER TABLE SALARYBILLDETAIL ADD (
  CONSTRAINT FK_VH_SBD1 FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE SALARYBILLDETAIL ADD (
  CONSTRAINT FK_SLBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID));



ALTER TABLE SCHEDULEMAPPING ADD (
  CONSTRAINT FK_SCD_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE SCHEDULEMAPPING ADD (
  CONSTRAINT FK_SCH_CUSER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER));




ALTER TABLE SCHEME ADD (
  FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));




ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_CD_SPH FOREIGN KEY (CHEQUEID) 
    REFERENCES CHEQUEDETAIL (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_SALBILL FOREIGN KEY (SALARYBILLID) 
    REFERENCES SALARYBILLDETAIL (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_SUPPBILL FOREIGN KEY (SUPPLIERBILLID) 
    REFERENCES SUPPLIERBILLDETAIL (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_CONBILL FOREIGN KEY (CONTRACTORBILLID) 
    REFERENCES CONTRACTORBILLDETAIL (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_WORKS_SPH FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_REALTION_SPH1 FOREIGN KEY (CONTRACTORID) 
    REFERENCES RELATION (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_RELATION_SPH FOREIGN KEY (SUPPLIERID) 
    REFERENCES RELATION (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_VH_SPH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE SUBLEDGERPAYMENTHEADER ADD (
  CONSTRAINT FK_BA_SPH FOREIGN KEY (BANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID));



ALTER TABLE SUB_SCHEME ADD (
  CONSTRAINT SUB_SCHEME_R01 FOREIGN KEY (SCHEMEID) 
    REFERENCES SCHEME (ID));


ALTER TABLE SUPPLIERBILLDETAIL ADD (
  CONSTRAINT FK_SBD_VH FOREIGN KEY (MRNID) 
    REFERENCES EGF_MRNHEADER (ID));

ALTER TABLE SUPPLIERBILLDETAIL ADD (
  CONSTRAINT FK_SBD_ASSET FOREIGN KEY (ASSETID) 
    REFERENCES EG_ASSET (ASSETID));

ALTER TABLE SUPPLIERBILLDETAIL ADD (
  CONSTRAINT FK_SBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID));

ALTER TABLE SUPPLIERBILLDETAIL ADD (
  CONSTRAINT FK_RELATION_SBD FOREIGN KEY (SUPPLIERID) 
    REFERENCES RELATION (ID));

ALTER TABLE SUPPLIERBILLDETAIL ADD (
  CONSTRAINT FK_VH_SBD FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));




ALTER TABLE TDS ADD (
  CONSTRAINT FK_COA_TDS FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));

ALTER TABLE TDS ADD (
  CONSTRAINT FK_TDS_FY FOREIGN KEY (PARTYTYPEID) 
    REFERENCES EG_PARTYTYPE (ID));

ALTER TABLE TDS ADD (
  CONSTRAINT FK_TDS_BK FOREIGN KEY (BANKID) 
    REFERENCES BANK (ID));


ALTER TABLE TRANSACTIONSUMMARY ADD (
  CONSTRAINT FK_FS_TXN FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID));

ALTER TABLE TRANSACTIONSUMMARY ADD (
  CONSTRAINT FK_FUND_TS FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));

ALTER TABLE TRANSACTIONSUMMARY ADD (
  CONSTRAINT FK_FY_TS FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID));

ALTER TABLE TRANSACTIONSUMMARY ADD (
  CONSTRAINT FK_DETTYPE FOREIGN KEY (ACCOUNTDETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID));



ALTER TABLE TRANSACTIONSUMMARYDETAILS ADD (
  CONSTRAINT FK_TSD_TSUMMARYIDPK FOREIGN KEY (TXNSUMMARYID) 
    REFERENCES TRANSACTIONSUMMARY (ID));

ALTER TABLE TRANSACTIONSUMMARYDETAILS ADD (
  CONSTRAINT FK_DTTYPE FOREIGN KEY (DETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID));




ALTER TABLE VOUCHERDETAIL ADD (
  CONSTRAINT FK_COA_VD FOREIGN KEY (GLCODE) 
    REFERENCES CHARTOFACCOUNTS (GLCODE));

ALTER TABLE VOUCHERDETAIL ADD (
  CONSTRAINT FK_VOUCHERHEADER_VD FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));




ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT FK_VH_FUNCTIONIDPK FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID));

ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT FK_FP_VH FOREIGN KEY (FISCALPERIODID) 
    REFERENCES FISCALPERIOD (ID));

ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT FK_VOUCHERHEADER_VH FOREIGN KEY (ORIGINALVCID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT FK_FUNDSOURCE_VH FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID));

ALTER TABLE VOUCHERHEADER ADD (
  CONSTRAINT FK_FUND_VH FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));


ALTER TABLE VOUCHERMIS ADD (
  CONSTRAINT FK_VMIS_FS FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID));

ALTER TABLE VOUCHERMIS ADD (
  CONSTRAINT FK_VMIS_VHIDPK FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID));

ALTER TABLE VOUCHERMIS ADD (
  CONSTRAINT FK_VMIS_SEMENTIDPK FOREIGN KEY (SEGMENTID) 
    REFERENCES FUND (ID));

ALTER TABLE VOUCHERMIS ADD (
  CONSTRAINT FK_VMIS_SUBSEGMENTIDPK FOREIGN KEY (SUB_SEGMENTID) 
    REFERENCES FUND (ID));

ALTER TABLE VOUCHERMIS ADD (
  CONSTRAINT FK_VMIS_SCHEMEID FOREIGN KEY (SCHEMEID) 
    REFERENCES SCHEME (ID));

ALTER TABLE VOUCHERMIS ADD (
  CONSTRAINT FK_VMIS_SUBSCHEMEIDPK FOREIGN KEY (SUBSCHEMEID) 
    REFERENCES SUB_SCHEME (ID));




ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FKWORKSTYPE FOREIGN KEY (TYPE) 
    REFERENCES EG_WORKSTYPE (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_EG_BOUNDARY FOREIGN KEY (WARDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_SCHEME_WD FOREIGN KEY (SCHEMEID) 
    REFERENCES SCHEME (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_TDS_WD FOREIGN KEY (WORKSTDS) 
    REFERENCES TDS (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_FUNDSOURCE FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_FUND FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_RELATION FOREIGN KEY (RELATIONID) 
    REFERENCES RELATION (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WD_WT FOREIGN KEY (WORKCATEGORY) 
    REFERENCES EGW_TYPEOFWORK (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WD_WST FOREIGN KEY (SUBCATEGORY) 
    REFERENCES EGW_TYPEOFWORK (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WD_WD FOREIGN KEY (PARENTID) 
    REFERENCES WORKSDETAIL (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WM_DPT1 FOREIGN KEY (EXECDEPTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WM_DPT FOREIGN KEY (USERDEPTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WD_STAT FOREIGN KEY (STATUSID) 
    REFERENCES EGW_STATUS (ID));

ALTER TABLE WORKSDETAIL ADD (
  CONSTRAINT FK_WD_COAIDPK FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID));



ALTER TABLE EGW_WORKS_MIS ADD (
  CONSTRAINT FK_WD_FD FOREIGN KEY (FIELDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY));

ALTER TABLE EGW_WORKS_MIS ADD (
  CONSTRAINT FK_WMIS_BDR FOREIGN KEY (WARDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY));

ALTER TABLE EGW_WORKS_MIS ADD (
  CONSTRAINT FK_WMIS_USR3 FOREIGN KEY (ESIMATEPREPAREDBY) 
    REFERENCES EG_USER (ID_USER));

ALTER TABLE EGW_WORKS_MIS ADD (
  CONSTRAINT FK_WMIS_REL FOREIGN KEY (THIRDPARY) 
    REFERENCES RELATION (ID));

ALTER TABLE EGW_WORKS_MIS ADD (
  CONSTRAINT FK_WMIS_FD FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID));

ALTER TABLE EGW_WORKS_MIS ADD (
  CONSTRAINT FK_WMIS_WM FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID));
    
    
   
    
    ALTER TABLE EGW_TYPEOFWORK ADD (
      CONSTRAINT FK_TYPEOFWORK_TYPEOFWORK FOREIGN KEY (PARENTID) 
        REFERENCES EGW_TYPEOFWORK (ID));
    
    ALTER TABLE EGW_TYPEOFWORK ADD (
      CONSTRAINT FK_TYPEOFWORK_USR FOREIGN KEY (CREATEDBY) 
        REFERENCES EG_USER (ID_USER));
    
    ALTER TABLE EGW_TYPEOFWORK ADD (
      CONSTRAINT FK_TYPEOFWORK_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER));
    
    ALTER TABLE EGF_MAPPEDTDS ADD (
         CONSTRAINT FK_MTDS_TDS FOREIGN KEY (TDSID) 
           REFERENCES TDS (ID));
       
       ALTER TABLE EGF_MAPPEDTDS ADD (
         CONSTRAINT FK_MTDS_VH FOREIGN KEY (VOUCHERHEADERID) 
           REFERENCES VOUCHERHEADER (ID));
       
       ALTER TABLE EGF_MAPPEDTDS ADD (
         CONSTRAINT FK_MTDS_COA FOREIGN KEY (GLCODEID) 
           REFERENCES CHARTOFACCOUNTS (ID));
       
       ALTER TABLE EGF_MAPPEDTDS ADD (
         CONSTRAINT FK_MTDS_GL FOREIGN KEY (GENERALLEDGERID) 
    REFERENCES GENERALLEDGER (ID));
    
    ALTER TABLE RELATION ADD (
         FOREIGN KEY (PARTYTYPEID) 
           REFERENCES EG_PARTYTYPE (ID));
       
       ALTER TABLE RELATION ADD (
         FOREIGN KEY (SUBTYPEID) 
           REFERENCES EG_PARTYTYPE (ID));
       
       ALTER TABLE RELATION ADD (
         CONSTRAINT FK_RELATION_USER FOREIGN KEY (CREATEDBY) 
           REFERENCES EG_USER (ID_USER));
       
       ALTER TABLE RELATION ADD (
         CONSTRAINT FK_RELTYPE FOREIGN KEY (RELATIONTYPEID) 
           REFERENCES RELATIONTYPE (ID));
       
ALTER TABLE EGF_MRNHEADER ADD (
  CONSTRAINT MRNFK_FROMSTORE FOREIGN KEY (FROMSTOREID) 
    REFERENCES EG_STORES (ID));

ALTER TABLE EGF_MRNHEADER ADD (
  CONSTRAINT MRNFK_RECVSTORE FOREIGN KEY (RECVSTOREID) 
    REFERENCES EG_STORES (ID));

ALTER TABLE EGF_MRNHEADER ADD (
  CONSTRAINT MRNFK_RELATION FOREIGN KEY (RELATIONID) 
    REFERENCES RELATION (ID));
    
/*****  sequences  ********/    

DROP SEQUENCE SEQ_ACCOUNTDETAILKEY;
CREATE SEQUENCE SEQ_ACCOUNTDETAILKEY   START WITH 1   MAXVALUE 999999999999999999999999999   MINVALUE 0   NOCYCLE   NOCACHE   NOORDER;


DROP SEQUENCE SEQ_ACCOUNTDETAILTYPE;
CREATE SEQUENCE SEQ_ACCOUNTDETAILTYPE START WITH 9 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;


DROP SEQUENCE SEQ_ACCOUNTENTITYMASTER;
CREATE SEQUENCE SEQ_ACCOUNTENTITYMASTER START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EGF_ACCOUNTCODE_PURPOSE;
CREATE SEQUENCE SEQ_EGF_ACCOUNTCODE_PURPOSE START WITH 32 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;


--DROP SEQUENCE SEQ_BANKENTRIES;
CREATE SEQUENCE SEQ_BANKENTRIES START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;


--DROP SEQUENCE SEQ_BANKRECONCILIATION;
CREATE SEQUENCE SEQ_BANKRECONCILIATION START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_BILLCOLLECTOR;
CREATE SEQUENCE SEQ_BILLCOLLECTOR START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_BILLCOLLECTORDETAIL;
CREATE SEQUENCE SEQ_BILLCOLLECTORDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CHARTOFACCOUNTDETAIL;
CREATE SEQUENCE SEQ_CHARTOFACCOUNTDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_CHARTOFACCOUNTS;
CREATE SEQUENCE SEQ_CHARTOFACCOUNTS START WITH 1537 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CHEQUEDETAIL;
CREATE SEQUENCE SEQ_CHEQUEDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CLOSEDPERIODS;
CREATE SEQUENCE SEQ_CLOSEDPERIODS START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CODEMAPPING;
CREATE SEQUENCE SEQ_CODEMAPPING START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CODESERVICEMAP;
CREATE SEQUENCE SEQ_CODESERVICEMAP START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_COMPANYDETAIL;
CREATE SEQUENCE SEQ_COMPANYDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CONTRACTORBILLDETAIL;
CREATE SEQUENCE SEQ_CONTRACTORBILLDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_CONTRAJOURNALVOUCHER;
CREATE SEQUENCE SEQ_CONTRAJOURNALVOUCHER START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EGF_ACCOUNT_CHEQUES;
CREATE SEQUENCE SEQ_EGF_ACCOUNT_CHEQUES START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EGF_CESS_MASTER;
CREATE SEQUENCE SEQ_EGF_CESS_MASTER START WITH 1  MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EGF_RECORD_STATUS;
CREATE SEQUENCE SEQ_EGF_RECORD_STATUS START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EGF_TAX_ACCOUNT_MAPPING;
CREATE SEQUENCE SEQ_EGF_TAX_ACCOUNT_MAPPING START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EGF_TAX_CODE;
CREATE SEQUENCE SEQ_EGF_TAX_CODE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_EG_BILLDETAILS;
CREATE SEQUENCE SEQ_EG_BILLDETAILS START WITH 1 MAXVALUE 999999999999999999999999999  MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EG_BILLPAYEEDETAILS;
CREATE SEQUENCE SEQ_EG_BILLPAYEEDETAILS START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_EG_BILLREGISTER;
CREATE SEQUENCE SEQ_EG_BILLREGISTER START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_EG_BILLREGISTERMIS;
CREATE SEQUENCE SEQ_EG_BILLREGISTERMIS START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER; 

--DROP SEQUENCE SEQ_EG_DEDUCTION_DETAILS;
CREATE SEQUENCE SEQ_EG_DEDUCTION_DETAILS START WITH 1  MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_EG_NUMBERS;
CREATE SEQUENCE SEQ_EG_NUMBERS START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EG_PARTYTYPE;
CREATE SEQUENCE SEQ_EG_PARTYTYPE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EG_REMITTANCE;
CREATE SEQUENCE SEQ_EG_REMITTANCE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EG_REMITTANCE_DETAIL;
CREATE SEQUENCE SEQ_EG_REMITTANCE_DETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EG_REMITTANCE_GLDTL;
CREATE SEQUENCE SEQ_EG_REMITTANCE_GLDTL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_EG_SALARYCODES;
CREATE SEQUENCE SEQ_EG_SALARYCODES START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_EG_SURRENDERED_CHEQUES;
CREATE SEQUENCE SEQ_EG_SURRENDERED_CHEQUES START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_FISCALPERIOD;
CREATE SEQUENCE SEQ_FISCALPERIOD START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_FUNDSOURCE;
CREATE SEQUENCE SEQ_FUNDSOURCE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_GENERALLEDGER;
CREATE SEQUENCE SEQ_GENERALLEDGER START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_GENERALLEDGERDETAIL;
CREATE SEQUENCE SEQ_GENERALLEDGERDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_GENERALVOUCHERMIS;
CREATE SEQUENCE SEQ_GENERALVOUCHERMIS START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

DROP SEQUENCE SEQ_MENUTREE;
CREATE SEQUENCE SEQ_MENUTREE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_MISCBILLDETAIL;
CREATE SEQUENCE SEQ_MISCBILLDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_ORGANIZATIONSTRUCTURE;
CREATE SEQUENCE SEQ_ORGANIZATIONSTRUCTURE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_OTHERBILLDETAIL;
CREATE SEQUENCE SEQ_OTHERBILLDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_OTHERTAXDETAIL;
CREATE SEQUENCE SEQ_OTHERTAXDETAIL START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_PAYMENTHEADER;
CREATE SEQUENCE SEQ_PAYMENTHEADER START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_PROPERTYTAXINTERMEDIATE;
CREATE SEQUENCE SEQ_PROPERTYTAXINTERMEDIATE START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 0 NOCYCLE NOCACHE NOORDER;

--DROP SEQUENCE SEQ_RECEIPTHEADER;

CREATE SEQUENCE SEQ_RECEIPTHEADER
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;


--DROP SEQUENCE SEQ_SALARYBILLDETAIL;

CREATE SEQUENCE SEQ_SALARYBILLDETAIL
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;




--DROP SEQUENCE SEQ_SCHEDULEMAPPING;

CREATE SEQUENCE SEQ_SCHEDULEMAPPING
START WITH 527
MAXVALUE 999999999999
MINVALUE 0
NOCYCLE
CACHE 20
NOORDER;



DROP SEQUENCE SEQ_SCHEME;

CREATE SEQUENCE SEQ_SCHEME
START WITH 51
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;




--DROP SEQUENCE SEQ_SUBLEDGERPAYMENTHEADER;

CREATE SEQUENCE SEQ_SUBLEDGERPAYMENTHEADER
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



DROP SEQUENCE SEQ_SUB_SCHEME;

CREATE SEQUENCE SEQ_SUB_SCHEME
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;




--DROP SEQUENCE SEQ_SUPPLIERBILLDETAIL;

CREATE SEQUENCE SEQ_SUPPLIERBILLDETAIL
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_TDS;

CREATE SEQUENCE SEQ_TDS
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_TRANSACTIONSUMMARY;

CREATE SEQUENCE SEQ_TRANSACTIONSUMMARY
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_TRANSACTIONSUMMARYDETAILS;

CREATE SEQUENCE SEQ_TRANSACTIONSUMMARYDETAILS
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



DROP SEQUENCE SEQ_VOUCHERDETAIL;

CREATE SEQUENCE SEQ_VOUCHERDETAIL
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;




DROP SEQUENCE SEQ_VOUCHERHEADER;

CREATE SEQUENCE SEQ_VOUCHERHEADER
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_VOUCHERMIS;

CREATE SEQUENCE SEQ_VOUCHERMIS
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_EGW_WORKS_MIS;

CREATE SEQUENCE SEQ_EGW_WORKS_MIS
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_EGW_TYPEOFWORK;

CREATE SEQUENCE SEQ_EGW_TYPEOFWORK
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_EGF_BUDGET;

CREATE SEQUENCE SEQ_EGF_BUDGET
START WITH 1
MAXVALUE 99999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_EGF_BUDGETDETAIL;

CREATE SEQUENCE SEQ_EGF_BUDGETDETAIL
START WITH 1
MAXVALUE 99999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;




--DROP SEQUENCE SEQ_EGF_BUDGETGROUP;

CREATE SEQUENCE SEQ_EGF_BUDGETGROUP
START WITH 1
MAXVALUE 99999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_EGF_BUDGETING_TYPE;

CREATE SEQUENCE SEQ_EGF_BUDGETING_TYPE
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;




--DROP SEQUENCE SEQ_EGF_BUDGET_ACCTYPE;

CREATE SEQUENCE SEQ_EGF_BUDGET_ACCTYPE
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;



--DROP SEQUENCE SEQ_EGF_FUNCTION_GENERALLEDGER;

CREATE SEQUENCE SEQ_EGF_FUNCTION_GENERALLEDGER
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;


/*********** missing sequences **************/

--DROP SEQUENCE SEQ_ACCOUNTGROUP;

CREATE SEQUENCE SEQ_ACCOUNTGROUP
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;

--DROP SEQUENCE SEQ_EGF_BUDGET_STATUS;

CREATE SEQUENCE SEQ_EGF_BUDGET_STATUS
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;

--DROP SEQUENCE SEQ_EGF_DISCOUNT;

CREATE SEQUENCE SEQ_EGF_DISCOUNT
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;

--DROP SEQUENCE SEQ_FILTERSERVICES;

CREATE SEQUENCE SEQ_FILTERSERVICES
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;


--DROP SEQUENCE SEQ_SCREENCONTROLS;

CREATE SEQUENCE SEQ_SCREENCONTROLS
START WITH 1
MAXVALUE 999999999999999999999999999
MINVALUE 0
NOCYCLE
NOCACHE
NOORDER;    

DROP SEQUENCE SEQ_EG_WORKSTYPE;

CREATE SEQUENCE SEQ_EG_WORKSTYPE
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

--DROP SEQUENCE SEQ_EGF_MAPPEDTDS;

CREATE SEQUENCE SEQ_EGF_MAPPEDTDS
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

--DROP SEQUENCE SEQ_RELATION;
CREATE SEQUENCE SEQ_RELATION
  START WITH 1
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

--DROP SEQUENCE SEQ_WORKSDETAIL;

CREATE SEQUENCE SEQ_WORKSDETAIL
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
  
  CREATE SEQUENCE SEQ_MRNHEADER
    START WITH 1
    MAXVALUE 999999999999999999999999999
    MINVALUE 0
    NOCYCLE
    NOCACHE
    NOORDER;




alter table relation add(modeofpay varchar(10));

 
  ALTER TABLE CHEQUEDETAIL ADD DETAILTYPEID NUMBER;
  ALTER TABLE CHEQUEDETAIL ADD DETAILKEYID NUMBER;
  ALTER TABLE CHEQUEDETAIL ADD CONSTRAINT FK_CD_ADT
   FOREIGN KEY (DETAILTYPEID) 
    REFERENCES ACCOUNTDETAILTYPE (ID) ;
    

ALTER TABLE MISCBILLDETAIL MODIFY (PAIDTO NULL);

CREATE SEQUENCE SEQ_BANK
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
  
CREATE SEQUENCE SEQ_BANKACCOUNT
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;  
   
ALTER TABLE BANKACCOUNT ADD payto VARCHAR2(100);

#DOWN

