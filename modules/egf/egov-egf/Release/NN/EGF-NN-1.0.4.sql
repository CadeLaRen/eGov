
CREATE TABLE EGW_MBDETAILS
(
  ID                NUMBER,
  MBHEADERID        NUMBER                      NOT NULL,
  WORKSACTIVITYID   NUMBER                      NOT NULL,
  QUANTITY          NUMBER(10,2)                NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_INTERSTORETRANSFER
(
  ID                NUMBER,
  MRINLINEID        NUMBER                      NOT NULL,
  MRLINEID          NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_MRNLINEOTHERS
(
  ID                NUMBER,
  MRNLINEID         NUMBER                      NOT NULL,
  LINENO            NUMBER                      NOT NULL,
  BREAKQTY          NUMBER(10,2)                NOT NULL,
  LOTNO             VARCHAR2(30 BYTE),
  EXPIRYDATE        DATE,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_BILLREGISTERMIS
(
  ID                   NUMBER,
  BILLID               NUMBER                   NOT NULL,
  FUNDID               NUMBER,
  SEGMENTID            NUMBER,
  SUBSEGMENTID         NUMBER,
  FIELDID              NUMBER,
  SUBFIELDID           NUMBER,
  FUNCTIONARYID        NUMBER,
  SANCTIONEDBY         VARCHAR2(30 BYTE),
  SANCTIONDATE         DATE,
  SANCTIONDETAIL       VARCHAR2(200 BYTE),
  NARRATION            VARCHAR2(300 BYTE),
  LASTUPDATEDTIME      DATE                     NOT NULL,
  DISBURSEMENTTYPE     VARCHAR2(30 BYTE)        NOT NULL,
  ESCALATION           NUMBER,
  ADVANCEPAYMENTS      NUMBER,
  SECUREDADVANCES      NUMBER,
  DEDUCTAMOUNTWITHELD  NUMBER,
  DEPARTMENTID         NUMBER,
  MONTH                NUMBER,
  FINANCIALYEARID      NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_DEPRECIATION
(
  ID_DEPRECIATION     NUMBER,
  DEPRECIATEDVALUE    NUMBER,
  DATEOFDEPRECIATION  DATE,
  ASSETID             NUMBER,
  FINANCIALYEARID     NUMBER,
  FROMDATE            DATE,
  TODATE              DATE,
  VOUCHERHEADERID     NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_EMP_ASSIGNMENT
(
  ID                 NUMBER(32)                 NOT NULL,
  ID_FUND            NUMBER(32),
  ID_FUNCTION        NUMBER(32),
  DESIGNATIONID      NUMBER(32),
  ID_FUNCTIONARY     NUMBER(32),
  ID_DEPT            NUMBER(32),
  PCT_ALLOCATION     VARCHAR2(256 BYTE),
  REPORTS_TO         NUMBER(32),
  ID_EMP_ASSIGN_PRD  NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_CATALOGUE
(
  ID                INTEGER,
  RELATIONID        INTEGER                     NOT NULL,
  ITEMID            INTEGER                     NOT NULL,
  ACTIVEFROM        DATE                        NOT NULL,
  ACTIVETO          DATE,
  CREATEDBY         INTEGER                     NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    INTEGER,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_SOR
(
  ID                NUMBER,
  CODE              VARCHAR2(20 BYTE)           NOT NULL,
  PARENTID          NUMBER,
  DESCRIPTION       VARCHAR2(1000 BYTE)         NOT NULL,
  UOMID             NUMBER,
  RATE              NUMBER(15,2),
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_SOR_RATESCHEDULE
(
  ID                NUMBER,
  SORID             NUMBER                      NOT NULL,
  DATEFROM          DATE                        NOT NULL,
  DATETO            DATE,
  RATE              NUMBER(15,2),
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_WORKS_ACTIVITY
(
  ID                        NUMBER,
  WORKSDETAILID             NUMBER              NOT NULL,
  ACTIVITY_ID               NUMBER,
  ACTIVITY_NAME             VARCHAR2(250 BYTE),
  RATE                      NUMBER(10,2)        NOT NULL,
  UOM                       NUMBER              NOT NULL,
  ACTIVITY_CODE             VARCHAR2(15 BYTE),
  AMOUNT                    NUMBER(15,2),
  PASSED_AMOUNT             NUMBER(15,2),
  TYPE                      VARCHAR2(10 BYTE),
  QUANTITY                  NUMBER(10,2)        NOT NULL,
  WKD_N_TNDQUANTITY         NUMBER(10,2),
  WKD_N_TNDUOM              VARCHAR2(15 BYTE),
  WKD_N_TNDRATE             NUMBER(10,2),
  WKD_N_TNDAMOUNT           NUMBER(15,2),
  LINENUMBER                NUMBER              NOT NULL,
  ISPARTOFORGINALWORKORDER  VARCHAR2(20 BYTE),
  PARENTID                  NUMBER,
  STATEMENTTYPE             VARCHAR2(25 BYTE),
  LASTMODIFIEDDATE          DATE                NOT NULL,
  SERVICETAXPER             NUMBER(5,2),
  SORID                     NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_TRAINING_PIRTICULARS
(
  TRAINING_DETAILS_ID  NUMBER(32)               NOT NULL,
  COURSE               VARCHAR2(256 BYTE),
  INSTITUTION          VARCHAR2(256 BYTE),
  CITY                 VARCHAR2(256 BYTE),
  POT_FROM             DATE,
  POT_TO               DATE,
  ID                   NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_CONTGRADES_MASTER
(
  ID                NUMBER,
  GRADE             VARCHAR2(20 BYTE)           NOT NULL,
  DESCRIPTION       VARCHAR2(50 BYTE),
  MINAMT            NUMBER(15,2),
  MAXAMT            NUMBER(15,2),
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_EMDRATES_MASTER
(
  ID                   NUMBER,
  FROMFINANCIALYEARID  NUMBER                   NOT NULL,
  MINAMT               NUMBER(15,2)             NOT NULL,
  MAXAMT               NUMBER(15,2),
  PERCENTAGE           NUMBER(5,2)              NOT NULL,
  CREATEDBY            NUMBER                   NOT NULL,
  CREATEDDATE          DATE                     NOT NULL,
  LASTMODIFIEDBY       NUMBER,
  LASTMODIFIEDDATE     DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_FSDRATES_MASTER
(
  ID                   NUMBER,
  FROMFINANCIALYEARID  NUMBER                   NOT NULL,
  MINAMT               NUMBER(15,2)             NOT NULL,
  MAXAMT               NUMBER(15,2),
  PERCENTAGE           NUMBER(5,2)              NOT NULL,
  CREATEDBY            NUMBER                   NOT NULL,
  CREATEDDATE          DATE                     NOT NULL,
  LASTMODIFIEDBY       NUMBER,
  LASTMODIFIEDDATE     DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_SATUSCHANGE
(
  ID                NUMBER,
  MODULETYPE        VARCHAR2(20 BYTE)           NOT NULL,
  MODULEID          NUMBER                      NOT NULL,
  FROMSTATUS        NUMBER,
  TOSTATUS          NUMBER                      NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_TYPEOFWORK
(
  ID                NUMBER,
  CODE              VARCHAR2(20 BYTE)           NOT NULL,
  PARENTID          NUMBER,
  DESCRIPTION       VARCHAR2(1000 BYTE)         NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_AGEING_LIST
(
  ID                NUMBER,
  TYPE              VARCHAR2(20 BYTE)           NOT NULL,
  COLHEADING        VARCHAR2(50 BYTE)           NOT NULL,
  RANGEFROM         NUMBER                      NOT NULL,
  RANGETO           NUMBER,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_APPROVALDETAILS
(
  ID                NUMBER,
  MODULETYPE        VARCHAR2(30 BYTE)           NOT NULL,
  MODULEID          NUMBER                      NOT NULL,
  APPROVEDBY        NUMBER                      NOT NULL,
  APPROVEDDATE      DATE                        NOT NULL,
  COMMENTS          VARCHAR2(500 BYTE),
  CREATEDBY         NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL,
  APPROVALTYPE      VARCHAR2(20 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_ISSUEREPAIR
(
  ID                NUMBER,
  MRINHEADERID      NUMBER                      NOT NULL,
  ASSETID           NUMBER,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_MBHEADER
(
  ID                 NUMBER,
  WORKSDETAILID      NUMBER                     NOT NULL,
  MBNO               VARCHAR2(20 BYTE)          NOT NULL,
  PAGENO             VARCHAR2(20 BYTE)          NOT NULL,
  PAGENOTO           VARCHAR2(20 BYTE),
  ENTRYON            DATE                       NOT NULL,
  PREPAREDBY         NUMBER                     NOT NULL,
  ABSTRACT           VARCHAR2(500 BYTE)         NOT NULL,
  STATUSID           NUMBER                     NOT NULL,
  CHECKEDBY          NUMBER,
  CHECKEDCOMMENTS    VARCHAR2(500 BYTE),
  INSPECTEDCOMMENTS  VARCHAR2(500 BYTE),
  VOUCHERHEADERID    NUMBER,
  CREATEDBY          NUMBER                     NOT NULL,
  CREATEDDATE        DATE                       NOT NULL,
  LASTMODIFIEDBY     NUMBER,
  LASTMODIFIEDDATE   DATE                       NOT NULL,
  CONCOMMENTS        VARCHAR2(500 BYTE),
  BILLID             NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE COAIE1178805098943
(
  ID              NUMBER                        NOT NULL,
  SUMMARYGLCODE   VARCHAR2(50 BYTE)             NOT NULL,
  SUMMARYNAME     VARCHAR2(150 BYTE)            NOT NULL,
  SUMSCHEDULE     VARCHAR2(10 BYTE),
  OPERATION       CHAR(1 BYTE),
  TYPE            CHAR(1 BYTE),
  CURYEARAMOUNT   NUMBER(15,2),
  PREYEARAMOUNT   NUMBER(15,2),
  SCHEDULEGLCODE  VARCHAR2(50 BYTE),
  FUND_ID         NUMBER,
  SCHEDULENAME    VARCHAR2(150 BYTE),
  SCHSCHEDULE     VARCHAR2(10 BYTE),
  CURAMT          NUMBER(15,2),
  PREAMT          NUMBER(15,2)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_CATEGORY_MSTR
(
  CATEGORY_ID    NUMBER(32)                     NOT NULL,
  CATEGORY_NAME  VARCHAR2(256 BYTE)             NOT NULL,
  START_DATE     DATE,
  END_DATE       DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_ASSET_TYPE
(
  ID    NUMBER,
  NAME  VARCHAR2(20 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_LAND
(
  ID           NUMBER                           NOT NULL,
  LANDTYPE     VARCHAR2(1 BYTE)                 NOT NULL,
  HASTREES     NUMBER,
  OTHERVALUES  VARCHAR2(1 BYTE),
  ASSETTYPEID  NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_MRINPURPOSE
(
  ID                NUMBER                      NOT NULL,
  NAME              VARCHAR2(50 BYTE)           NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_ANNUAL_INCREMENT_MSTR
(
  ANNUAL_INCREMENT_ID     NUMBER(32)            NOT NULL,
  ANNUAL_INCREMENT_VALUE  VARCHAR2(256 BYTE)    NOT NULL,
  START_DATE              DATE,
  END_DATE                DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_PAY_FIXED_IN_MSTR
(
  PAY_FIXED_IN_ID     NUMBER(32)                NOT NULL,
  PAY_FIXED_IN_VALUE  VARCHAR2(256 BYTE)        NOT NULL,
  START_DATE          DATE,
  END_DATE            DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE COAIE1178546593989
(
  ID              NUMBER                        NOT NULL,
  SUMMARYGLCODE   VARCHAR2(50 BYTE)             NOT NULL,
  SUMMARYNAME     VARCHAR2(150 BYTE)            NOT NULL,
  SUMSCHEDULE     VARCHAR2(10 BYTE),
  OPERATION       CHAR(1 BYTE),
  TYPE            CHAR(1 BYTE),
  CURYEARAMOUNT   NUMBER(15,2),
  PREYEARAMOUNT   NUMBER(15,2),
  SCHEDULEGLCODE  VARCHAR2(50 BYTE),
  FUND_ID         NUMBER,
  SCHEDULENAME    VARCHAR2(150 BYTE),
  SCHSCHEDULE     VARCHAR2(10 BYTE),
  CURAMT          NUMBER(15,2),
  PREAMT          NUMBER(15,2)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE COAIE1178548236272
(
  ID              NUMBER                        NOT NULL,
  SUMMARYGLCODE   VARCHAR2(50 BYTE)             NOT NULL,
  SUMMARYNAME     VARCHAR2(150 BYTE)            NOT NULL,
  SUMSCHEDULE     VARCHAR2(10 BYTE),
  OPERATION       CHAR(1 BYTE),
  TYPE            CHAR(1 BYTE),
  CURYEARAMOUNT   NUMBER(15,2),
  PREYEARAMOUNT   NUMBER(15,2),
  SCHEDULEGLCODE  VARCHAR2(50 BYTE),
  FUND_ID         NUMBER,
  SCHEDULENAME    VARCHAR2(150 BYTE),
  SCHSCHEDULE     VARCHAR2(10 BYTE),
  CURAMT          NUMBER(15,2),
  PREAMT          NUMBER(15,2)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE COAIE1178804793126
(
  ID              NUMBER                        NOT NULL,
  SUMMARYGLCODE   VARCHAR2(50 BYTE)             NOT NULL,
  SUMMARYNAME     VARCHAR2(150 BYTE)            NOT NULL,
  SUMSCHEDULE     VARCHAR2(10 BYTE),
  OPERATION       CHAR(1 BYTE),
  TYPE            CHAR(1 BYTE),
  CURYEARAMOUNT   NUMBER(15,2),
  PREYEARAMOUNT   NUMBER(15,2),
  SCHEDULEGLCODE  VARCHAR2(50 BYTE),
  FUND_ID         NUMBER,
  SCHEDULENAME    VARCHAR2(150 BYTE),
  SCHSCHEDULE     VARCHAR2(10 BYTE),
  CURAMT          NUMBER(15,2),
  PREAMT          NUMBER(15,2)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE FUNCTIONARY
(
  ID    NUMBER(32)                              NOT NULL,
  NAME  VARCHAR2(256 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_COMMUNITY_MSTR
(
  COMMUNITY_ID    NUMBER(32)                    NOT NULL,
  COMMUNITY_NAME  VARCHAR2(256 BYTE)            NOT NULL,
  START_DATE      DATE,
  END_DATE        DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_NAME_OF_TEST_MSTR
(
  NAME_OF_TEST_ID     NUMBER(32)                NOT NULL,
  NAME_OF_TEST_VALUE  VARCHAR2(256 BYTE)        NOT NULL,
  START_DATE          DATE,
  END_DATE            DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_SALARYCODES
(
  ID                NUMBER,
  HEAD              VARCHAR2(30 BYTE)           NOT NULL,
  GLCODEID          NUMBER                      NOT NULL,
  SALTYPE           VARCHAR2(20 BYTE)           NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  CREATEDDATE       DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_BUDGET_ACCTYPE
(
  ID           NUMBER,
  DESCRIPTION  VARCHAR2(50 BYTE)                NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_BUDGETING_TYPE
(
  ID           NUMBER,
  DESCRIPTION  VARCHAR2(100 BYTE)               NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_LANGUAGES_KNOWN_MSTR
(
  LANGUAGES_KNOWN_ID     NUMBER(32)             NOT NULL,
  LANGUAGES_KNOWN_VALUE  VARCHAR2(256 BYTE)     NOT NULL,
  START_DATE             DATE,
  END_DATE               DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_HOW_ACQUIRED_MSTR
(
  HOW_ACQUIRED_ID     NUMBER(32)                NOT NULL,
  HOW_ACQUIRED_VALUE  VARCHAR2(256 BYTE)        NOT NULL,
  END_DATE            DATE,
  START_DATE          DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_MODE_OF_RECRUIMENT_MSTR
(
  MODE_OF_RECRUIMENT_ID    NUMBER(32)           NOT NULL,
  MODE_OF_RECRUIMENT_NAME  VARCHAR2(256 BYTE)   NOT NULL,
  START_DATE               DATE,
  END_DATE                 DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_ASSET_STATUS
(
  ID    NUMBER                                  NOT NULL,
  NAME  VARCHAR2(20 BYTE)                       NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_GRADE_MSTR
(
  GRADE_ID     NUMBER(32)                       NOT NULL,
  GRADE_VALUE  VARCHAR2(256 BYTE)               NOT NULL,
  START_DATE   DATE,
  END_DATE     DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_LOCAL_LANG_QUL_MSTR
(
  QULIFIED_ID    NUMBER(32)                     NOT NULL,
  QULIFIED_NAME  VARCHAR2(256 BYTE)             NOT NULL,
  END_DATE       DATE,
  START_DATE     DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE COAIE1178805610085
(
  ID              NUMBER                        NOT NULL,
  SUMMARYGLCODE   VARCHAR2(50 BYTE)             NOT NULL,
  SUMMARYNAME     VARCHAR2(150 BYTE)            NOT NULL,
  SUMSCHEDULE     VARCHAR2(10 BYTE),
  OPERATION       CHAR(1 BYTE),
  TYPE            CHAR(1 BYTE),
  CURYEARAMOUNT   NUMBER(15,2),
  PREYEARAMOUNT   NUMBER(15,2),
  SCHEDULEGLCODE  VARCHAR2(50 BYTE),
  FUND_ID         NUMBER,
  SCHEDULENAME    VARCHAR2(150 BYTE),
  SCHSCHEDULE     VARCHAR2(10 BYTE),
  CURAMT          NUMBER(15,2),
  PREAMT          NUMBER(15,2)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_DET_OF_ENQUIRY_OFFICER
(
  ENQUIRY_OFFICER_ID          NUMBER(32)        NOT NULL,
  ENQUIRY_OFFICER_NAME        VARCHAR2(256 BYTE),
  EO_DESIGNATION              VARCHAR2(256 BYTE),
  NOMINATED_DATE              DATE,
  REPORT_DATE                 DATE,
  DISCIPLINARY_PUNISHMENT_ID  NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGP_SALARY_BILLDETAILS
(
  ID                NUMBER,
  BILLID            NUMBER                      NOT NULL,
  HEADID            NUMBER,
  GLCODEID          NUMBER,
  SALTYPE           VARCHAR2(20 BYTE)           NOT NULL,
  AMOUNT            NUMBER(15,2)                NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGP_SALARY_BUDGET
(
  ID                NUMBER,
  BILLID            NUMBER                      NOT NULL,
  BUDGETCODEID      NUMBER,
  FUNCTIONID        NUMBER,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_BILL_DEDUCTIONS
(
  ID                      NUMBER,
  CONTRACTORBILLDETAILID  NUMBER                NOT NULL,
  TDSID                   NUMBER,
  GLCODEID                NUMBER,
  AMOUNT                  NUMBER(15,2)          NOT NULL,
  DEDTYPE                 CHAR(1 BYTE)          NOT NULL,
  LASTMODIFIEDDATE        DATE                  NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_TYPE_OF_LEAVE_MSTR
(
  TYPE_OF_LEAVE_ID     NUMBER(32)               NOT NULL,
  TYPE_OF_LEAVE_VALUE  VARCHAR2(256 BYTE)       NOT NULL,
  START_DATE           DATE,
  END_DATE             DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_PROBATION
(
  ID_PROBATION             NUMBER(32)           NOT NULL,
  ID                       NUMBER(32)           NOT NULL,
  ID_POST                  NUMBER(32),
  PROBATION_DECLARED_DATE  DATE,
  ORDER_NO                 VARCHAR2(256 BYTE),
  ORDER_DATE               DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_REGULARISATION
(
  REGULARISATION_ID    NUMBER(32)               NOT NULL,
  ID_POST              NUMBER(32),
  REGULARISATION_DATE  DATE,
  ORDER_NO             VARCHAR2(256 BYTE),
  ORDER_DATE           DATE,
  ID                   NUMBER(32)               NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_TECNICAL_QUALIFICATION
(
  TECNICAL_QULIFICATION_ID  NUMBER(32)          NOT NULL,
  PASSED_DATE               DATE,
  ID                        NUMBER(32)          NOT NULL,
  TECK_GRADES_ID            NUMBER(32),
  SKILLID                   NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE COAIE1178546371266
(
  ID              NUMBER                        NOT NULL,
  SUMMARYGLCODE   VARCHAR2(50 BYTE)             NOT NULL,
  SUMMARYNAME     VARCHAR2(150 BYTE)            NOT NULL,
  SUMSCHEDULE     VARCHAR2(10 BYTE),
  OPERATION       CHAR(1 BYTE),
  TYPE            CHAR(1 BYTE),
  CURYEARAMOUNT   NUMBER(15,2),
  PREYEARAMOUNT   NUMBER(15,2),
  SCHEDULEGLCODE  VARCHAR2(50 BYTE),
  FUND_ID         NUMBER,
  SCHEDULENAME    VARCHAR2(150 BYTE),
  SCHSCHEDULE     VARCHAR2(10 BYTE),
  CURAMT          NUMBER(15,2),
  PREAMT          NUMBER(15,2)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_PERSON_ADDRESS
(
  ID_PERSON_ADDRESS  NUMBER(32)                 NOT NULL,
  ID                 NUMBER(32)                 NOT NULL,
  ID_ADDRESS         NUMBER(32)                 NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_PERSONAL_INFORMATION
(
  ID                              NUMBER(32)    NOT NULL,
  CODE                            VARCHAR2(256 BYTE) NOT NULL,
  NAME                            VARCHAR2(1024 BYTE) NOT NULL,
  FATHER_HUSBAND_NAME             VARCHAR2(1024 BYTE),
  DATE_OF_BIRTH                   DATE,
  BLOOD_GROUP                     VARCHAR2(256 BYTE),
  MOTHER_TONUGE                   VARCHAR2(256 BYTE),
  RELIGION_ID                     NUMBER(32),
  COMMUNITY_ID                    NUMBER(32),
  GENDER                          CHAR(1 BYTE)  NOT NULL,
  IS_HANDICAPPED                  CHAR(1 BYTE),
  IS_MED_REPORT_AVAILABLE         CHAR(1 BYTE),
  DATE_OF_FIRST_APPOINTMENT       DATE,
  IDENTIFICATION_MARKS            VARCHAR2(1024 BYTE),
  LANGUAGES_KNOWN_ID              NUMBER(32),
  MODE_OF_RECRUIMENT_ID           NUMBER(32),
  RECRUITMENT_TYPE_ID             NUMBER(32),
  STATUS                          CHAR(1 BYTE),
  CATEGORY_ID                     NUMBER(32),
  QULIFIED_ID                     NUMBER(32),
  SALARY_BANK                     NUMBER(32),
  BANK                            VARCHAR2(256 BYTE),
  SB_ACCOUNT_NUMBER               VARCHAR2(1024 BYTE),
  PAY_FIXED_IN_ID                 NUMBER(32),
  GRADE_ID                        NUMBER(32),
  PRESENT_DESIGNATION             VARCHAR2(1024 BYTE),
  SCALE_OF_PAY                    VARCHAR2(1024 BYTE),
  BASIC_PAY                       NUMBER(32),
  SPL_PAY                         NUMBER(32),
  PP_SGPP_PAY                     NUMBER(32),
  ANNUAL_INCREMENT_ID             NUMBER(32),
  GPF_AC_NUMBER                   VARCHAR2(1024 BYTE),
  DATE_OF_RETIREMENT              DATE,
  PRESENT_DEPARTMENT              VARCHAR2(256 BYTE),
  IF_ON_DUTY_ARRANGMENT_DUTY_DEP  VARCHAR2(256 BYTE),
  LOCATION                        VARCHAR2(256 BYTE),
  COST_CENTER                     VARCHAR2(256 BYTE),
  ID_DEPT                         NUMBER(32),
  ID_USER                         NUMBER(32),
  IS_ACTIVE                       NUMBER(1)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_STATUS
(
  ID                NUMBER,
  MODULETYPE        VARCHAR2(10 BYTE)           NOT NULL,
  DESCRIPTION       VARCHAR2(50 BYTE),
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_WORKS_FINANCINGSOURCE
(
  ID                 NUMBER,
  WORKSDETAILID      NUMBER                     NOT NULL,
  FINANCINGSOURCEID  NUMBER                     NOT NULL,
  PERCENTAGE         NUMBER(5,2)                NOT NULL,
  LASTMODIFIEDDATE   DATE                       NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_ACTIONDETAILS
(
  ID                NUMBER,
  MODULETYPE        VARCHAR2(30 BYTE)           NOT NULL,
  MODULEID          NUMBER                      NOT NULL,
  ACTIONDONEBY      NUMBER                      NOT NULL,
  ACTIONDONEON      DATE                        NOT NULL,
  COMMENTS          VARCHAR2(500 BYTE),
  CREATEDBY         NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL,
  ACTIONTYPE        VARCHAR2(25 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_ASSETVALUECHANGE
(
  ID               NUMBER,
  CHANGETYPE       CHAR(1 BYTE)                 NOT NULL,
  CHANGEDATE       DATE                         NOT NULL,
  ASSETID          NUMBER                       NOT NULL,
  CHANGEREASON     VARCHAR2(250 BYTE),
  CHANGEAMOUNT     NUMBER,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  ISVALUEADDED     CHAR(1 BYTE),
  APPROVEDBY       VARCHAR2(30 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_ASSET_SALE
(
  ASSET_SALE_ID    NUMBER                       NOT NULL,
  ASSETID          NUMBER                       NOT NULL,
  DATE_OF_SALE     DATE,
  WDV              NUMBER,
  SALE_VALUE       NUMBER,
  REASON_FOR_SALE  VARCHAR2(1025 BYTE),
  AUTHORIZED_BY    VARCHAR2(256 BYTE),
  VOUCHERHEADERID  NUMBER                       NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_LTC_PIRTICULARS
(
  LTC_DETAILS_ID    NUMBER(32)                  NOT NULL,
  BLOCK_YEAR        VARCHAR2(256 BYTE),
  CLAIMED_WAY_FARE  CHAR(1 BYTE),
  ORDER_NO          VARCHAR2(256 BYTE),
  ORDER_DATE        DATE,
  ID                NUMBER(32),
  LEAVE_TYPE        VARCHAR2(256 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_MOVABLE_PROP_DETAILS
(
  MOV_PROPERTY_DETAILS_ID  NUMBER(32)           NOT NULL,
  PROPERTY_DISCRIPTION     VARCHAR2(256 BYTE),
  VAL_AT_PURCHASE          NUMBER(32),
  HOW_ACQUIRED_ID          NUMBER(32),
  PERMISSION_OBTAINED      CHAR(1 BYTE),
  ORDER_NO                 VARCHAR2(256 BYTE),
  ORDER_DATE               DATE,
  ID                       NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_NOMIMATION_PIRTICULARS
(
  NOM_DETAILS_ID   NUMBER(32)                   NOT NULL,
  NAME_OF_NOMINEE  VARCHAR2(256 BYTE),
  AGE              NUMBER(32),
  MARITAL_STATUS   VARCHAR2(256 BYTE),
  RELATION         VARCHAR2(256 BYTE),
  GPF              NUMBER(32),
  SPFGS            NUMBER,
  FBF              NUMBER(32),
  DCRG             NUMBER(32),
  PENSION          NUMBER(32),
  ID               NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_WORKS_BUDGET
(
  ID                NUMBER,
  WORKSDETAILID     NUMBER                      NOT NULL,
  BUDGETCODEID      NUMBER                      NOT NULL,
  FUNCTIONID        NUMBER(5,2),
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_WORKS_DEDUCTIONS
(
  ID                NUMBER,
  WORKSDETAILID     NUMBER                      NOT NULL,
  GLCODEID          NUMBER,
  AMOUNT            NUMBER,
  PERC              NUMBER(5,2),
  DEDTYPE           CHAR(1 BYTE)                NOT NULL,
  TDSID             NUMBER,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_WORKS_FINANCINGSOUCE
(
  ID                 NUMBER,
  WORKSDETAILID      NUMBER                     NOT NULL,
  FINANCINGSOURCEID  NUMBER                     NOT NULL,
  PERCENTAGE         NUMBER(5,2)                NOT NULL,
  LASTMODIFIEDDATE   DATE                       NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGW_WORKS_MIS
(
  ID                    NUMBER,
  WORKSDETAILID         NUMBER                  NOT NULL,
  FUNDID                NUMBER,
  FINANCIALSANCTIONID   NUMBER,
  EMDRECEIVED           NUMBER(10,2),
  CHEQUE_REFNO          VARCHAR2(20 BYTE),
  CHEQUE_REFNO_DATE     DATE,
  PERFORMANCE_SECURITY  NUMBER(10,2),
  COUNCILRES            VARCHAR2(30 BYTE),
  COUNCILRESDATE        DATE,
  TENDERNO              VARCHAR2(50 BYTE),
  TENDERAMT             NUMBER(15,2),
  TENDERDATE            DATE,
  AGREEMENT_NO          VARCHAR2(50 BYTE),
  ESTIMATEDCOST         NUMBER(15,2),
  THIRDPARY             NUMBER,
  YEARS                 NUMBER,
  MONTHS                NUMBER,
  DAYS                  NUMBER,
  ESTIMATEPREPAREDON    DATE,
  LIABILITYUNTIL        DATE,
  ESIMATEPREPAREDBY     NUMBER,
  WARDID                NUMBER,
  LASTMODIFIEDDATE      DATE                    NOT NULL,
  OTHERDETAILS          VARCHAR2(500 BYTE),
  MOB_PERC              NUMBER(5,2),
  AGREEMENT_TYPE        VARCHAR2(30 BYTE),
  TYPE                  VARCHAR2(30 BYTE),
  CONTRACTRATE          NUMBER(5,2),
  REBATETYPE            VARCHAR2(30 BYTE),
  REBATE                NUMBER(10,2),
  FIELDID               NUMBER,
  WEIGHTAGE             VARCHAR2(30 BYTE),
  TENDER_DETAILS        VARCHAR2(300 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE OTHERBILLDETAIL
(
  ID               NUMBER,
  VOUCHERHEADERID  NUMBER                       NOT NULL,
  BILLID           NUMBER                       NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_SKILL_MSTR
(
  SKILL_ID     NUMBER(32)                       NOT NULL,
  SKILL_VALUE  VARCHAR2(256 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_POST_MSTR
(
  ID_POST     NUMBER(32)                        NOT NULL,
  VALUE_POST  VARCHAR2(256 BYTE)                NOT NULL,
  END_DATE    DATE,
  START_DATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_RECRUITMENT_TYPE_MSTR
(
  RECRUITMENT_TYPE_ID    NUMBER(32)             NOT NULL,
  RECRUITMENT_TYPE_NAME  VARCHAR2(256 BYTE)     NOT NULL,
  START_DATE             DATE,
  END_DATE               DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_RELIGION_MSTR
(
  RELIGION_ID     NUMBER(32)                    NOT NULL,
  RELIGION_VALUE  VARCHAR2(256 BYTE)            NOT NULL,
  START_DATE      DATE,
  END_DATE        DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_DEPRECIATIONMETADATA
(
  ID_DEPRECIATIONMETADATA  NUMBER,
  DEPRECIATION_RATE        NUMBER,
  FINYEARID                NUMBER(32),
  ASSETCATEGORYID          NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_ASSETCATEGORY
(
  ID            NUMBER                          NOT NULL,
  CODE          VARCHAR2(256 BYTE),
  NAME          VARCHAR2(256 BYTE),
  PARENTID      NUMBER(32),
  MAXLIFE       NUMBER(32),
  ASSETCODE     NUMBER(32),
  ACCDEPCODE    NUMBER(32),
  CWIPCODE      NUMBER(32),
  DEPEXPCODE    NUMBER(32),
  REVCODE       NUMBER(32),
  DEPMETHORD    NUMBER(32),
  DEPID         NUMBER(32),
  ASSETTYPE_ID  NUMBER                          NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_EMP_ASSIGNMENT_PRD
(
  ID           NUMBER(32)                       NOT NULL,
  FROM_DATE    DATE,
  TO_DATE      DATE,
  ID_EMPLOYEE  NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE VOUCHERMIS
(
  ID                 NUMBER                     NOT NULL,
  BILLNUMBER         NUMBER,
  DIVISIONID         NUMBER,
  SCHEMENAME         VARCHAR2(25 BYTE),
  ACCOUNTCODE        VARCHAR2(25 BYTE),
  ACCOUNTHEAD        VARCHAR2(70 BYTE),
  CONTRACTAMT        VARCHAR2(25 BYTE),
  CASHBOOK           VARCHAR2(25 BYTE),
  NATUREOFWORK       VARCHAR2(25 BYTE),
  ASSETDESC          VARCHAR2(25 BYTE),
  USERDEPT           VARCHAR2(25 BYTE),
  DEMANDNO           VARCHAR2(25 BYTE),
  NARRATION          VARCHAR2(250 BYTE),
  CURRENTYEAR        VARCHAR2(25 BYTE),
  DEPARTMENTID       NUMBER,
  DEPTACCHEAD        VARCHAR2(25 BYTE),
  SUBACCOUNTHEAD     VARCHAR2(25 BYTE),
  PROJECTCODE        NUMBER,
  CONCURRANCE_PN     VARCHAR2(25 BYTE),
  ZONECODE           NUMBER,
  WARDCODE           NUMBER,
  DIVISIONCODE       NUMBER,
  MONTH              NUMBER,
  GROSSDED           VARCHAR2(25 BYTE),
  EMD_SECURITY       VARCHAR2(25 BYTE),
  NETDEDUCTION       VARCHAR2(25 BYTE),
  NETAMT             VARCHAR2(25 BYTE),
  TOTEXPENDITURE     VARCHAR2(25 BYTE),
  VOUCHERHEADERID    NUMBER,
  BILLREGISTERID     VARCHAR2(20 BYTE),
  ACOUNT_DEPARTMENT  NUMBER,
  PROJECTFUND        NUMBER,
  CONCURRANCE_SN     NUMBER(4),
  SEGMENTID          NUMBER,
  SUB_SEGMENTID      NUMBER,
  UPDATEDTIMESTAMP   DATE,
  CREATETIMESTAMP    DATE,
  IUT_STATUS         VARCHAR2(20 BYTE),
  IUT_NUMBER         VARCHAR2(30 BYTE),
  FUNDSOURCEID       NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_TECHNICAL_GRADES_MSTR
(
  TECK_GRADES_ID     NUMBER(32)                 NOT NULL,
  TECK_GRADES_VALUE  VARCHAR2(256 BYTE)         NOT NULL,
  SKILL_ID           NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_CONTRACTITEMDETAIL
(
  ID                NUMBER,
  CONTRACTHEADERID  NUMBER                      NOT NULL,
  SRLNO             NUMBER                      NOT NULL,
  ITEMID            NUMBER                      NOT NULL,
  SUPPLIERPARTNO    VARCHAR2(100 BYTE),
  MINORDERQTY       NUMBER(10,2),
  TERMSOFDELIVERY   VARCHAR2(250 BYTE),
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_CONTRACTPRICEDETAIL
(
  ID                    NUMBER,
  CONTRACTITEMDETAILID  NUMBER                  NOT NULL,
  SRLNO                 NUMBER                  NOT NULL,
  BREAKQTYLOW           NUMBER(10,2)            NOT NULL,
  BREAKQTYHIGH          NUMBER(10,2),
  BREAKPRICE            NUMBER(15,2)            NOT NULL,
  LASTMODIFIEDDATE      DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_MRLINE
(
  ID                NUMBER,
  SRLNO             NUMBER                      NOT NULL,
  MRHEADERID        NUMBER                      NOT NULL,
  ITEMID            NUMBER                      NOT NULL,
  MRUOM             NUMBER                      NOT NULL,
  CONTRACTID        NUMBER,
  FROMSTOREID       NUMBER,
  MRQTY             NUMBER(10,2)                NOT NULL,
  NEEDBY            DATE,
  RELATIONID        NUMBER,
  TOSTOREID         NUMBER                      NOT NULL,
  DELIVERYTERMS     VARCHAR2(250 BYTE),
  NOTETORECEIVER    VARCHAR2(250 BYTE),
  PROCESSEDQTY      NUMBER(10,2)                NOT NULL,
  LASTMODIFIEDDATE  DATE
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_INVSTATUS
(
  ID          INTEGER,
  STATUS      VARCHAR2(20 BYTE)                 NOT NULL,
  MODULETYPE  VARCHAR2(10 BYTE)                 NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EG_SECURITYDEPOSIT
(
  SECURITYDEPOSITID  NUMBER,
  RETAINEDAMOUNT     NUMBER,
  RELEASEDATE        DATE,
  RELEASEDAMOUNT     NUMBER
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_DISCIPLINARY_PUNISHMENT
(
  DISCIPLINARY_PUNISHMENT_ID  NUMBER(32)        NOT NULL,
  CHARGE_MEMO_NO              VARCHAR2(256 BYTE),
  CHARGE_MEMO_DATE            DATE,
  CHARGE_MEMO_SERVED_DATE     DATE,
  IS_DISPOSED                 CHAR(1 BYTE),
  IS_UNAUTHORISED_ABSENT      CHAR(1 BYTE),
  IF_YES_FROM                 DATE,
  IF_YES_TO                   DATE,
  WHETHER_SUSPENDED           CHAR(1 BYTE),
  DATE_OF_SUSPENTION          DATE,
  DATE_OF_REINSTATEMENT       DATE,
  IS_SUBSISTENCE_PAID         CHAR(1 BYTE),
  PUNIS_ORDER_DATE            DATE,
  HOW_SUSPESTION              VARCHAR2(1024 BYTE),
  PUN_EFFECT_DATE             DATE,
  ID                          NUMBER(32),
  NATURE_OF_ALLIGATIONS       VARCHAR2(1024 BYTE),
  NATURE_OF_PUNISHMENT        VARCHAR2(1024 BYTE),
  NATURE_OF_DISPOSAL          VARCHAR2(1024 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_EDU_DETAILS
(
  EDUCATION_DETAILS_ID  NUMBER(32)              NOT NULL,
  ID                    NUMBER(32)              NOT NULL,
  EDU_QUL               VARCHAR2(256 BYTE),
  MAJOR_SUBJECT         VARCHAR2(256 BYTE),
  MONTH_YEAR_PASS       DATE,
  UNIVERSITY_BOARD      VARCHAR2(256 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_IMMOVABLE_PROP_DETAILS
(
  IMM_PROPERTY_DETAILS_ID  NUMBER(32)           NOT NULL,
  PROPERTY_DESCRIPTION     VARCHAR2(256 BYTE),
  PLACE                    VARCHAR2(256 BYTE),
  HOW_ACQUIRED_ID          NUMBER(32),
  PRESENT_VALUE            NUMBER(32),
  PERMISSION_OBTAINED      CHAR(1 BYTE),
  ORDER_NO                 VARCHAR2(256 BYTE),
  ORDER_DATE               DATE,
  ID                       NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_LANG_KNOWN
(
  ID_LANG             NUMBER(32)                NOT NULL,
  ID                  NUMBER(32)                NOT NULL,
  LANGUAGES_KNOWN_ID  NUMBER(32)                NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_LEAVETYPE_DETAILS
(
  ID_LEAVETYPE       NUMBER(32)                 NOT NULL,
  TYPE_OF_LEAVE_ID   NUMBER(32),
  MAX_DAYS_ELIGIBLE  NUMBER(32),
  AVAILED_FOR        NUMBER(32),
  ID                 NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_LEAVE_DETAILS_EL
(
  LEAVE_DETAILS_EL_ID  NUMBER(32)               NOT NULL,
  EL_DATE              DATE,
  EL_DAYS              NUMBER(32),
  EL_CREDIT            NUMBER(32),
  ID                   NUMBER(32)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_CONTRACTHEADER
(
  ID                NUMBER,
  CONTRACTNO        VARCHAR2(100 BYTE)          NOT NULL,
  TENDETTYPE        CHAR(1 BYTE)                NOT NULL,
  TENDERREF         VARCHAR2(200 BYTE),
  MRID              NUMBER,
  RELATIONID        NUMBER                      NOT NULL,
  VALIDFROM         DATE                        NOT NULL,
  VALIDTO           DATE,
  MONETORYLIMIT     NUMBER(15,3),
  STATUSID          NUMBER                      NOT NULL,
  APPROVEDBY        NUMBER,
  CREATEDDATE       DATE                        NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  REMARKS           VARCHAR2(250 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_MRHEADER
(
  ID                NUMBER,
  MRNO              VARCHAR2(100 BYTE)          NOT NULL,
  MRDATE            DATE                        NOT NULL,
  MRTYPE            CHAR(1 BYTE)                NOT NULL,
  FUNDID            NUMBER,
  FUNDSOURCEID      NUMBER,
  REQUESTEDBY       VARCHAR2(100 BYTE),
  STATUSID          NUMBER                      NOT NULL,
  NARRATION         VARCHAR2(250 BYTE),
  APPROVEDBY        NUMBER,
  CREATEDDATE       DATE                        NOT NULL,
  CREATEDBY         NUMBER                      NOT NULL,
  LASTMODIFIEDDATE  DATE                        NOT NULL,
  LASTMODIFIEDBY    NUMBER,
  MRNAME            VARCHAR2(50 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGF_VOUCHERMIS
(
  ID                NUMBER,
  VOUCHERHEADERID   NUMBER                      NOT NULL,
  FIELDID           NUMBER,
  LASTMODIFIEDDATE  DATE                        NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_BANK_DET
(
  ID_BANK         NUMBER(32)                    NOT NULL,
  ID              NUMBER(32)                    NOT NULL,
  SALARY_BANK     NUMBER(1),
  BANK            VARCHAR2(256 BYTE),
  ACCOUNT_NUMBER  VARCHAR2(256 BYTE),
  BRANCH          VARCHAR2(256 BYTE)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE EGPIMS_DEPT_TESTS
(
  DEPT_TESTS_ID    NUMBER(32)                   NOT NULL,
  NAME_OF_TEST_ID  NUMBER(32),
  DATE_OF_PASS     DATE,
  ID               NUMBER(32)                   NOT NULL
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;

CREATE TABLE BANKENTRIES
(
  ID               NUMBER,
  BANKACCOUNTID    NUMBER                       NOT NULL,
  REFNO            VARCHAR2(20 BYTE)            NOT NULL,
  TYPE             CHAR(1 BYTE)                 NOT NULL,
  TXNDATE          DATE                         NOT NULL,
  TXNAMOUNT        NUMBER                       NOT NULL,
  GLCODEID         NUMBER,
  VOUCHERHEADERID  NUMBER,
  REMARKS          VARCHAR2(100 BYTE),
  ISREVERSED       NUMBER(1)
)
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


commit;


ALTER TABLE EGF_POLINE ADD (TERMSOFDELIVERY  VARCHAR2(300 BYTE));

ALTER TABLE EGF_ROM ADD (MRNLINEID  NUMBER);

ALTER TABLE EG_BILLREGISTER ADD (WORKORDERDATE  DATE);

ALTER TABLE EG_BILLREGISTER ADD (WORKSDETAILID  NUMBER);

ALTER TABLE EG_BILLREGISTER ADD (PASSEDAMOUNT  NUMBER(15,2));

ALTER TABLE EG_BILLREGISTER ADD (BILLTYPE  VARCHAR2(50 BYTE));

ALTER TABLE EG_BILLREGISTER ADD (EXPENDITURETYPE  VARCHAR2(20 BYTE)            NOT NULL);

ALTER TABLE EG_BILLREGISTER ADD (ADVANCEADJUSTED  NUMBER(15,2));

ALTER TABLE EG_BILLREGISTER ADD (LASTMODIFIEDBY  NUMBER);

ALTER TABLE EG_BILLREGISTER ADD (LASTMODIFIEDDATE  DATE);

ALTER TABLE EG_BILLREGISTER ADD (ZONE  VARCHAR2(20 BYTE));

ALTER TABLE EG_BILLREGISTER ADD (DIVISION  VARCHAR2(50 BYTE));

ALTER TABLE EG_BILLREGISTER ADD (WORKORDERNUMBER  VARCHAR2(50 BYTE));

ALTER TABLE RELATION ADD (BANKACCOUNT  VARCHAR2(50 BYTE));

ALTER TABLE EG_ITEM ADD (ISINVENTORYASSET  INTEGER                     NOT NULL);

ALTER TABLE EG_ITEM ADD (ITEMSTATUSID  INTEGER                         NOT NULL);

ALTER TABLE EG_ITEM ADD (LASTMODIFIEDBY  INTEGER);

ALTER TABLE SUPPLIERBILLDETAIL ADD (MRNID  NUMBER);

ALTER TABLE EG_ITEM ADD (CREATEDBY  INTEGER                            NOT NULL);

ALTER TABLE EG_ITEM ADD (CREATEDDATE  DATE                             NOT NULL);

ALTER TABLE EGF_CONTRACT ADD (WORKSDETAILID  NUMBER);

ALTER TABLE EGF_MRNLINE ADD (VOUCHERHEADERID  NUMBER);

ALTER TABLE CONTRACTORBILLDETAIL ADD (MATERIALADJAMT  NUMBER(15,2));

ALTER TABLE SUPPLIERBILLDETAIL ADD (BILLID  NUMBER);

ALTER TABLE CONTRACTORBILLDETAIL ADD (PAYBYDATE  DATE);

ALTER TABLE CONTRACTORBILLDETAIL ADD (BILLTYPE  VARCHAR2(20 BYTE));

ALTER TABLE CONTRACTORBILLDETAIL ADD (LASTMODIFIEDDATE  DATE);

ALTER TABLE CONTRACTORBILLDETAIL ADD (SECURITYDEPOSITY  NUMBER(10,2));

ALTER TABLE CONTRACTORBILLDETAIL ADD (GENERATEDBY  NUMBER);

ALTER TABLE CONTRACTORBILLDETAIL ADD (STATUSID  NUMBER);

ALTER TABLE CONTRACTORBILLDETAIL ADD (BILLID  NUMBER);

ALTER TABLE SUPPLIERBILLDETAIL ADD (PAYBYDATE  DATE);

ALTER TABLE EG_ITEM ADD (STOCKINGUOMID  INTEGER);

ALTER TABLE RELATION ADD (PWDAPPROVALCODE  VARCHAR2(30 BYTE));

ALTER TABLE RELATION ADD (REGNO  VARCHAR2(30 BYTE));

ALTER TABLE WORKSDETAIL ADD (ACT_COMM_DATE  DATE);

ALTER TABLE WORKSDETAIL ADD (ACT_COMP_DATE  DATE);

ALTER TABLE WORKSDETAIL ADD (COMM_DATE  DATE);

ALTER TABLE WORKSDETAIL ADD (STATUSID  NUMBER);

ALTER TABLE WORKSDETAIL ADD (CREATEDBY  NUMBER);

ALTER TABLE EG_STORES ADD (PHONENO  NUMBER);

ALTER TABLE EG_STORES ADD (CREATEDDATE  DATE                             NOT NULL);

ALTER TABLE RELATION ADD (BANKNAME  VARCHAR2(50 BYTE));

ALTER TABLE WORKSDETAIL ADD (SHIPTO  NUMBER);

ALTER TABLE WORKSDETAIL ADD (BILLTO  VARCHAR2(300 BYTE));

ALTER TABLE EG_STORES ADD (LASTMODIFIEDBY  INTEGER);

ALTER TABLE EG_STORES ADD (BILLINGADDR  VARCHAR2(300 BYTE));

ALTER TABLE TDS ADD (CREATEDBY  NUMBER);
ALTER TABLE RELATION ADD (CREATEDBY  INTEGER  );

update tds set createdby=1 where createdby is null;
update relation set createdby=1 where createdby is null;

alter table TDS modify  createdby NOT NULL;
alter table relation modify  createdby NOT NULL;

ALTER TABLE RELATION ADD (STATUSID  NUMBER);

ALTER TABLE RELATION ADD (GRADEID  NUMBER);

ALTER TABLE RELATION ADD (INACTIVEON  DATE);

ALTER TABLE EG_UOMCATEGORY ADD (CREATEDDATE  DATE                             NOT NULL);

ALTER TABLE EG_UOMCATEGORY ADD (CREATEDBY  INTEGER                            NOT NULL);

ALTER TABLE EG_UOMCATEGORY ADD (LASTMODIFIEDBY  INTEGER);

ALTER TABLE FUND ADD (RECVGLCODEID  NUMBER);

ALTER TABLE EG_STORES ADD (DELIVERYADDR  VARCHAR2(300 BYTE));

ALTER TABLE EG_STORES ADD (CREATEDBY  INTEGER                            NOT NULL);

ALTER TABLE EG_BILLREGISTER ADD (BILLPASSEDDATE  DATE);

ALTER TABLE EGF_BUDGETGROUP ADD (ACCTYPE  NUMBER                               NOT NULL);

ALTER TABLE EGF_BUDGETGROUP ADD (BUDGETINGTYPE  NUMBER                         NOT NULL);

ALTER TABLE EG_BILLREGISTER ADD (FIELDID  NUMBER);

ALTER TABLE EG_ITEMTYPE ADD (CREATEDDATE  DATE                             NOT NULL);

ALTER TABLE EG_ITEMTYPE ADD (CREATEDBY  INTEGER                            NOT NULL);

ALTER TABLE EG_ITEMTYPE ADD (LASTMODIFIEDBY  INTEGER);

ALTER TABLE EG_ITEMTYPE ADD (STOCKINHANDCODEID  INTEGER                    NOT NULL);

ALTER TABLE EG_ITEMTYPE ADD (TAXCODEID  INTEGER);

ALTER TABLE EG_UOM ADD (CREATEDDATE  DATE                             NOT NULL);

ALTER TABLE EG_UOM ADD (CREATEDBY  INTEGER                            NOT NULL);

ALTER TABLE EG_UOM ADD (LASTMODIFIEDBY  INTEGER);

ALTER TABLE MISCBILLDETAIL ADD (BILLVHID  NUMBER);

ALTER TABLE RECEIPTHEADER ADD (CASHIER  VARCHAR2(50 BYTE));

ALTER TABLE SALARYBILLDETAIL ADD (BILLID  NUMBER);

ALTER TABLE EGF_BUDGET ADD (ISPRIMARYBUDGET  NUMBER                       NOT NULL);

ALTER TABLE EG_ADDRESS ADD (TALUKLOCAL  VARCHAR2(256 BYTE));

ALTER TABLE EGF_MRINLINE ADD (VOUCHERHEADERID  NUMBER);

ALTER TABLE GENERALLEDGERDETAIL ADD (AMOUNT  NUMBER(15,2));

ALTER TABLE EG_DEPARTMENT ADD (DEPT_ADDR  VARCHAR2(250 BYTE));

ALTER TABLE EG_DEPARTMENT ADD (ISBILLINGLOCATION  INTEGER);

ALTER TABLE EG_DESIGNATION ADD (DESIGNATION_NAME  VARCHAR2(256 BYTE)          NOT NULL);

ALTER TABLE EG_DESIGNATION ADD (DESIGNATION_DESCRIPTION  VARCHAR2(1024 BYTE));

ALTER TABLE EG_DESIGNATION ADD (SANCTIONED_POSTS  NUMBER(32));

ALTER TABLE EG_DESIGNATION ADD (OUTSOURCED_POSTS  NUMBER(32));

ALTER TABLE EG_DESIGNATION ADD (BASIC_FROM  NUMBER(32));

ALTER TABLE EG_DESIGNATION ADD (BASIC_TO  NUMBER(32));

ALTER TABLE EGCL_TRANSACTION_HEADER ADD (ISCHECKED  CHAR(1 BYTE)                       DEFAULT 'N');

ALTER TABLE EG_DESIGNATION ADD (ANN_INCREMENT  NUMBER(32));

ALTER TABLE EG_DESIGNATION ADD (REPORTSTO  NUMBER(32));

ALTER TABLE EGF_MRINHEADER ADD (STATUSID  NUMBER                              NOT NULL);

ALTER TABLE EGF_MRNHEADER ADD (BILLRECEIVED  NUMBER                          NOT NULL);

ALTER TABLE WORKSDETAIL ADD (COMP_DATE  DATE);

ALTER TABLE WORKSDETAIL ADD (WORKLOCATION  VARCHAR2(250 BYTE));

ALTER TABLE WORKSDETAIL ADD (WORKCATEGORY  NUMBER);

ALTER TABLE WORKSDETAIL ADD (SUBCATEGORY  NUMBER);

ALTER TABLE WORKSDETAIL ADD (USERDEPTID  NUMBER);

ALTER TABLE WORKSDETAIL ADD (EXECDEPTID  NUMBER);

ALTER TABLE WORKSDETAIL ADD (PARENTID  NUMBER);

ALTER TABLE BANKRECONCILIATION ADD (ISDISHONORED  NUMBER);

ALTER TABLE CHEQUEDETAIL ADD (TYPE  VARCHAR2(50 BYTE));

ALTER TABLE EG_ITEM ADD (ABCCLASS  CHAR(1 BYTE));

ALTER TABLE EG_ITEM ADD (MINSOH  INTEGER);

ALTER TABLE EG_ITEM ADD (ISLOTCONTROLLED  INTEGER                      NOT NULL);

ALTER TABLE EG_ITEM ADD (TAXABLE  INTEGER);

ALTER TABLE EG_ITEM ADD (TECHSPECIFICATION  VARCHAR2(250 BYTE));

ALTER TABLE EG_ITEM ADD (TERMSOFDELIVERY  VARCHAR2(250 BYTE));

ALTER TABLE EG_ITEM ADD (MODEL  VARCHAR2(250 BYTE));

ALTER TABLE EG_ITEM ADD (EXPENSEGLCODEID  INTEGER);

ALTER TABLE EG_ITEM ADD (CONTRACTREQT  CHAR(1 BYTE)                    NOT NULL);

ALTER TABLE EG_ITEM ADD (PUCHUOMID  INTEGER                            NOT NULL);

ALTER TABLE EG_ITEM ADD (CANPURCHASE  INTEGER                          NOT NULL);

ALTER TABLE EG_ITEM ADD (ISSHELFLIFECONTROLLED  INTEGER                NOT NULL);

ALTER TABLE EGF_POLINE ADD (MRHEADERID  NUMBER);

ALTER TABLE EGF_POLINE ADD (MRLINEID  NUMBER);

ALTER TABLE EGF_POLINE ADD (CONTRACTID  NUMBER);

ALTER TABLE EGF_POLINE ADD (TECHINFO  VARCHAR2(300 BYTE));


commit;


CREATE SEQUENCE EGPIMS_ADD_SEQ
  START WITH 44
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_ANNUAL_INCREMENT_SEQ
  START WITH 49
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_BANK_DET_SEQ
  START WITH 45
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_CAT_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_COMMUNITY_SEQ
  START WITH 6
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_DEPT_TESTS_SEQ
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_DESIGNATION_SEQ
  START WITH 52
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_DET_OF_ENQUIRY_OFF_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_EO_DESIGNATION_SEQ
  START WITH 2
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_DISCIPLINARY_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_EDU_DETAILS_SEQ
  START WITH 10
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_EDU_QULIFICATION_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_EDU_QUL_MSTR_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_GRADE_MSTR_SEQ
  START WITH 21
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_HOW_ACQUIRED_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_IMMOVABLE_PROP_SEQ
  START WITH 8
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_LANGUAGES_KNOWN_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_LANGUAGES_QULIFIED_SEQ
  START WITH 4
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_LANGUAGES_SKILLS_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_LANG_KNOWN_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_LEAVETYPE_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_LEAVE_DETAILS_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_MODE_OF_RECRUIMENT_SEQ
  START WITH 6
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_CONTRACTITEMDETAIL
  START WITH 16
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_MBHEADER
  START WITH 37
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_CONTRACTPRICEDETAIL
  START WITH 34
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_DEPRFORMULA
  START WITH 4
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_RELIGION_SEQ
  START WITH 4
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_SALARYCODES
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_SECURITYDEPOSIT
  START WITH 17
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_WORKSTYPE
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_OTHERBILLDETAIL
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_TRANSACTIONSUMMARYDETAILS
  START WITH 32
  NOMAXVALUE
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_VOUCHERMIS
  START WITH 152
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_RECRUITMENT_TYPE_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TECK_GRADES_SEQ
  START WITH 5
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TRAINING_COURSE_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_SATUSCHANGE
  START WITH 213
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EG_SECURITYDEPOSIT_SEQ
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_ISSUEREPAIR
  START WITH 4
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EG_ASSETVALUECHANGE_SEQ
  START WITH 8
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EG_DEPRECIATIONMETADATA_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_SOR_RATESCHEDULE
  START WITH 13
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_INTERSTORETRANSFER
  START WITH 24
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_MBDETAILS
  START WITH 66
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_SOR
  START WITH 19
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_MRHEADER
  START WITH 37
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_MRLINE
  START WITH 62
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_MRNLINEOTHERS
  START WITH 30
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_VOUCHERMIS
  START WITH 378
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGP_SALARY_BILLDETAILS
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGP_SALARY_BUDGET
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_BILL_DEDUCTIONS
  START WITH 58
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_CONTGRADES_MASTER
  START WITH 8
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_EMDRATES_MASTER
  START WITH 12
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_FSDRATES_MASTER
  START WITH 8
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_BANKENTRIES
  START WITH 21
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TEC_QU_SEQ
  START WITH 35
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_DESIGNATION
  START WITH 4
  NOMAXVALUE
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_ASSET_STATUS
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_ASSET_SALE_ID
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TECK_GRADES_SEQ1
  START WITH 65
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_ASSET_STATUS
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TYPE_OF_LEAVE_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EG_DEPRECIATION_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_UNI_BOARD_SEQ
  START WITH 2
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TRAINING_PIR_SE
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_SKILL_MSTR_SEQ
  START WITH 4
  NOMAXVALUE
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_TEC_GRADE_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_SKILL_MSTR_SEQ1
  START WITH 14
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGF_CONTRACTHEADER
  START WITH 13
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_SCALE_OF_PAY_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_REGULARISATION_SEQ
  START WITH 23
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_RELATION_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_PROBATION_SEQ
  START WITH 34
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_STATUS
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_TYPEOFWORK
  START WITH 4
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKSCATEGORY
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKSSUBCATEGORY
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKS_ACTIVITY
  START WITH 71
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKS_BUDGET
  START WITH 43
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKS_DEDUCTIONS
  START WITH 57
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKS_FINANCINGSOUCE
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKS_FINANCINGSOURCE
  START WITH 47
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EGW_WORKS_MIS
  START WITH 28
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ACTIONDETAILS
  START WITH 153
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_AGEING_LIST
  START WITH 5
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_APPROVALDETAILS
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ASSET
  START WITH 27
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ASSETCAT
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ASSETCATEGORY
  START WITH 15
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ASSETVALUECHANGE
  START WITH 29
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ASSET_DEPFORMULA
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_ASSET_SALE
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_BILLREGISTERMIS
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_CATALOGUE
  START WITH 9
  NOMAXVALUE
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_DEPRECAITIONMETADATA
  START WITH 15
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE SEQ_EG_DEPRECIATION
  START WITH 4
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_MOVABLE_PROP_SEQ
  START WITH 6
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_NAME_OF_TEST_SEQ
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_NAT_OF_ALLIG_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_NAT_OF_DIS_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_NAT_OF_PUN_SEQ
  START WITH 0
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_NOMIMATION_SEQ
  START WITH 6
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_PAY_FIXED_SEQ
  START WITH 2
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_PERSONAL_INFO_SEQ
  START WITH 46
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE SEQUENCE EGPIMS_POST_MSTR_SEQ
  START WITH 3
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


commit;




ALTER TABLE EGW_SOR ADD CONSTRAINT FK_SOR_SOR FOREIGN KEY (PARENTID) REFERENCES EGW_SOR (ID);

ALTER TABLE EGF_POLINE ADD CONSTRAINT FK_POL_MRL FOREIGN KEY (MRLINEID)  REFERENCES EGF_MRLINE (ID);


ALTER TABLE EGF_POLINE ADD CONSTRAINT FK_POL_CNTR FOREIGN KEY (CONTRACTID)  REFERENCES EGF_CONTRACTHEADER (ID);


ALTER TABLE EGF_POLINE ADD CONSTRAINT FK_POL_MRH FOREIGN KEY (MRHEADERID)  REFERENCES EGF_MRHEADER (ID);


ALTER TABLE EGW_SOR_RATESCHEDULE ADD CONSTRAINT FK_SORR_SOR FOREIGN KEY (SORID)   REFERENCES EGW_SOR (ID);

ALTER TABLE EGW_MBDETAILS ADD CONSTRAINT FK_MBD_MB FOREIGN KEY (MBHEADERID)    REFERENCES EGW_MBHEADER (ID);


ALTER TABLE EG_ASSET_PO ADD CONSTRAINT FK_APO_ASS FOREIGN KEY (ASSETID)  REFERENCES EG_ASSET (ASSETID);

ALTER TABLE EGF_MRNLINE ADD CONSTRAINT FK_MRNL_VH FOREIGN KEY (VOUCHERHEADERID)    REFERENCES VOUCHERHEADER (ID);


ALTER TABLE EGPIMS_BANK_DET ADD CONSTRAINT ID_PERSONAL_INFORMATION_BANK FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);


ALTER TABLE EG_BILLREGISTER ADD CONSTRAINT FK_BR_FD FOREIGN KEY (FIELDID)    REFERENCES EG_BOUNDARY (ID_BNDRY);

ALTER TABLE EG_BILLREGISTER ADD CONSTRAINT FK_BR_USR FOREIGN KEY (CREATEDBY)    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_BILLREGISTER ADD CONSTRAINT FK_BR_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_BILLREGISTER ADD CONSTRAINT FK_BR_WD FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_SUP FOREIGN KEY (RELATIONID) 
    REFERENCES RELATION (ID);


ALTER TABLE CONTRACTORBILLDETAIL ADD CONSTRAINT FK_CBD_USR FOREIGN KEY (GENERATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE CONTRACTORBILLDETAIL ADD CONSTRAINT FK_CBD_ASSET FOREIGN KEY (ASSETID) 
    REFERENCES EG_ASSET (ASSETID);

ALTER TABLE CONTRACTORBILLDETAIL ADD CONSTRAINT FK_CBD_STAT FOREIGN KEY (STATUSID) 
    REFERENCES EGW_STATUS (ID);

ALTER TABLE SUPPLIERBILLDETAIL ADD CONSTRAINT FK_SBD_VH FOREIGN KEY (MRNID) 
    REFERENCES EGF_MRNHEADER (ID);

ALTER TABLE SUPPLIERBILLDETAIL ADD CONSTRAINT FK_SBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);


ALTER TABLE SALARYBILLDETAIL ADD CONSTRAINT FK_SLBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);

ALTER TABLE EGF_MRNLINEOTHERS ADD CONSTRAINT FK_MRNLO_MRNL FOREIGN KEY (MRNLINEID) 
    REFERENCES EGF_MRNLINE (ID);

ALTER TABLE EGW_MBDETAILS ADD PRIMARY KEY (ID);

ALTER TABLE EG_CATALOGUE ADD CONSTRAINT FK_CAT_SUP FOREIGN KEY (RELATIONID) 
    REFERENCES RELATION (ID);

ALTER TABLE EG_CATALOGUE ADD CONSTRAINT FK_CAT_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);


ALTER TABLE EG_SALARYCODES ADD PRIMARY KEY (ID);


ALTER TABLE EGF_CONTRACT ADD CONSTRAINT FK_ISC_WDT FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);

ALTER TABLE CHARTOFACCOUNTS ADD CONSTRAINT FK_COS_SCH1 FOREIGN KEY (RECEIPTSCHEDULEID) 
    REFERENCES SCHEDULEMAPPING (ID);

ALTER TABLE EG_CATALOGUE ADD PRIMARY KEY (ID);

ALTER TABLE EG_CATALOGUE ADD CONSTRAINT FK_CAT_ITEM FOREIGN KEY (ITEMID) 
    REFERENCES EG_ITEM (ID);

ALTER TABLE EGF_DEPRFORMULA ADD PRIMARY KEY (ID);

ALTER TABLE EG_CATALOGUE ADD CONSTRAINT FK_CAT_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE RELATION ADD CONSTRAINT FKRELSTATUS FOREIGN KEY (STATUSID) 
    REFERENCES EG_INVSTATUS (ID);

ALTER TABLE RELATION ADD CONSTRAINT FK_RL_CG FOREIGN KEY (GRADEID) 
    REFERENCES EGW_CONTGRADES_MASTER (ID);

ALTER TABLE RELATION ADD CONSTRAINT FK_RELATION_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_STORES ADD CONSTRAINT FK_STORES_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_STORES ADD CONSTRAINT FK_STORES_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_UOMCATEGORY ADD CONSTRAINT FK_UCT_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_UOMCATEGORY ADD CONSTRAINT FK_UCT_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE FUND ADD CONSTRAINT FK_COA1_FUND FOREIGN KEY (PAYGLCODEID)  REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EG_STORES ADD UNIQUE (DEPTID, STORENAME);

ALTER TABLE EGF_BUDGETING_TYPE ADD PRIMARY KEY (ID);

ALTER TABLE EG_AGEING_LIST ADD CONSTRAINT FK_AL_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);


ALTER TABLE EGF_CONTRACTPRICEDETAIL ADD CONSTRAINT FK_CTRPD_CTRID FOREIGN KEY (CONTRACTITEMDETAILID) 
    REFERENCES EGF_CONTRACTITEMDETAIL (ID);

ALTER TABLE EGF_MRLINE ADD PRIMARY KEY (ID);

ALTER TABLE EGF_CONTRACTITEMDETAIL ADD CONSTRAINT FK_CTRID_ITEM FOREIGN KEY (ITEMID) 
    REFERENCES EG_ITEM (ID);

ALTER TABLE EGW_MBDETAILS ADD CONSTRAINT FK_MBD_WA FOREIGN KEY (WORKSACTIVITYID) 
    REFERENCES EGW_WORKS_ACTIVITY (ID);

ALTER TABLE EG_ITEM ADD CONSTRAINT FK_ITEM_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_UOM FOREIGN KEY (MRUOM) 
    REFERENCES EG_UOM (ID);


ALTER TABLE EGF_BUDGETGROUP ADD CONSTRAINT FK_EGF_BUDGETING_TYPE FOREIGN KEY (BUDGETINGTYPE) 
    REFERENCES EGF_BUDGETING_TYPE (ID);

ALTER TABLE EGF_BUDGETGROUP ADD CONSTRAINT FK_EGF_BUDGET_ACCTYPE FOREIGN KEY (ACCTYPE) 
    REFERENCES EGF_BUDGET_ACCTYPE (ID);


ALTER TABLE EG_ASSET ADD UNIQUE (CODE);

ALTER TABLE EG_ASSET ADD CONSTRAINT EG_BNDRY_FK FOREIGN KEY (BOUNDARYID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY);

ALTER TABLE EG_ASSET ADD CONSTRAINT EG_SECURITYDEP_FK FOREIGN KEY (SECURITYDEPOSITID) 
    REFERENCES EG_SECURITYDEPOSIT (SECURITYDEPOSITID);

ALTER TABLE EG_ASSET ADD CONSTRAINT EG_WORKSDETAIL_FK FOREIGN KEY (WORKORDERFORCAPITALIZATION) 
    REFERENCES WORKSDETAIL (ID) DISABLE;

ALTER TABLE EG_ASSET ADD CONSTRAINT FK_ASSET_DEP FOREIGN KEY (DEPARTMENTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT);

ALTER TABLE EG_ASSET ADD CONSTRAINT FK_ASSET_STAT FOREIGN KEY (STATUSID) 
    REFERENCES EGF_ASSET_STATUS (ID);


ALTER TABLE EG_ITEMTYPE ADD CONSTRAINT FK_IT_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_ITEMTYPE ADD CONSTRAINT FK_IT_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_ITEMTYPE ADD CONSTRAINT FK_SIH_COA FOREIGN KEY (STOCKINHANDCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EG_ITEMTYPE ADD CONSTRAINT FK_TXC_TDS FOREIGN KEY (TAXCODEID) 
    REFERENCES TDS (ID);

ALTER TABLE EG_UOM ADD CONSTRAINT FK_UOM_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_UOM ADD CONSTRAINT FK_UOM_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE MISCBILLDETAIL ADD CONSTRAINT FK_MBD_VH FOREIGN KEY (BILLVHID) 
    REFERENCES VOUCHERHEADER (ID);


ALTER TABLE EGPIMS_MOVABLE_PROP_DETAILS ADD CONSTRAINT PK_EGPIMS_MOV_PROPERTY_DETAILS PRIMARY KEY (MOV_PROPERTY_DETAILS_ID);

ALTER TABLE EGPIMS_MOVABLE_PROP_DETAILS ADD CONSTRAINT FK_HOW_ACQUIRED FOREIGN KEY (HOW_ACQUIRED_ID) 
    REFERENCES EGPIMS_HOW_ACQUIRED_MSTR (HOW_ACQUIRED_ID);

ALTER TABLE EGF_MRNLINEOTHERS ADD PRIMARY KEY (ID);

ALTER TABLE EG_WORKSTYPE ADD CONSTRAINT PK_EG_WORKSTYPE PRIMARY KEY (ID);


ALTER TABLE EGF_MRINLINE ADD CONSTRAINT FK_MRINL_VH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EG_SALARYCODES ADD CONSTRAINT FK_SBC_COA FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EGP_SALARY_BUDGET ADD CONSTRAINT FK_SALB_FUN FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID);

ALTER TABLE EGF_BUDGET_ACCTYPE ADD PRIMARY KEY (ID);


ALTER TABLE EG_DESIGNATION ADD CONSTRAINT PK_EG_DESIGNATION PRIMARY KEY (DESIGNATIONID);

ALTER TABLE EGW_WORKS_ACTIVITY ADD CONSTRAINT FK_WA_WM FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);
    
ALTER TABLE EGF_MRINHEADER MODIFY(PURPOSE NUMBER);

ALTER TABLE EGF_MRINHEADER ADD CONSTRAINT MRINFK_PURPOSE FOREIGN KEY (PURPOSE)   REFERENCES EGF_MRINPURPOSE (ID);

alter table worksdetail add  type1 varchar2(50);
update worksdetail set type1=type;
update worksdetail set type=null;
ALTER TABLE WORKSDETAIL MODIFY(TYPE NUMBER);
update worksdetail set type=to_number(type1);
alter table worksdetail drop column  type1 ;

ALTER TABLE WORKSDETAIL ADD CONSTRAINT FKWORKSTYPE FOREIGN KEY (TYPE)    REFERENCES EG_WORKSTYPE (ID);

ALTER TABLE WORKSDETAIL ADD CONSTRAINT FK_WD_WD FOREIGN KEY (PARENTID)    REFERENCES WORKSDETAIL (ID);

ALTER TABLE WORKSDETAIL ADD CONSTRAINT FK_WD_WST FOREIGN KEY (SUBCATEGORY) 
    REFERENCES EGW_TYPEOFWORK (ID);

ALTER TABLE WORKSDETAIL ADD CONSTRAINT FK_WD_WT FOREIGN KEY (WORKCATEGORY) 
    REFERENCES EGW_TYPEOFWORK (ID);


ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_MODE_OF_RECRUIMENT FOREIGN KEY (MODE_OF_RECRUIMENT_ID) 
    REFERENCES EGPIMS_MODE_OF_RECRUIMENT_MSTR (MODE_OF_RECRUIMENT_ID);

ALTER TABLE EG_ITEM ADD CONSTRAINT FK_ITEM_COA FOREIGN KEY (EXPENSEGLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EG_ITEM ADD CONSTRAINT FK_ITEM_ISTAT FOREIGN KEY (ITEMSTATUSID) 
    REFERENCES EG_INVSTATUS (ID);

ALTER TABLE EG_ITEM ADD CONSTRAINT FK_ITEM_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_ITEM ADD CONSTRAINT FK_ITEM_PUOM FOREIGN KEY (PUCHUOMID) 
    REFERENCES EG_UOM (ID);

ALTER TABLE EG_ITEM ADD CONSTRAINT FK_ITEM_SUOM FOREIGN KEY (STOCKINGUOMID) 
    REFERENCES EG_UOM (ID);

ALTER TABLE EGF_INTERSTORETRANSFER ADD CONSTRAINT FK_IST_MRINL FOREIGN KEY (MRINLINEID) 
    REFERENCES EGF_MRINLINE (ID);

ALTER TABLE EGF_INTERSTORETRANSFER ADD CONSTRAINT FK_IST_MRL FOREIGN KEY (MRLINEID) 
    REFERENCES EGF_MRLINE (ID);


ALTER TABLE EG_INVSTATUS ADD PRIMARY KEY (ID);

ALTER TABLE EG_SECURITYDEPOSIT ADD PRIMARY KEY (SECURITYDEPOSITID);

ALTER TABLE FUNCTIONARY ADD CONSTRAINT PK_FUNCTIONARY PRIMARY KEY (ID);

ALTER TABLE EGF_ROM ADD CONSTRAINT ROMFK_MRNLINE FOREIGN KEY (MRNLINEID) 
    REFERENCES EGF_MRNLINE (ID);

ALTER TABLE EGW_WORKS_ACTIVITY ADD CONSTRAINT FK_WA_UOM FOREIGN KEY (UOM) 
    REFERENCES EG_UOM (ID);


ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_RECRUITMENT_TYPE FOREIGN KEY (RECRUITMENT_TYPE_ID) 
    REFERENCES EGPIMS_RECRUITMENT_TYPE_MSTR (RECRUITMENT_TYPE_ID);

ALTER TABLE EGW_FSDRATES_MASTER ADD CONSTRAINT FK_FDS_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_RELIGION FOREIGN KEY (RELIGION_ID) 
    REFERENCES EGPIMS_RELIGION_MSTR (RELIGION_ID);

ALTER TABLE EGW_FSDRATES_MASTER ADD CONSTRAINT FK_FDS_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGW_SATUSCHANGE ADD PRIMARY KEY (ID);

ALTER TABLE EGW_SATUSCHANGE ADD CONSTRAINT FK_SC_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT ID_DEPT_FK FOREIGN KEY (ID_DEPT) 
    REFERENCES EG_DEPARTMENT (ID_DEPT);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT ID_USER_FK FOREIGN KEY (ID_USER) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGW_TYPEOFWORK ADD PRIMARY KEY (ID);

ALTER TABLE EG_APPROVALDETAILS ADD CONSTRAINT FK_APD_USR1 FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGF_CONTRACTHEADER ADD PRIMARY KEY (ID);

ALTER TABLE EGW_BILL_DEDUCTIONS ADD CONSTRAINT FK_CBDD_CBD FOREIGN KEY (CONTRACTORBILLDETAILID) 
    REFERENCES CONTRACTORBILLDETAIL (ID);

ALTER TABLE EGF_CONTRACTITEMDETAIL ADD CONSTRAINT FK_CTRID_CTRH FOREIGN KEY (CONTRACTHEADERID) 
    REFERENCES EGF_CONTRACTHEADER (ID);

ALTER TABLE VOUCHERMIS ADD CONSTRAINT FK_VMIS_FS FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID);

ALTER TABLE EGPIMS_POST_MSTR ADD CONSTRAINT PK_EGPIMS_POST_MSTR PRIMARY KEY (ID_POST);

ALTER TABLE EGPIMS_ANNUAL_INCREMENT_MSTR ADD CONSTRAINT PK_EGPIMS_ANNUAL_INCREMENT PRIMARY KEY (ANNUAL_INCREMENT_ID);

ALTER TABLE EGPIMS_RECRUITMENT_TYPE_MSTR ADD CONSTRAINT PK_EGPIMS_RECRUITMENT_TYPE PRIMARY KEY (RECRUITMENT_TYPE_ID);


ALTER TABLE EGF_CONTRACTHEADER ADD CONSTRAINT FK_CTR_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGF_CONTRACTHEADER ADD CONSTRAINT FK_CTR_SUP FOREIGN KEY (RELATIONID) 
    REFERENCES RELATION (ID);

ALTER TABLE EGF_CONTRACTHEADER ADD CONSTRAINT FK_CTR_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGF_MRHEADER ADD PRIMARY KEY (ID);

ALTER TABLE EGF_MRHEADER ADD CONSTRAINT FK_MR_FS FOREIGN KEY (FUNDSOURCEID) 
    REFERENCES FUNDSOURCE (ID);


ALTER TABLE EGF_MRHEADER ADD CONSTRAINT FK_MR_FUND FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID);


ALTER TABLE EG_SALARYCODES ADD CONSTRAINT FK_SBC_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_BILLREGISTERMIS ADD CONSTRAINT FK_BRM_DPT FOREIGN KEY (DEPARTMENTID) 
    REFERENCES EG_DEPARTMENT (ID_DEPT);

ALTER TABLE EG_BILLREGISTERMIS ADD CONSTRAINT FK_BRM_FY FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID);


ALTER TABLE EG_DEPRECIATIONMETADATA ADD PRIMARY KEY (ID_DEPRECIATIONMETADATA);

ALTER TABLE EGF_CONTRACTITEMDETAIL ADD PRIMARY KEY (ID);

ALTER TABLE EG_SALARYCODES ADD CONSTRAINT FK_SBC_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_DEPRECIATIONMETADATA ADD CONSTRAINT FIN_PK FOREIGN KEY (FINYEARID) 
    REFERENCES FINANCIALYEAR (ID);


ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT QULIFIED_ID_FK FOREIGN KEY (QULIFIED_ID) 
    REFERENCES EGPIMS_LOCAL_LANG_QUL_MSTR (QULIFIED_ID);

ALTER TABLE EGPIMS_MOVABLE_PROP_DETAILS ADD CONSTRAINT ID_PERSONAL_INFORMATION_MOV FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGW_TYPEOFWORK ADD CONSTRAINT FK_TYPEOFWORK_TYPEOFWORK FOREIGN KEY (PARENTID) 
    REFERENCES EGW_TYPEOFWORK (ID);


ALTER TABLE EGPIMS_IMMOVABLE_PROP_DETAILS ADD CONSTRAINT PK_EGPIMS_IMM_PROPERTY_DETAILS PRIMARY KEY (IMM_PROPERTY_DETAILS_ID);


ALTER TABLE EGPIMS_LEAVE_DETAILS_EL ADD CONSTRAINT PK_EGPIMS_LEAVE_DETAILS_EL PRIMARY KEY (LEAVE_DETAILS_EL_ID);

ALTER TABLE EGPIMS_IMMOVABLE_PROP_DETAILS ADD CONSTRAINT FK_HOW_ACQUIRED_IMM FOREIGN KEY (HOW_ACQUIRED_ID) 
    REFERENCES EGPIMS_HOW_ACQUIRED_MSTR (HOW_ACQUIRED_ID);

ALTER TABLE EGW_WORKS_ACTIVITY ADD PRIMARY KEY (ID);

ALTER TABLE EGW_WORKS_ACTIVITY ADD CONSTRAINT FK_WAD_WAD FOREIGN KEY (PARENTID) 
    REFERENCES EGW_WORKS_ACTIVITY (ID);

ALTER TABLE EGPIMS_NOMIMATION_PIRTICULARS ADD CONSTRAINT PK_EGPIMS_NOM_DETAILS PRIMARY KEY (NOM_DETAILS_ID);

ALTER TABLE EGF_MRHEADER ADD CONSTRAINT FK_MR_ISTAT FOREIGN KEY (STATUSID) 
    REFERENCES EG_INVSTATUS (ID);

ALTER TABLE EGPIMS_TRAINING_PIRTICULARS ADD CONSTRAINT ID_PERSONAL_INFORMATION_FK_TRA FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGW_WORKS_FINANCINGSOUCE ADD CONSTRAINT FK_WFS_FS FOREIGN KEY (FINANCINGSOURCEID) 
    REFERENCES FUNDSOURCE (ID);

ALTER TABLE EGW_WORKS_FINANCINGSOUCE ADD CONSTRAINT FK_WFS_WD FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);


ALTER TABLE EGW_WORKS_MIS ADD PRIMARY KEY (ID);

ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_USR1 FOREIGN KEY (CHECKEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_ITEM FOREIGN KEY (ITEMID) 
    REFERENCES EG_ITEM (ID);

ALTER TABLE EGPIMS_IMMOVABLE_PROP_DETAILS ADD CONSTRAINT ID_PERSONAL_INFORMATION_IMM FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGPIMS_LANG_KNOWN ADD CONSTRAINT PK_EGPIMS_LANG_KNOWN PRIMARY KEY (ID_LANG);

ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_USR3 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_NOMIMATION_PIRTICULARS ADD CONSTRAINT ID_PERSONAL_INFORMATION_NOM FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGP_SALARY_BILLDETAILS ADD PRIMARY KEY (ID);

ALTER TABLE EGW_CONTGRADES_MASTER ADD PRIMARY KEY (ID);


ALTER TABLE OTHERBILLDETAIL ADD CONSTRAINT FK_OBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);

ALTER TABLE EGW_TYPEOFWORK ADD CONSTRAINT FK_TYPEOFWORK_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);


ALTER TABLE EGW_BILL_DEDUCTIONS ADD CONSTRAINT FK_CBDD_TDS FOREIGN KEY (TDSID) 
    REFERENCES TDS (ID);

ALTER TABLE EG_DEPRECIATION ADD PRIMARY KEY (ID_DEPRECIATION);

ALTER TABLE EGW_CONTGRADES_MASTER ADD UNIQUE (GRADE);

ALTER TABLE EGW_MBHEADER ADD PRIMARY KEY (ID);

ALTER TABLE EG_DEPRECIATION ADD CONSTRAINT DEP_ASSET_FK FOREIGN KEY (ASSETID) 
    REFERENCES EG_ASSET (ASSETID);

ALTER TABLE EGW_CONTGRADES_MASTER ADD CONSTRAINT FK_CG_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_RELIGION_MSTR ADD CONSTRAINT PK_EGPIMS_RELIGION PRIMARY KEY (RELIGION_ID);

ALTER TABLE EGW_SOR ADD CONSTRAINT FK_SOR_UOM FOREIGN KEY (UOMID) 
    REFERENCES EG_UOM (ID);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FK_COA_AC1 FOREIGN KEY (ASSETCODE) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EGP_SALARY_BUDGET ADD CONSTRAINT FK_SALB_BC FOREIGN KEY (BUDGETCODEID) 
    REFERENCES EGF_BUDGETGROUP (ID);


ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WD_FD FOREIGN KEY (FIELDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY);

ALTER TABLE EGPIMS_PERSON_ADDRESS ADD CONSTRAINT PK_EGPIMS_PERSON_ADDRESS PRIMARY KEY (ID_PERSON_ADDRESS);


ALTER TABLE EGPIMS_LANG_KNOWN ADD CONSTRAINT ID_PERSONAL_INFORMATION_LK FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGW_CONTGRADES_MASTER ADD CONSTRAINT FK_CG_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WMIS_BDR FOREIGN KEY (WARDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY);

ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WMIS_FD FOREIGN KEY (FUNDID) 
    REFERENCES FUND (ID);

ALTER TABLE EG_DEPRECIATION ADD CONSTRAINT FINYEARID FOREIGN KEY (FINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID);

ALTER TABLE EG_ASSETCATEGORY ADD PRIMARY KEY (ID);

ALTER TABLE EG_ASSETCATEGORY ADD UNIQUE (CODE);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT DEPID_METADATA FOREIGN KEY (DEPID) 
    REFERENCES EG_DEPRECIATIONMETADATA (ID_DEPRECIATIONMETADATA);

ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WMIS_REL FOREIGN KEY (THIRDPARY) 
    REFERENCES RELATION (ID);

ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WMIS_USR FOREIGN KEY (FINANCIALSANCTIONID) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT DEPTMETHOD FOREIGN KEY (DEPMETHORD) 
    REFERENCES EGF_DEPRFORMULA (ID);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FK_COA_AC2 FOREIGN KEY (ACCDEPCODE) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EGW_TYPEOFWORK ADD CONSTRAINT FK_TYPEOFWORK_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_PERSON_ADDRESS ADD CONSTRAINT FK_ADD_ID FOREIGN KEY (ID_ADDRESS) 
    REFERENCES EG_ADDRESS (ADDRESSID);

ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WMIS_USR3 FOREIGN KEY (ESIMATEPREPAREDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EG_DEPRECIATION ADD CONSTRAINT VHID FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EGF_MRHEADER ADD CONSTRAINT FK_MR_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGP_SALARY_BUDGET ADD CONSTRAINT FK_SALB_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);


ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT PK_EG_EMP_ASSIGNMENT PRIMARY KEY (ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT DEPT_FK FOREIGN KEY (ID_DEPT) 
    REFERENCES EG_DEPARTMENT (ID_DEPT);

ALTER TABLE EGPIMS_DEPT_TESTS ADD CONSTRAINT PK_EGPIMS_DEPT_TESTS PRIMARY KEY (DEPT_TESTS_ID);

ALTER TABLE EGW_EMDRATES_MASTER ADD PRIMARY KEY (ID);


ALTER TABLE EGF_MRHEADER ADD CONSTRAINT FK_MR_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGW_EMDRATES_MASTER ADD CONSTRAINT FK_EMD_FY FOREIGN KEY (FROMFINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID);

ALTER TABLE EGW_WORKS_MIS ADD CONSTRAINT FK_WMIS_WM FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);

ALTER TABLE EGPIMS_PERSON_ADDRESS ADD CONSTRAINT FK_PER_ID FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FKASSETTYPE FOREIGN KEY (ASSETTYPE_ID) 
    REFERENCES EG_ASSET_TYPE (ID);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FK_AC_AC FOREIGN KEY (PARENTID) 
    REFERENCES EG_ASSETCATEGORY (ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT DES_FK FOREIGN KEY (DESIGNATIONID) 
    REFERENCES EG_DESIGNATION (DESIGNATIONID);

ALTER TABLE EGPIMS_CATEGORY_MSTR ADD CONSTRAINT PK_EGPIMS_CATEGORY PRIMARY KEY (CATEGORY_ID);

ALTER TABLE EGW_SOR_RATESCHEDULE ADD PRIMARY KEY (ID);

ALTER TABLE EGPIMS_COMMUNITY_MSTR ADD CONSTRAINT PK_EGPIMS_COMMUNITY PRIMARY KEY (COMMUNITY_ID);

ALTER TABLE EGW_SOR ADD CONSTRAINT FK_SOR_USR FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_PROBATION ADD CONSTRAINT PK_EGPIMS_PROBATION PRIMARY KEY (ID_PROBATION);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_CTR FOREIGN KEY (CONTRACTID) 
    REFERENCES EGF_CONTRACTHEADER (ID);

ALTER TABLE EGW_EMDRATES_MASTER ADD CONSTRAINT FK_EMD_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_DET_OF_ENQUIRY_OFFICER ADD CONSTRAINT PK_EGPIMS_DET_OF_ENQUIRY_OFF PRIMARY KEY (ENQUIRY_OFFICER_ID);

ALTER TABLE EGPIMS_SKILL_MSTR ADD CONSTRAINT PK_EGPIMS_SKILL PRIMARY KEY (SKILL_ID);

ALTER TABLE EGW_SOR ADD PRIMARY KEY (ID);

ALTER TABLE EGF_CONTRACTPRICEDETAIL ADD PRIMARY KEY (ID);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_MR FOREIGN KEY (MRHEADERID) 
    REFERENCES EGF_MRHEADER (ID);

ALTER TABLE EGPIMS_PROBATION ADD CONSTRAINT FK_PERSONAL_INFORMATION FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_STR FOREIGN KEY (FROMSTOREID) 
    REFERENCES EG_STORES (ID);

ALTER TABLE EGF_MRLINE ADD CONSTRAINT FK_MRL_STR1 FOREIGN KEY (TOSTOREID) 
    REFERENCES EG_STORES (ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT FARY_FK FOREIGN KEY (ID_FUNCTIONARY) 
    REFERENCES FUNCTIONARY (ID);

ALTER TABLE EGW_WORKS_BUDGET ADD PRIMARY KEY (ID);

ALTER TABLE EGF_VOUCHERMIS ADD PRIMARY KEY (ID);

ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FK_COA_AC3 FOREIGN KEY (DEPEXPCODE) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EGPIMS_GRADE_MSTR ADD CONSTRAINT PK_EGPIMS_GRADE PRIMARY KEY (GRADE_ID);

ALTER TABLE EGW_WORKS_DEDUCTIONS ADD CONSTRAINT FK_WD_COA FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID);


ALTER TABLE EGP_SALARY_BILLDETAILS ADD CONSTRAINT FK_SALBD_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);

ALTER TABLE EGP_SALARY_BILLDETAILS ADD CONSTRAINT FK_SBD_COA FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EG_ASSETVALUECHANGE ADD PRIMARY KEY (ID);

ALTER TABLE EG_ASSETVALUECHANGE ADD CONSTRAINT FK_AS_AVC FOREIGN KEY (ASSETID) 
    REFERENCES EG_ASSET (ASSETID);


ALTER TABLE EGPIMS_PROBATION ADD CONSTRAINT FK_POST FOREIGN KEY (ID_POST) 
    REFERENCES EGPIMS_POST_MSTR (ID_POST);

ALTER TABLE EGW_EMDRATES_MASTER ADD CONSTRAINT FK_EMD_USER FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);


ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT PK_EGPIMS_PERSONAL_INFORMATION PRIMARY KEY (ID);

ALTER TABLE EGP_SALARY_BILLDETAILS ADD CONSTRAINT FK_SBD_SC FOREIGN KEY (HEADID) 
    REFERENCES EG_SALARYCODES (ID);

ALTER TABLE EGPIMS_DET_OF_ENQUIRY_OFFICER ADD CONSTRAINT DISCIPLINARY_PUNISHMENT_FK FOREIGN KEY (DISCIPLINARY_PUNISHMENT_ID) 
    REFERENCES EGPIMS_DISCIPLINARY_PUNISHMENT (DISCIPLINARY_PUNISHMENT_ID);

ALTER TABLE EGPIMS_LEAVE_DETAILS_EL ADD CONSTRAINT ID_PERSONAL_INFORMATION_FK_LD FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);


ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_ANNUAL_INCREMENT_ID FOREIGN KEY (ANNUAL_INCREMENT_ID) 
    REFERENCES EGPIMS_ANNUAL_INCREMENT_MSTR (ANNUAL_INCREMENT_ID);

ALTER TABLE OTHERBILLDETAIL ADD CONSTRAINT FK_OBD_VH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EGP_SALARY_BUDGET ADD PRIMARY KEY (ID);

ALTER TABLE EGPIMS_REGULARISATION ADD CONSTRAINT PK_EGPIMS_REGULARISATION PRIMARY KEY (REGULARISATION_ID);

ALTER TABLE EGF_ISSUEREPAIR ADD PRIMARY KEY (ID);

ALTER TABLE EGF_ISSUEREPAIR ADD CONSTRAINT FK_ISR_MRIN FOREIGN KEY (MRINHEADERID) 
    REFERENCES EGF_MRINHEADER (ID);

ALTER TABLE EGF_ISSUEREPAIR ADD CONSTRAINT FK_ISR_USER FOREIGN KEY (ASSETID) 
    REFERENCES EG_ASSET (ASSETID);

ALTER TABLE EGPIMS_REGULARISATION ADD CONSTRAINT FK_ID_PERSONAL_INFORMATION FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT FUNCTION_FK FOREIGN KEY (ID_FUNCTION) 
    REFERENCES FUNCTION (ID);

ALTER TABLE EGW_MBHEADER ADD UNIQUE (MBNO, PAGENO);

ALTER TABLE EGPIMS_REGULARISATION ADD CONSTRAINT FK_POST_REG FOREIGN KEY (ID_POST) 
    REFERENCES EGPIMS_POST_MSTR (ID_POST);

ALTER TABLE EGPIMS_LTC_PIRTICULARS ADD CONSTRAINT PK_EGPIMS_LTC_DETAILS PRIMARY KEY (LTC_DETAILS_ID);

ALTER TABLE EGW_SOR ADD CONSTRAINT FK_SOR_USR1 FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_USR FOREIGN KEY (PREPAREDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_DEPT_TESTS ADD CONSTRAINT ID_PERSONAL_INFORMATION_FK_DT FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);


ALTER TABLE EGW_WORKS_ACTIVITY ADD CONSTRAINT FK_WAT_SOR FOREIGN KEY (SORID) 
    REFERENCES EGW_SOR (ID);

ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_VH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) 
    REFERENCES EGPIMS_CATEGORY_MSTR (CATEGORY_ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT ID_FUND_FK FOREIGN KEY (ID_FUND) 
    REFERENCES FUND (ID);


ALTER TABLE EG_ASSETVALUECHANGE ADD CONSTRAINT FK_VH_AVC FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EGPIMS_TECNICAL_QUALIFICATION ADD CONSTRAINT PK_EGPIMS_TECNICAL_QUL PRIMARY KEY (TECNICAL_QULIFICATION_ID);

ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_USR2 FOREIGN KEY (CREATEDBY) 
    REFERENCES EG_USER (ID_USER);


ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FK_COA_AC4 FOREIGN KEY (REVCODE) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EG_EMP_ASSIGNMENT_PRD ADD CONSTRAINT PK_EG_EMP_ASSIGNMENT_PRD PRIMARY KEY (ID);

ALTER TABLE EG_EMP_ASSIGNMENT_PRD ADD CONSTRAINT ID_EMPLOYEE_FK FOREIGN KEY (ID_EMPLOYEE) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGW_FSDRATES_MASTER ADD PRIMARY KEY (ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT PRD_FK FOREIGN KEY (ID_EMP_ASSIGN_PRD) 
    REFERENCES EG_EMP_ASSIGNMENT_PRD (ID);

ALTER TABLE EG_EMP_ASSIGNMENT ADD CONSTRAINT REPORTS_FK FOREIGN KEY (REPORTS_TO) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EG_AGEING_LIST ADD PRIMARY KEY (ID);

ALTER TABLE EGPIMS_DEPT_TESTS ADD CONSTRAINT NAME_OF_TEST_FK FOREIGN KEY (NAME_OF_TEST_ID) 
    REFERENCES EGPIMS_NAME_OF_TEST_MSTR (NAME_OF_TEST_ID);


ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);

ALTER TABLE EGPIMS_TECHNICAL_GRADES_MSTR ADD CONSTRAINT PK_EGPIMS_TECK_GRADES PRIMARY KEY (TECK_GRADES_ID);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_COMMUNITY_ID FOREIGN KEY (COMMUNITY_ID) 
    REFERENCES EGPIMS_COMMUNITY_MSTR (COMMUNITY_ID);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_GRADE_ID FOREIGN KEY (GRADE_ID) 
    REFERENCES EGPIMS_GRADE_MSTR (GRADE_ID);

ALTER TABLE EGPIMS_DISCIPLINARY_PUNISHMENT ADD CONSTRAINT PK_EGPIMS_DISCIPLINARY_PUN PRIMARY KEY (DISCIPLINARY_PUNISHMENT_ID);

ALTER TABLE EGPIMS_DISCIPLINARY_PUNISHMENT ADD CONSTRAINT PERSONAL_INFORMATION_FK_PUN FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGPIMS_TECNICAL_QUALIFICATION ADD CONSTRAINT ID_PERSONAL_INFORMATION_FK_TQ FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGPIMS_TECNICAL_QUALIFICATION ADD CONSTRAINT SKILL_CON FOREIGN KEY (SKILLID) 
    REFERENCES EGPIMS_SKILL_MSTR (SKILL_ID);

ALTER TABLE EG_ASSET_SALE ADD PRIMARY KEY (ASSET_SALE_ID);

ALTER TABLE OTHERBILLDETAIL ADD PRIMARY KEY (ID);

ALTER TABLE EGPIMS_LTC_PIRTICULARS ADD CONSTRAINT ID_PERSONAL_INFORMATION_FK_LTC FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);


ALTER TABLE EGPIMS_TECHNICAL_GRADES_MSTR ADD CONSTRAINT SKILL_FK FOREIGN KEY (SKILL_ID) 
    REFERENCES EGPIMS_SKILL_MSTR (SKILL_ID);

ALTER TABLE EGW_WORKS_BUDGET ADD CONSTRAINT FK_WBD_BC FOREIGN KEY (BUDGETCODEID) 
    REFERENCES EGF_BUDGETGROUP (ID);

ALTER TABLE EGW_WORKS_BUDGET ADD CONSTRAINT FK_WBD_WM FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);

ALTER TABLE EG_AGEING_LIST ADD CONSTRAINT FK_AL_LUSER FOREIGN KEY (LASTMODIFIEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGF_VOUCHERMIS ADD CONSTRAINT FK_VMIS_BDR FOREIGN KEY (FIELDID) 
    REFERENCES EG_BOUNDARY (ID_BNDRY);

ALTER TABLE EGF_VOUCHERMIS ADD CONSTRAINT FK_VMIS_VH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_LANGUAGES_KNOWN FOREIGN KEY (LANGUAGES_KNOWN_ID) 
    REFERENCES EGPIMS_LANGUAGES_KNOWN_MSTR (LANGUAGES_KNOWN_ID);


ALTER TABLE EGW_WORKS_BUDGET ADD CONSTRAINT FK_WB_FUN FOREIGN KEY (FUNCTIONID) 
    REFERENCES FUNCTION (ID);


ALTER TABLE EGPIMS_HOW_ACQUIRED_MSTR ADD CONSTRAINT PK_EGPIMS_HOW_ACQUIRED PRIMARY KEY (HOW_ACQUIRED_ID);

ALTER TABLE EGPIMS_TYPE_OF_LEAVE_MSTR ADD CONSTRAINT PK_EGPIMS_TYPE_OF_LEAVE PRIMARY KEY (TYPE_OF_LEAVE_ID);

ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_WM FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);

ALTER TABLE EGW_WORKS_DEDUCTIONS ADD CONSTRAINT FK_WD_TDS FOREIGN KEY (TDSID) 
    REFERENCES TDS (ID);


ALTER TABLE EGPIMS_EDU_DETAILS ADD CONSTRAINT PK_EGPIMS_EDUCATION_DETAILS PRIMARY KEY (EDUCATION_DETAILS_ID);

ALTER TABLE BANKENTRIES ADD CONSTRAINT PK_BANKENTRIES PRIMARY KEY (ID);

ALTER TABLE EGW_STATUS ADD PRIMARY KEY (ID);

ALTER TABLE BANKENTRIES ADD CONSTRAINT FKBAID FOREIGN KEY (BANKACCOUNTID) 
    REFERENCES BANKACCOUNT (ID);

ALTER TABLE BANKENTRIES ADD CONSTRAINT FKCOAID FOREIGN KEY (GLCODEID) 
    REFERENCES CHARTOFACCOUNTS (ID);

ALTER TABLE EGPIMS_LANGUAGES_KNOWN_MSTR ADD CONSTRAINT PK_EGPIMS_LANGUAGES_KNOWN PRIMARY KEY (LANGUAGES_KNOWN_ID);


ALTER TABLE EG_ASSETCATEGORY ADD CONSTRAINT FK_COA_AC FOREIGN KEY (CWIPCODE) 
    REFERENCES CHARTOFACCOUNTS (ID);


ALTER TABLE EGPIMS_LANG_KNOWN ADD CONSTRAINT LANGUAGES_KNOWN_ID_FKLK FOREIGN KEY (LANGUAGES_KNOWN_ID) 
    REFERENCES EGPIMS_LANGUAGES_KNOWN_MSTR (LANGUAGES_KNOWN_ID);

ALTER TABLE EGF_ASSET_STATUS ADD CONSTRAINT PK_EGF_ASSET_STATUS PRIMARY KEY (ID);

ALTER TABLE EG_ASSET_SALE ADD CONSTRAINT ASSETSALE_VH FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EGPIMS_BANK_DET ADD CONSTRAINT PK_EGPIMS_BANK_DET PRIMARY KEY (ID_BANK);

ALTER TABLE EGPIMS_TECNICAL_QUALIFICATION ADD CONSTRAINT TECK_GRADES_ID_FK FOREIGN KEY (TECK_GRADES_ID) 
    REFERENCES EGPIMS_TECHNICAL_GRADES_MSTR (TECK_GRADES_ID);


ALTER TABLE EGW_WORKS_DEDUCTIONS ADD CONSTRAINT FK_WD_WM FOREIGN KEY (WORKSDETAILID) 
    REFERENCES WORKSDETAIL (ID);

ALTER TABLE EGW_WORKS_FINANCINGSOUCE ADD PRIMARY KEY (ID);

ALTER TABLE EGW_FSDRATES_MASTER ADD CONSTRAINT FK_FDS_FY FOREIGN KEY (FROMFINANCIALYEARID) 
    REFERENCES FINANCIALYEAR (ID);


ALTER TABLE EGPIMS_LEAVETYPE_DETAILS ADD CONSTRAINT ID_PERSONAL_INFORMATION_TP FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGPIMS_LEAVETYPE_DETAILS ADD CONSTRAINT TYPE_OF_LEAVE_FK FOREIGN KEY (TYPE_OF_LEAVE_ID) 
    REFERENCES EGPIMS_TYPE_OF_LEAVE_MSTR (TYPE_OF_LEAVE_ID);


ALTER TABLE EGW_BILL_DEDUCTIONS ADD PRIMARY KEY (ID);


ALTER TABLE EGW_MBHEADER ADD CONSTRAINT FK_MBH_STAT FOREIGN KEY (STATUSID) 
    REFERENCES EGW_STATUS (ID);


ALTER TABLE EGPIMS_LOCAL_LANG_QUL_MSTR ADD CONSTRAINT PK_EGPIMS_LANGUAGE_QULIFIED PRIMARY KEY (QULIFIED_ID);


ALTER TABLE EGPIMS_MODE_OF_RECRUIMENT_MSTR ADD CONSTRAINT PK_EGPIMS_MODE_OF_RECRUIMENT PRIMARY KEY (MODE_OF_RECRUIMENT_ID);


ALTER TABLE EGPIMS_TRAINING_PIRTICULARS ADD CONSTRAINT PK_EGPIMS_TRAINING_DETAILS PRIMARY KEY (TRAINING_DETAILS_ID);

ALTER TABLE EGW_WORKS_DEDUCTIONS ADD PRIMARY KEY (ID);

ALTER TABLE EGPIMS_NAME_OF_TEST_MSTR ADD CONSTRAINT PK_EGPIMS_NAME_OF_TEST_MSTR PRIMARY KEY (NAME_OF_TEST_ID);


ALTER TABLE BANKENTRIES ADD CONSTRAINT FKVHID FOREIGN KEY (VOUCHERHEADERID) 
    REFERENCES VOUCHERHEADER (ID);

ALTER TABLE EG_APPROVALDETAILS ADD PRIMARY KEY (ID);

ALTER TABLE EG_APPROVALDETAILS ADD CONSTRAINT FK_APD_USR FOREIGN KEY (APPROVEDBY) 
    REFERENCES EG_USER (ID_USER);

ALTER TABLE EGPIMS_LEAVETYPE_DETAILS ADD CONSTRAINT PK_EGPIMS_LEAVE_DETAILS_TYPE PRIMARY KEY (ID_LEAVETYPE);


ALTER TABLE EGPIMS_PAY_FIXED_IN_MSTR ADD CONSTRAINT PK_EGPIMS_PAY_FIXED_IN PRIMARY KEY (PAY_FIXED_IN_ID);


ALTER TABLE EG_ASSET_TYPE ADD CONSTRAINT PKASSETTYPE PRIMARY KEY (ID);


ALTER TABLE EGF_LAND ADD CONSTRAINT PK_EGF_LAND PRIMARY KEY (ID);

ALTER TABLE EGF_MRINPURPOSE ADD CONSTRAINT PK_EGF_MRINPURPOSE PRIMARY KEY (ID);

ALTER TABLE EG_BILLREGISTERMIS ADD CONSTRAINT FK_BRM_BR FOREIGN KEY (BILLID) 
    REFERENCES EG_BILLREGISTER (ID);

ALTER TABLE EGPIMS_EDU_DETAILS ADD CONSTRAINT ID_PERSONAL_INFORMATION_FK_ED FOREIGN KEY (ID) 
    REFERENCES EGPIMS_PERSONAL_INFORMATION (ID);

ALTER TABLE EGPIMS_PERSONAL_INFORMATION ADD CONSTRAINT FK_PAY_FIXED_IN FOREIGN KEY (PAY_FIXED_IN_ID) 
    REFERENCES EGPIMS_PAY_FIXED_IN_MSTR (PAY_FIXED_IN_ID);


ALTER TABLE EGF_INTERSTORETRANSFER ADD PRIMARY KEY (ID);

Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (30, 'Bank Charges');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (29, 'Security Deposit');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (28, 'Contigency Bill Code');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (27, 'Creditors-Supplier Payable');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (26, 'Creditors-Contractor Payable');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (25, 'Assets written off- Stores ');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (24, 'Sale & Hire Charges - sale of store Account');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (23, 'Sales proceeds from Stores Account');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (22, 'Inter-Unit Transfer Account');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (21, 'Fixed Assets Written off');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (20, 'Depreciation On FA');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (19, 'Asset Account Code');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (18, 'Revaluation Reserve Account');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (17, 'Depreciation Expense Account');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (16, 'CWIP Account code');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (15, 'Accumulated Depreciation');
Insert into egf_accountcode_purpose
   (ID, NAME)
 Values
   (14, 'SuspenseCode');


alter table transactionsummary add(lastmodifiedby number,lastmodifieddate date);

alter table transactionsummary add(narration varchar(300));

UPDATE generalledgerdetail gld SET gld.amount=(SELECT gl.debitamount+gl.creditamount FROM generalledger gl WHERE gl.ID=gld.generalledgerid);

ALTER TABLE bankreconciliation add ( recChequeDate date null);

commit;