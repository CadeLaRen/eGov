-- EG_ADDRESS_TYPE_MASTER and eg_address tables are present before this script. ignore error regarding this tables
-- eg_employee,egeis_person_address 	
CREATE TABLE EGEIS_ANNUAL_INCREMENT_MSTR
(
  ANNUAL_INCREMENT_ID     NUMBER(32)            NOT NULL,
  ANNUAL_INCREMENT_VALUE  VARCHAR2(256 BYTE)    NOT NULL,
  START_DATE              DATE,
  END_DATE                DATE
);


CREATE UNIQUE INDEX PK_EGEIS_ANNUAL_INCREMENT ON EGEIS_ANNUAL_INCREMENT_MSTR
(ANNUAL_INCREMENT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_ANNUAL_INCREMENT_MSTR ADD (
  CONSTRAINT PK_EGEIS_ANNUAL_INCREMENT PRIMARY KEY (ANNUAL_INCREMENT_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));


			   
			   
  CREATE TABLE EGEIS_CATEGORY_MSTR
(
  CATEGORY_ID    NUMBER(32)                     NOT NULL,
  CATEGORY_NAME  VARCHAR2(256 BYTE)             NOT NULL,
  START_DATE     DATE,
  END_DATE       DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_CATEGORY ON EGEIS_CATEGORY_MSTR
(CATEGORY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_CATEGORY_MSTR ADD (
  CONSTRAINT PK_EGEIS_CATEGORY PRIMARY KEY (CATEGORY_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



CREATE TABLE EGEIS_COMMUNITY_MSTR
(
  COMMUNITY_ID    NUMBER(32)                    NOT NULL,
  COMMUNITY_NAME  VARCHAR2(256 BYTE)            NOT NULL,
  START_DATE      DATE,
  END_DATE        DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_COMMUNITY ON EGEIS_COMMUNITY_MSTR
(COMMUNITY_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_COMMUNITY_MSTR ADD (
  CONSTRAINT PK_EGEIS_COMMUNITY PRIMARY KEY (COMMUNITY_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



CREATE TABLE EGEIS_GRADE_MSTR
(
  GRADE_ID     NUMBER(32)                       NOT NULL,
  GRADE_VALUE  VARCHAR2(256 BYTE)               NOT NULL,
  START_DATE   DATE,
  END_DATE     DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_GRADE ON EGEIS_GRADE_MSTR
(GRADE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_GRADE_MSTR ADD (
  CONSTRAINT PK_EGEIS_GRADE PRIMARY KEY (GRADE_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



			   CREATE TABLE EGEIS_LANGUAGES_KNOWN_MSTR
(
  LANGUAGES_KNOWN_ID     NUMBER(32)             NOT NULL,
  LANGUAGES_KNOWN_VALUE  VARCHAR2(256 BYTE)     NOT NULL,
  START_DATE             DATE,
  END_DATE               DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_LANGUAGES_KNOWN ON EGEIS_LANGUAGES_KNOWN_MSTR
(LANGUAGES_KNOWN_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_LANGUAGES_KNOWN_MSTR ADD (
  CONSTRAINT PK_EGEIS_LANGUAGES_KNOWN PRIMARY KEY (LANGUAGES_KNOWN_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



			   
			   CREATE TABLE EGEIS_MODE_OF_RECRUIMENT_MSTR
(
  MODE_OF_RECRUIMENT_ID    NUMBER(32)           NOT NULL,
  MODE_OF_RECRUIMENT_NAME  VARCHAR2(256 BYTE)   NOT NULL,
  START_DATE               DATE,
  END_DATE                 DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_MODE_OF_RECRUIMENT ON EGEIS_MODE_OF_RECRUIMENT_MSTR
(MODE_OF_RECRUIMENT_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_MODE_OF_RECRUIMENT_MSTR ADD (
  CONSTRAINT PK_EGEIS_MODE_OF_RECRUIMENT PRIMARY KEY (MODE_OF_RECRUIMENT_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



	
CREATE TABLE EGEIS_PAY_FIXED_IN_MSTR
(
  PAY_FIXED_IN_ID     NUMBER(32)                NOT NULL,
  PAY_FIXED_IN_VALUE  VARCHAR2(256 BYTE)        NOT NULL,
  START_DATE          DATE,
  END_DATE            DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_PAY_FIXED_IN ON EGEIS_PAY_FIXED_IN_MSTR
(PAY_FIXED_IN_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_PAY_FIXED_IN_MSTR ADD (
  CONSTRAINT PK_EGEIS_PAY_FIXED_IN PRIMARY KEY (PAY_FIXED_IN_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));


			   
			   CREATE TABLE EGEIS_RECRUITMENT_TYPE_MSTR
(
  RECRUITMENT_TYPE_ID    NUMBER(32)             NOT NULL,
  RECRUITMENT_TYPE_NAME  VARCHAR2(256 BYTE)     NOT NULL,
  START_DATE             DATE,
  END_DATE               DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_RECRUITMENT_TYPE ON EGEIS_RECRUITMENT_TYPE_MSTR
(RECRUITMENT_TYPE_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_RECRUITMENT_TYPE_MSTR ADD (
  CONSTRAINT PK_EGEIS_RECRUITMENT_TYPE PRIMARY KEY (RECRUITMENT_TYPE_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



CREATE TABLE EGEIS_RELIGION_MSTR
(
  RELIGION_ID     NUMBER(32)                    NOT NULL,
  RELIGION_VALUE  VARCHAR2(256 BYTE)            NOT NULL,
  START_DATE      DATE,
  END_DATE        DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_RELIGION ON EGEIS_RELIGION_MSTR
(RELIGION_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_RELIGION_MSTR ADD (
  CONSTRAINT PK_EGEIS_RELIGION PRIMARY KEY (RELIGION_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



	
CREATE TABLE EGEIS_LOCAL_LANG_QUL_MSTR
(
  QULIFIED_ID    NUMBER(32)                     NOT NULL,
  QULIFIED_NAME  VARCHAR2(256 BYTE)             NOT NULL,
  END_DATE       DATE,
  START_DATE     DATE
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_EGEIS_LANGUAGE_QULIFIED ON EGEIS_LOCAL_LANG_QUL_MSTR
(QULIFIED_ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EGEIS_LOCAL_LANG_QUL_MSTR ADD (
  CONSTRAINT PK_EGEIS_LANGUAGE_QULIFIED PRIMARY KEY (QULIFIED_ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));


	   

CREATE TABLE EG_EMPLOYEE
(
  ID                              NUMBER(32)    NOT NULL,
  CODE                            VARCHAR2(256 BYTE) NOT NULL,
  DATE_OF_BIRTH                   DATE,
  BLOOD_GROUP                     NUMBER(10),
  MOTHER_TONUGE                   VARCHAR2(256 BYTE),
  RELIGION_ID                     NUMBER(32),
  COMMUNITY_ID                    NUMBER(32),
  GENDER                          CHAR(1 BYTE),
  IS_HANDICAPPED                  CHAR(1 BYTE),
  IS_MED_REPORT_AVAILABLE         CHAR(1 BYTE),
  DATE_OF_FIRST_APPOINTMENT       DATE,
  IDENTIFICATION_MARKS1           VARCHAR2(1024 BYTE),
  LANGUAGES_KNOWN_ID              NUMBER(32),
  MODE_OF_RECRUIMENT_ID           NUMBER(32),
  RECRUITMENT_TYPE_ID             NUMBER(32),
  STATUS                          CHAR(1 BYTE),
  CATEGORY_ID                     NUMBER(32),
  QULIFIED_ID                     NUMBER(32),
  SALARY_BANK                     NUMBER(32),
  BANK                            VARCHAR2(256 BYTE),
  SB_ACCOUNT_NUMBER               VARCHAR2(1024 BYTE),
  PAY_FIXED_IN_ID                 NUMBER(32),
  GRADE_ID                        NUMBER(32),
  PRESENT_DESIGNATION             NUMBER(5),
  SCALE_OF_PAY                    VARCHAR2(1024 BYTE),
  BASIC_PAY                       NUMBER(32),
  SPL_PAY                         NUMBER(32),
  PP_SGPP_PAY                     NUMBER(32),
  ANNUAL_INCREMENT_ID             NUMBER(32),
  GPF_AC_NUMBER                   VARCHAR2(1024 BYTE),
  DATE_OF_RETIREMENT              DATE,
  PRESENT_DEPARTMENT              NUMBER(5),
  IF_ON_DUTY_ARRANGMENT_DUTY_DEP  VARCHAR2(256 BYTE),
  LOCATION                        VARCHAR2(256 BYTE),
  COST_CENTER                     VARCHAR2(256 BYTE),
  ID_DEPT                         NUMBER(32),
  ID_USER                         NUMBER(32),
  IS_ACTIVE                       NUMBER(1),
  EMPFATHER_FIRSTNAME             VARCHAR2(256 BYTE),
  EMPFATHER_LASTNAME              VARCHAR2(256 BYTE),
  EMPFATHER_MIDDLENAME            VARCHAR2(256 BYTE),
  EMP_FIRSTNAME                   VARCHAR2(256 BYTE) NOT NULL,
  EMP_LASTNAME                    VARCHAR2(256 BYTE),
  EMP_MIDDLENAME                  VARCHAR2(256 BYTE),
  IDENTIFICATION_MARKS2           VARCHAR2(1024 BYTE),
  PAN_NUMBER                      VARCHAR2(256 BYTE)
);



CREATE UNIQUE INDEX PK_EG_EMPLOYEE ON EG_EMPLOYEE
(ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT PK_EG_EMPLOYEE PRIMARY KEY (ID)
    USING INDEX 
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));




ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT FK_LANGUAGES_KNOWN FOREIGN KEY (LANGUAGES_KNOWN_ID) 
    REFERENCES EGEIS_LANGUAGES_KNOWN_MSTR (LANGUAGES_KNOWN_ID));

ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT FK_MODE_OF_RECRUIMENT FOREIGN KEY (MODE_OF_RECRUIMENT_ID) 
    REFERENCES EGEIS_MODE_OF_RECRUIMENT_MSTR (MODE_OF_RECRUIMENT_ID));


ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT FK_RECRUITMENT_TYPE FOREIGN KEY (RECRUITMENT_TYPE_ID) 
    REFERENCES EGEIS_RECRUITMENT_TYPE_MSTR (RECRUITMENT_TYPE_ID));

ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT FK_RELIGION FOREIGN KEY (RELIGION_ID) 
    REFERENCES EGEIS_RELIGION_MSTR (RELIGION_ID));



ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT PRESENT_DEPT_FK FOREIGN KEY (PRESENT_DEPARTMENT) 
    REFERENCES EG_DEPARTMENT (ID_DEPT));

ALTER TABLE EG_EMPLOYEE ADD (
  CONSTRAINT QULIFIED_ID_FK FOREIGN KEY (QULIFIED_ID) 
    REFERENCES EGEIS_LOCAL_LANG_QUL_MSTR (QULIFIED_ID));


    
    
    
    CREATE TABLE EGEIS_PERSON_ADDRESS
    (
      ID_PERSON_ADDRESS  NUMBER(32)                 NOT NULL,
      ID                 NUMBER(32)                 NOT NULL,
      ID_ADDRESS         NUMBER(32)                 NOT NULL
    )
    TABLESPACE USERS
    PCTUSED    0
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
    LOGGING 
    NOCACHE
    NOPARALLEL
    MONITORING;
    
    
    CREATE UNIQUE INDEX PK_EGEIS_PERSON_ADDRESS ON EGEIS_PERSON_ADDRESS
    (ID_PERSON_ADDRESS)
    LOGGING
    TABLESPACE USERS
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               )
    NOPARALLEL;
    
    
    ALTER TABLE EGEIS_PERSON_ADDRESS ADD (
      CONSTRAINT PK_EGEIS_PERSON_ADDRESS PRIMARY KEY (ID_PERSON_ADDRESS)
        USING INDEX 
        TABLESPACE USERS
        PCTFREE    10
        INITRANS   2
        MAXTRANS   255
        STORAGE    (
                    INITIAL          64K
                    MINEXTENTS       1
                    MAXEXTENTS       2147483645
                    PCTINCREASE      0
                   ));
    
    
    ALTER TABLE EGEIS_PERSON_ADDRESS ADD (
      CONSTRAINT FK_ADD_ID FOREIGN KEY (ID_ADDRESS) 
        REFERENCES EG_ADDRESS (ADDRESSID));
    
    ALTER TABLE EGEIS_PERSON_ADDRESS ADD (
      CONSTRAINT FK_PER_ID FOREIGN KEY (ID) 
        REFERENCES EG_EMPLOYEE (ID));
    
    



--   other scripts
  
  	ALTER TABLE  eg_city_website ADD (cityname VARCHAR2( 256), citynamelocal VARCHAR2(256));
  
 
  CREATE TABLE eg_surrendered_cheques
 (
  		ID NUMBER PRIMARY KEY,
		bankaccountid 	  NUMBER NOT NULL,
		chequenumber	  VARCHAR(20) NOT NULL,
		chequedate		  DATE		   NOT NULL,
		vhid 			  NUMBER NOT NULL,
		lastmodifieddate DATE	 NOT NULL
 );

  CREATE SEQUENCE seq_eg_surrendered_cheques
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

ALTER TABLE eg_surrendered_cheques ADD (
  CONSTRAINT FK_SURC_BA FOREIGN KEY (bankaccountid) 
    REFERENCES bankaccount (ID));

ALTER TABLE eg_surrendered_cheques ADD (
  CONSTRAINT FK_SURC_vh FOREIGN KEY (vhid) 
    REFERENCES voucherheader (ID));




ALTER TABLE eg_department ADD (parentid INTEGER);
ALTER TABLE EG_DEPARTMENT ADD (ISLEAF  INTEGER);

ALTER TABLE EG_USER
  ADD ISACTIVE NUMBER(1);

ALTER TABLE EG_EMPLOYEE
   RENAME COLUMN IS_ACTIVE TO ISACTIVE;
   
   



-- deduction query
CREATE TABLE eg_deduction_details
(
ID NUMBER PRIMARY KEY,
tdsid NUMBER NOT NULL,
partytypeid NUMBER NOT NULL,
doctypeid NUMBER NOT NULL,
docsubtypeid NUMBER,
datefrom DATE,
dateto DATE,
lowlimit NUMERIC(15,2) NOT NULL,
highlimit NUMERIC(15,2),
incometax NUMERIC(5,2),
surcharge NUMERIC(5,2),
education NUMERIC(5,2),
lastmodifieddate DATE
);


CREATE SEQUENCE seq_eg_deduction_details
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

  ALTER TABLE TDS ADD(remitted VARCHAR(100),bsrcode VARCHAR(20));
 ALTER TABLE TDS ADD(description VARCHAR(50));


  ALTER TABLE eg_deduction_details ADD (
  CONSTRAINT FK_TDSD_TDS FOREIGN KEY (tdsid) 
    REFERENCES TDS (ID));
	
	
	
	CREATE TABLE eg_partytype 
	(
	 ID NUMBER PRIMARY KEY,
	 code VARCHAR(20) NOT NULL,
	 parentid NUMBER,
	 description VARCHAR(100) NOT NULL,
	 createdby NUMBER NOT NULL,
	 createddate	  DATE NOT NULL,
	 lastmodifiedby NUMBER,
	 lastmodifieddate DATE
	);

  CREATE SEQUENCE seq_eg_partytype
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


  ALTER TABLE eg_partytype ADD (
  CONSTRAINT FK_PT_PT FOREIGN KEY (parentid) 
    REFERENCES eg_partytype (ID));

ALTER TABLE eg_partytype ADD (
  CONSTRAINT FK_PT_USR FOREIGN KEY (createdby) 
    REFERENCES EG_USER (id_user));
	
	ALTER TABLE eg_partytype ADD (
  CONSTRAINT FK_PT_USR1 FOREIGN KEY (lastmodifiedby) 
    REFERENCES EG_USER (id_user));

ALTER TABLE EGW_TYPEOFWORK ADD(partytypeid NUMBER);

ALTER TABLE EGW_TYPEOFWORK ADD (
  CONSTRAINT FK_TOW_PT FOREIGN KEY (partytypeid) 
    REFERENCES eg_partytype (ID));

	
	CREATE TABLE eg_remittance
	(
	 ID NUMBER PRIMARY KEY,
	 tdsid NUMBER NOT NULL,
	 fundid NUMBER NOT NULL,
	 fyid NUMBER NOT NULL,
	 MONTH NUMBER NOT NULL,
	 paymentvhid NUMBER NOT NULL,
	 createdby NUMBER NOT NULL,
	 createddate	  DATE NOT NULL,
	 lastmodifiedby NUMBER,
	 lastmodifieddate DATE
	);

  CREATE SEQUENCE seq_eg_remittance
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

ALTER TABLE eg_remittance ADD (
  CONSTRAINT FK_RMT_USR FOREIGN KEY (createdby) 
    REFERENCES EG_USER (id_user));
	
ALTER TABLE eg_remittance ADD (
  CONSTRAINT FK_RMT_USR1 FOREIGN KEY (lastmodifiedby) 
    REFERENCES EG_USER (id_user));

ALTER TABLE eg_remittance ADD (
  CONSTRAINT FK_RMT_TDS FOREIGN KEY (tdsid) 
    REFERENCES TDS (ID));

ALTER TABLE eg_remittance ADD (
  CONSTRAINT FK_RMT_FD FOREIGN KEY (fundid) 
    REFERENCES FUND (ID));

ALTER TABLE eg_remittance ADD (
  CONSTRAINT FK_RMT_FY FOREIGN KEY (fyid) 
    REFERENCES FINANCIALYEAR (ID));

CREATE TABLE EG_REMITTANCE_GLDTL
	(
	 ID NUMBER PRIMARY KEY,
	 gldtlid NUMBER NOT NULL,
	 gldtlamt NUMERIC(15,2),
	 paymentvhid NUMBER NOT NULL,
	 lastmodifieddate DATE
	);

	
  CREATE SEQUENCE seq_eg_remittance_gldtl
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;


ALTER TABLE EG_REMITTANCE_GLDTL ADD (
  CONSTRAINT FK_RMTGL_GLD FOREIGN KEY (gldtlid) 
    REFERENCES GENERALLEDGERDETAIL (ID));

  ALTER TABLE EG_REMITTANCE_GLDTL ADD (
  CONSTRAINT FK_RMTGL_VH FOREIGN KEY (paymentvhid) 
    REFERENCES VOUCHERHEADER (ID));

   ALTER TABLE eg_remittance ADD (
  CONSTRAINT FK_RMT_VH FOREIGN KEY (paymentvhid) 
    REFERENCES VOUCHERHEADER (ID));

	
	  ALTER TABLE EGF_ACCOUNT_CHEQUES ADD (allotedto NUMBER);
  
  UPDATE EGF_ACCOUNT_CHEQUES SET allotedto=1;
  
  ALTER TABLE EG_REMITTANCE_GLDTL ADD(remittedamt NUMERIC(15,2));
ALTER TABLE EG_REMITTANCE_GLDTL MODIFY(paymentvhid NULL);


ALTER TABLE eg_deduction_details ADD (
  CONSTRAINT FK_DEDD_FY FOREIGN KEY (partytypeid) 
    REFERENCES eg_partytype (ID));

ALTER TABLE eg_deduction_details ADD (
  CONSTRAINT FK_DEDD_TYPW FOREIGN KEY (doctypeid) 
    REFERENCES EGW_TYPEOFWORK (ID));
	
	ALTER TABLE eg_deduction_details ADD (
  CONSTRAINT FK_DEDD_TYPW1 FOREIGN KEY (docsubtypeid) 
    REFERENCES EGW_TYPEOFWORK (ID));

ALTER TABLE EG_REMITTANCE_GLDTL DROP (paymentvhid);

CREATE TABLE eg_remittance_detail
	(
	 ID NUMBER PRIMARY KEY,
	 remittanceid NUMBER NOT NULL,
	 remittancegldtlid NUMBER NOT NULL,
	 lastmodifieddate DATE
	);
  CREATE SEQUENCE seq_eg_remittance_detail
  START WITH 1
  NOMAXVALUE
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
  


ALTER TABLE eg_deduction_details ADD(amount NUMERIC(15,2));

ALTER TABLE TDS ADD(partytypeid NUMBER);
ALTER TABLE TDS ADD (
  CONSTRAINT FK_TDS_FY FOREIGN KEY (partytypeid) 
    REFERENCES eg_partytype (ID));
    
	    ALTER TABLE MENUTREE ADD SORTID NUMBER;
    
    INSERT INTO EG_ACTION VALUES( 265,'Create Remittance Recovery',NULL,NULL, '16-Nov-2007', NULL); 
    INSERT INTO EG_ACTION VALUES( 266,'View Remittance Recovery',NULL,NULL, '16-Nov-2007', NULL); 
    INSERT INTO EG_ACTION VALUES( 267,'Modify Remittance Recovery',NULL,NULL, '16-Nov-2007', NULL); 
    INSERT INTO MENUTREE VALUES( 351,'Deductions',NULL,NULL,NULL); 
    INSERT INTO MENUTREE VALUES( 352,'Masters',351 ,NULL,NULL); 
    INSERT INTO MENUTREE VALUES( 353,'Remittance Recovery',351 ,NULL,NULL); 
    INSERT INTO MENUTREE VALUES( 355,'Create Remittance Recovery', 353,265,NULL); 
    INSERT INTO MENUTREE VALUES( 356,'View Remittance Recovery', 353,266,NULL); 
    INSERT INTO MENUTREE VALUES( 357,'Modify Remittance Recovery', 353,267,NULL); 
    INSERT INTO EG_ROLEACTION_MAP VALUES( 5,265); 
    INSERT INTO EG_ROLEACTION_MAP VALUES( 5,266); 
    INSERT INTO EG_ROLEACTION_MAP VALUES( 5,267);
    
    INSERT INTO EG_ACTION VALUES(268,'Create Party Type',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO EG_ACTION VALUES(269,'View Party Type',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO EG_ACTION VALUES(270,'Modify Party Type',NULL,NULL,'16-Nov-2007', NULL);
    
    INSERT INTO EG_ACTION VALUES(271,'Create Contract Type',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO EG_ACTION VALUES(272,'View Contract Type',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO EG_ACTION VALUES(273,'Modify Contract Type',NULL,NULL,'16-Nov-2007', NULL);
    
    INSERT INTO EG_ACTION VALUES(274,'Create Recovery',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO EG_ACTION VALUES(275,'View Recovery',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO EG_ACTION VALUES(276,'Modify Recovery',NULL,NULL,'16-Nov-2007', NULL);
    INSERT INTO MENUTREE VALUES(358,'Party Type',352,NULL,NULL);
    INSERT INTO MENUTREE VALUES(359,'Create Party Type',358,268,NULL);
    INSERT INTO MENUTREE VALUES(360,'View Party Type',358,269,NULL);
    INSERT INTO MENUTREE VALUES(361,'Modify Party Type',358,270,NULL);
    
    INSERT INTO MENUTREE VALUES(362,'Contract Type',352,NULL,NULL);
    INSERT INTO MENUTREE VALUES(363,'Create Contract Type',362,271,NULL);
    INSERT INTO MENUTREE VALUES(364,'View Contract Type',362,272,NULL);
    INSERT INTO MENUTREE VALUES(365,'Modify Contract Type',362,273,NULL);
    
    INSERT INTO MENUTREE VALUES(366,'Recovery Master',352,NULL,NULL);
    INSERT INTO MENUTREE VALUES(367,'Create Recovery',366,274,NULL);
    INSERT INTO MENUTREE VALUES(368,'View Recovery',366,275,NULL);
    INSERT INTO MENUTREE VALUES(369,'Modify Recovery',366,276,NULL);
    
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,268);
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,269);
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,270);
    
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,271);
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,272);
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,273);
    
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,274);
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,275);
    INSERT INTO EG_ROLEACTION_MAP VALUES(5,276);



ALTER TABLE eg_deduction_details MODIFY(PARTYTYPEID NULL);
	
ALTER TABLE eg_remittance_detail ADD(REMITTEDAMT NUMBER(15,2));
-- =================   

--
--SQL Statement which produced this data:
--  select *from findevnewcoa.EG_PARTYTYPE where code in('Supplier','Individuals','Contractor')
--
Insert into EG_PARTYTYPE
   (ID, CODE, PARENTID, DESCRIPTION, CREATEDBY, CREATEDDATE, LASTMODIFIEDBY, LASTMODIFIEDDATE)
 Values
   (seq_EG_PARTYTYPE.nextval, 'Supplier', NULL, 'supply materials', 2, 
    sysdate, NULL, NULL);
Insert into EG_PARTYTYPE
   (ID, CODE, PARENTID, DESCRIPTION, CREATEDBY, CREATEDDATE, LASTMODIFIEDBY, LASTMODIFIEDDATE)
 Values
   (seq_EG_PARTYTYPE.nextval, 'Contractor', NULL, 'Contractor', 2, 
    sysdate, 2, TO_DATE('11/12/2007 00:00:00', 'MM/DD/YYYY HH24:MI:SS'));

COMMIT;
-- ===============
 -- infrastructure.2.0.5.jar

ALTER TABLE tds ADD(bankid NUMBER);

ALTER TABLE tds ADD (
  CONSTRAINT FK_TDS_BK FOREIGN KEY (bankid) 
    REFERENCES bank (ID));
-- ======

ALTER TABLE eg_remittance_gldtl ADD(tdsid NUMBER);
ALTER TABLE eg_remittance_gldtl ADD (
  CONSTRAINT FK_RMTGL_TDS FOREIGN KEY (tdsid) 
    REFERENCES tds (ID));

		
INSERT INTO eg_action VALUES(277,'Cheques Received',NULL,NULL,'27-dec-07');

INSERT INTO menutree VALUES(370,'Cheques Received',45,277,NULL);

INSERT INTO eg_roleaction_map VALUES(5,277);
 

 -- INSERT INTO eg_action VALUES(278,'Bank Transaction',NULL,NULL,'21-Jan-08');

-- INSERT INTO menutree VALUES(371,'Bank Transaction',45,278, NULL);

-- INSERT INTO eg_roleaction_map VALUES(5,278);

-- ========

CREATE TABLE EGF_RECEIPT_MIS (
  ID_TRANS_HEADER  NUMBER        NOT NULL,
  FIELDID          NUMBER        NOT NULL,
  FUNDID           NUMBER        NOT NULL,
  SEGMENTID        NUMBER,
  SUB_SEGMENTID    NUMBER,
  FUNCTIONID       NUMBER,
  BILL_NO          VARCHAR2 (30),
  NARRATION        VARCHAR2 (2000),
  ID               NUMBER        NOT NULL,
  ADDRESS          VARCHAR2 (200),
  RECEIPTNO        VARCHAR2 (25),
  VOUCHERHEADERID  NUMBER)
   TABLESPACE USERS
   PCTFREE 10
   INITRANS 1
   MAXTRANS 255
  STORAGE (
   INITIAL 65536
   MINEXTENTS 1
   MAXEXTENTS 2147483645
 )
   NOCACHE;
   
   ALTER TABLE CHEQUEDETAIL ADD (STATUS NUMBER);
   
-- ==============
-- delete creditors recoveries from menu
delete from eg_roleaction_map where  roleid=(SELECT id_ROLE FROM eg_roles where upper(role_name)='SUPER USER')
	    and actionid= (SELECT ID FROM eg_action  where upper(name)='CREDITORS RECOVERIES');
delete from menutree where upper(name)='CREDITORS RECOVERIES' ;		
delete from eg_action where upper(name)='CREDITORS RECOVERIES' ;

-- ================

ALTER TABLE RELATION ADD (PARTYTYPEID  NUMBER);


ALTER TABLE RELATION ADD (SUBTYPEID  NUMBER);

ALTER TABLE RELATION ADD CONSTRAINT FK_PARTYTYPE FOREIGN KEY (PARTYTYPEID) 
    REFERENCES EG_PARTYTYPE (ID);

ALTER TABLE RELATION ADD CONSTRAINT FK_SUBTYPE FOREIGN KEY (SUBTYPEID) 
    REFERENCES EG_PARTYTYPE (ID);


commit;