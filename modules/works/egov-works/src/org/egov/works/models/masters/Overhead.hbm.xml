<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="org.egov.works.models.masters.Overhead"
		table="EGW_OVERHEAD">
		<id name="id" column="ID" type="long" unsaved-value="null">
			<generator class="native">
				<param name="sequence">EGW_OVERHEAD_SEQ</param>
			</generator>
		</id>
		<many-to-one name="createdBy" class="org.egov.lib.rjbac.user.UserImpl" column="CREATED_BY" fetch="select" />
		<many-to-one name="modifiedBy" class="org.egov.lib.rjbac.user.UserImpl" column="MODIFIED_BY" fetch="select"/>
		<property name="createdDate" column="CREATED_DATE" type="timestamp" />
		<property name="modifiedDate" column="MODIFIED_DATE" type="timestamp" />
		<property name="description" column="DESCRIPTION" type="string" />
		<component name="expenditureType" >
			<property name="value" type="string" column="EXPENDITURE_TYPE" />
		</component>
		
		<many-to-one  name="account"/>
		<property name="name" column="NAME" type="string" />
		
		    
    <list name="overheadRates" cascade="all,delete-orphan" fetch="join" >
        	<key column="overhead_id" not-null="true" />
        	<list-index column="MY_OHR_INDEX"/>
        	<one-to-many class="org.egov.works.models.masters.OverheadRate"/>
        </list>
	</class>
	<query name="BY_DATE_AND_TYPE">
		<![CDATA[
     		select o from org.egov.works.models.masters.Overhead as o
                  inner join fetch o.overheadRates as rates                  
                 where ((? between rates.validity.startDate and rates.validity.endDate ) or (rates.validity.startDate<=? and rates.validity.endDate is null)) and o.expenditureType.value=?
    	]]>

	</query>
	
	<query name="OVERHEADS_BY_DATE">
		<![CDATA[
     		select o from org.egov.works.models.masters.Overhead as o
                  inner join fetch o.overheadRates as rates                  
                 where ((? between rates.validity.startDate and rates.validity.endDate ) or (rates.validity.startDate<=? and rates.validity.endDate is null))
    	]]>

	</query>

</hibernate-mapping>
