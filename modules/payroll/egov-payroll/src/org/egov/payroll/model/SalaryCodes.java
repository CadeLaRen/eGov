package org.egov.payroll.model;

// Generated Aug 31, 2007 11:23:00 AM by Hibernate Tools 3.2.0.b9

import java.util.Comparator;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.egov.commons.CChartOfAccounts;
import org.egov.infstr.workflow.Action;
import org.egov.lib.rjbac.user.User;
import org.egov.model.recoveries.Recovery;

/**
 * EgpaySalarycodes generated by hbm2java
 */
public class SalaryCodes implements java.io.Serializable, Comparable {


	private Integer id;

	private SalaryCodes salaryCodes;

	private CChartOfAccounts chartofaccounts;

	private SalaryCategoryMaster categoryMaster;

	private String head;

	private Date createddate;

	private Date lastmodifieddate;

	private String description;

	private char isAttendanceBased;
	
	private char isRecomputed;
	
	private char isRecurring;
	
	private char isTaxable;

	private String calType;

	private Long orderId;

	private Set salaryCodeses = new HashSet(0);

	private User lastmodifiedby;

	private User createdby;
	
	private Recovery tdsId; 
	
	private String localLangDesc;
	
	private CChartOfAccounts interestAccount;
	
	private char captureRate;
	
	//private char isValidateByRule;
	private Action validationRuleScript; 

	


	public SalaryCodes() {
	}


	public SalaryCodes(Integer id, CChartOfAccounts chartofaccounts,
			SalaryCategoryMaster categoryMaster, String head,
			User createdby, Date createddate, User lastmodifiedby,
			Date lastmodifieddate, char isTaxable, String calType, char isAttendanceBased, char isRecomputed, char isRecurring) {
		this.id = id;
		this.chartofaccounts = chartofaccounts;
		this.categoryMaster = categoryMaster;
		this.head = head;
		this.createdby = createdby;
		this.createddate = createddate;
		this.lastmodifiedby = lastmodifiedby;
		this.lastmodifieddate = lastmodifieddate;
		this.isAttendanceBased = isAttendanceBased;
		this.isRecomputed = isRecomputed;
		this.isTaxable = isTaxable;
		this.isRecurring = isRecurring;
		this.calType = calType;
	}


	public SalaryCodes(Integer id, SalaryCodes salaryCodes,
			CChartOfAccounts chartofaccounts,
			SalaryCategoryMaster categoryMaster, String head,
			User createdby, Date createddate, User lastmodifiedby,
			Date lastmodifieddate, String description, char isTaxable,
			String calType, Long orderId, Set salaryCodeses, char isAttendanceBased, char isRecomputed, char isRecurring) {
		this.id = id;
		this.salaryCodes = salaryCodes;
		this.chartofaccounts = chartofaccounts;
		this.categoryMaster = categoryMaster;
		this.head = head;
		this.createdby = createdby;
		this.createddate = createddate;
		this.lastmodifiedby = lastmodifiedby;
		this.lastmodifieddate = lastmodifieddate;
		this.description = description;
		this.isAttendanceBased = isAttendanceBased;
		this.isRecomputed = isRecomputed;
		this.isTaxable = isTaxable;
		this.isRecurring = isRecurring;
		this.calType = calType;
		this.orderId = orderId;
		this.salaryCodeses = salaryCodeses;
	}


	public Integer getId() {

		return this.id;
	}


	public void setId(Integer id) {

		this.id = id;
	}

	public SalaryCodes getSalaryCodes() {
		return this.salaryCodes;
	}

	public void setSalaryCodes(SalaryCodes salaryCodes) {
		this.salaryCodes = salaryCodes;
	}

	public CChartOfAccounts getChartofaccounts() {
		return this.chartofaccounts;
	}

	public void setChartofaccounts(CChartOfAccounts chartofaccounts) {
		this.chartofaccounts = chartofaccounts;
	}

	public SalaryCategoryMaster getCategoryMaster() {
		return this.categoryMaster;
	}

	public void setCategoryMaster(SalaryCategoryMaster categoryMaster) {
		this.categoryMaster = categoryMaster;
	}

	public String getHead() {
		return this.head;
	}

	public void setHead(String head) {
		this.head = head;
	}



	public Date getCreateddate() {
		return this.createddate;
	}

	public void setCreateddate(Date createddate) {
		this.createddate = createddate;
	}



	public User getCreatedby() {
		return createdby;
	}

	public void setCreatedby(User createdby) {
		this.createdby = createdby;
	}

	public User getLastmodifiedby() {
		return lastmodifiedby;
	}

	public void setLastmodifiedby(User lastmodifiedby) {
		this.lastmodifiedby = lastmodifiedby;
	}

	public Date getLastmodifieddate() {
		return this.lastmodifieddate;
	}

	public void setLastmodifieddate(Date lastmodifieddate) {
		this.lastmodifieddate = lastmodifieddate;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public char getIsTaxable() {
		return this.isTaxable;
	}

	public void setIsTaxable(char isTaxable) {
		this.isTaxable = isTaxable;
	}

	public String getCalType() {
		return this.calType;
	}

	public void setCalType(String calType) {
		this.calType = calType;
	}

	public Long getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Long orderId) {
		this.orderId = orderId;
	}

	public Set getSalaryCodeses() {
		return this.salaryCodeses;
	}

	public void setSalaryCodeses(Set salaryCodeses) {
		this.salaryCodeses = salaryCodeses;
	}
	
	public Recovery getTdsId() {
		return tdsId;
	}


	public void setTdsId(Recovery tdsId) {
		this.tdsId = tdsId;
	}
	
	public String getLocalLangDesc() {
		return localLangDesc;
	}


	public void setLocalLangDesc(String localLangDesc) {
		this.localLangDesc = localLangDesc;
	}
	

	public CChartOfAccounts getInterestAccount() {
		return interestAccount;
	}


	public void setInterestAccount(CChartOfAccounts interestAccount) {
		this.interestAccount = interestAccount;
	}


	public int compareTo(Object anotherSalarycode) throws ClassCastException {
	    if (!(anotherSalarycode instanceof SalaryCodes)){
	      throw new ClassCastException("A SalaryCodes object expected.");
	    }
	    String anotherHead = ((SalaryCodes) anotherSalarycode).getHead();  
	    return this.getHead().compareTo(anotherHead);  
	  }

	public static Comparator CategoryComparator = new Comparator() {
	    public int compare(Object salarycode, Object anotherSalarycode) {
	      long sal1 = ((SalaryCodes) salarycode).getCategoryMaster().getId();	      
	      long sal2 = ((SalaryCodes) anotherSalarycode).getCategoryMaster().getId();
	      if(sal1<sal2){
	    	  return -1;
	      }
	      else if(sal1>sal2){
	    	  return 1;
	      }
	      else{
	    	  return 0;	  
	      }
	    }
	 };




	public char getIsAttendanceBased() {
		return isAttendanceBased;
	}


	public void setIsAttendanceBased(char isAttendanceBased) {
		this.isAttendanceBased = isAttendanceBased;
	}


	public char getIsRecomputed() {
		return isRecomputed;
	}


	public void setIsRecomputed(char isRecomputed) {
		this.isRecomputed = isRecomputed;
	}


	public char getIsRecurring() {
		return isRecurring;
	}


	public void setIsRecurring(char isRecurring) {
		this.isRecurring = isRecurring;
	}


	public char getCaptureRate() {
		return captureRate;
	}


	public void setCaptureRate(char captureRate) {
		this.captureRate = captureRate;
	}
	

	public Action getValidationRuleScript() {
		return validationRuleScript;
	}


	public void setValidationRuleScript(Action validationRuleScript) {
		this.validationRuleScript = validationRuleScript;
	}


}
