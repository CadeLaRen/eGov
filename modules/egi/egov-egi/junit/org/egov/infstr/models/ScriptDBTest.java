package org.egov.infstr.models;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.Date;
import java.util.List;

import org.egov.commons.Period;
import org.egov.infstr.utils.DateUtils;
import org.egov.models.AbstractPersistenceServiceTest;
import org.hibernate.criterion.Restrictions;
import org.hibernate.exception.ConstraintViolationException;
import org.junit.Test;

public class ScriptDBTest extends AbstractPersistenceServiceTest<Script, Long> {
	public ScriptDBTest() {
		this.type = Script.class;
	}

	@Test
	public void testSimpleScriptSave() {
		final String bigScript = "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\n"
				+ "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
		final Script script = new Script("works.estimatenumber123", "jruby",
				bigScript);
		this.service.persist(script);
		this.session.flush();
		final Script retrieved = (Script) this.session
				.createCriteria(Script.class)
				.add(Restrictions.eq("name", "works.estimatenumber123"))
				.uniqueResult();
		assertEquals(bigScript, retrieved.getScript());
	}

	@Test(expected = ConstraintViolationException.class)
	public void saveScriptWithEmptyPeriod() {
		assertPeriodSaved(new Period());
	}

	@Test
	public void saveScriptWithPeriod() {
		assertPeriodSaved(new Period(new Date(), new Date()));
	}

	@Test
	public void findByNameFiltersByCurrentDate() {
		final String scriptString = "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
		final Script script1 = new Script("works.estimatenumber123", "jruby",
				scriptString);
		this.service.persist(script1);
		final Script script2 = new Script("works.estimatenumber123", "jruby",
				scriptString);
		script2.setPeriod(new Period(DateUtils.createDate(1945), DateUtils
				.createDate(1948)));
		this.service.persist(script2);
		this.session.flush();
		final List<Script> results = this.service.findAllByNamedQuery(
				Script.BY_NAME, "works.estimatenumber123");
		assertTrue(results.contains(script1));
		assertFalse(results.contains(script2));
	}

	private void assertPeriodSaved(final Period period) {
		final String scriptString = "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
		final Script script = new Script("works.estimatenumber123", "jruby",
				scriptString);
		script.setPeriod(period);
		this.service.persist(script);
		this.session.flush();
		final Script retrieved = (Script) this.session
				.createCriteria(Script.class)
				.add(Restrictions.eq("name", "works.estimatenumber123"))
				.uniqueResult();
		assertEquals(scriptString, retrieved.getScript());
		assertEquals(period.getStartDate(), retrieved.getPeriod()
				.getStartDate());
		assertEquals(period.getEndDate(), retrieved.getPeriod().getEndDate());
	}
}
